[
    {
        "id": "32e6b1c785b786d2",
        "type": "tab",
        "label": "Sonoff Zigbee2Domoticz",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa230766d58b72a8",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Probe to get IPs and Infos",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "ab4957c45c92c798",
            "2ee82fa6912e4647",
            "b6e455fe14a56f37",
            "456f85a85253b02e"
        ],
        "x": 2254,
        "y": 59,
        "w": 622,
        "h": 142
    },
    {
        "id": "812d066c811aa8db",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota data ontvangen",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "cecef8cc8c2c1193",
            "4f9f9724cbeb89b7",
            "5db5c3b67f4218b7",
            "b6ed5f4cd718bf9b",
            "d41f574abdf8c5dd",
            "7f8b0447b2aab70c",
            "2ecc0c65e522d6ab",
            "7e37ed3f80e6353e",
            "7e50ad36620eb3e9",
            "ad071cf746fd4fd2"
        ],
        "env": [],
        "x": 54,
        "y": 1179,
        "w": 672,
        "h": 342
    },
    {
        "id": "bc769b1b3ab8db3f",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Last Seen and Battery Notification",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "54e16cbd001413fd",
            "2dc045fd70544cb5",
            "e157d9879540a216",
            "e9fd972a641bf538",
            "3ca55e67a1a23c62",
            "49984443b00b6a39",
            "93d507cb91268b43"
        ],
        "x": 2254,
        "y": 219,
        "w": 892,
        "h": 162
    },
    {
        "id": "ddaee9b1391688ae",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Manage zigbee bridge",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "738203cee5b7576e",
            "a876b2262d2d8972",
            "5a82ae65dd933d20",
            "d3729f0632afe0c5",
            "70235a8b59920fe7"
        ],
        "env": [],
        "x": 1054,
        "y": 739,
        "w": 913,
        "h": 82
    },
    {
        "id": "054419e6dfea3c5a",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Stuur naar zigbee bridge",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "f3db21b9723e0cfc",
            "37e55389157ed1ad",
            "f7c665cefb19670e",
            "202c7dd66b1fedba",
            "460d09788346164d",
            "1d35990521f7c49c",
            "dc0f5dbb0855a505",
            "bfd99529b3e29427",
            "7a270006242bbfc0",
            "ff5e4e68237fd483",
            "695720e4296db2e6",
            "90ff06fb83d4e97b",
            "b01db5d10adf0ad6",
            "4d29c691a74b2673",
            "474c468923da77f3"
        ],
        "env": [],
        "x": 1054,
        "y": 519,
        "w": 913,
        "h": 202
    },
    {
        "id": "342e272fde205046",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "IDX zigbee tabel",
        "style": {
            "label": true,
            "stroke": "#3f93cf",
            "color": "#3f93cf"
        },
        "nodes": [
            "376768625db0b7b5",
            "2c282dd1ec8d4503",
            "81f07f96a45e1c0a",
            "b78371b5ab34502d",
            "da61aa56340660d7",
            "24d22abc9e1ab60f",
            "7bda4cc6084e4b4b",
            "2bf44a259c619be9",
            "90d3cd9a221a8d81",
            "7d360ac1a9c0face",
            "0dac2a94f75ffde2",
            "8ecb1a7237e6ad5e",
            "3ba3b3d5afc5b7df",
            "39038a9d2681bd20",
            "c729eedde8321077",
            "e506ce49a49f836d",
            "7080191a1def4f03",
            "28b040d3881c0232"
        ],
        "env": [],
        "x": 1994,
        "y": 59,
        "w": 232,
        "h": 742
    },
    {
        "id": "fc3ffea91c83f578",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "leeg maken van flowget  t2ztest",
        "style": {
            "label": true
        },
        "nodes": [
            "e1417a024763e7fe",
            "71c13e1afc67c07c",
            "5dc9a5c207e8575c"
        ],
        "env": [],
        "x": 254,
        "y": 1679,
        "w": 522,
        "h": 82
    },
    {
        "id": "2b14dd6ae297283b",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Set flow.get(tztest) na deploy",
        "style": {
            "label": true,
            "stroke": "#3f93cf",
            "color": "#3f93cf"
        },
        "nodes": [
            "c5c4597ec7e244f2",
            "21c95c5161e18956",
            "56f447df100afcfa",
            "481e845fe0a736c7",
            "8323979a6ecc7569",
            "7473e02c36c330c9",
            "59c69e3ca4cad7cb",
            "9d9cc3cc6fa57133",
            "20ef08116235f529",
            "081b4575f60f755b",
            "589b204a53bdbefa",
            "c0dd3b2da21e23f7",
            "36574a90b5c65556"
        ],
        "env": [],
        "x": 2254,
        "y": 399,
        "w": 1312,
        "h": 162
    },
    {
        "id": "5145f22353cd7b61",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Zigbee tabel idx",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "466516d2d35d133a",
            "2c3829ae941b05df",
            "1a53da933bfd8c5d",
            "b078324fb7eaaff9",
            "810c2c17eb1aa35d",
            "52e4097a46ded523",
            "41a4f1d59a1d6403"
        ],
        "env": [],
        "x": 1054,
        "y": 59,
        "w": 912,
        "h": 122
    },
    {
        "id": "edcd4b20761bc8e4",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Alle zigbee apparaten",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "e669c6020ec33ea2",
            "82b014a353b034a7",
            "943de23188f1e72a",
            "2e6b49ecc2394a78"
        ],
        "env": [],
        "x": 1054,
        "y": 419,
        "w": 912,
        "h": 82
    },
    {
        "id": "54c30edf1af25e1f",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Download knop flows.json",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "2b85d6ecfe7216e8",
            "b34469817cdf7cdc",
            "b3b34d23fc262cfc",
            "8d7042a134b77af5",
            "7e7e2210239d3b41",
            "8da96a20e8d1784e",
            "e2d336891879b581",
            "8aa74c6a8e77e370",
            "5a7d611fb820f67f",
            "19a535f96f40be94",
            "9c27a2105dd41e6b"
        ],
        "env": [],
        "x": 2254,
        "y": 579,
        "w": 1172,
        "h": 122
    },
    {
        "id": "05a2f116f05b8c19",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Herbenoem Zigbee apparaten",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "d33963f3ee2f7ef1",
            "39b828367fc868a1",
            "202da5354877d0e8",
            "e42c3f20342ec925",
            "edea2f707eaa6c2e",
            "21a702d22e35399a",
            "99d5e38aa6a308f7",
            "44be3c4f17a3ac08",
            "07b49abc2e756953"
        ],
        "env": [],
        "x": 1054,
        "y": 199,
        "w": 912,
        "h": 202
    },
    {
        "id": "535a5870e30e1683",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Heiman devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "a7f14c9f10b3d453",
            "d6291551d1852638",
            "6bf493cc359ec5a6",
            "b58fbdd1751a2cd8",
            "2ccae554b0a0eb62",
            "273dbf580278d699"
        ],
        "env": [],
        "x": 2554,
        "y": 864,
        "w": 932,
        "h": 112
    },
    {
        "id": "d8be83a166707012",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Ikea devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "e3c55ccb8b099b3c",
            "54dd8d6bf95fde5b",
            "f73a6f39342779fd",
            "40855101e292585d",
            "0140bb4b0c66e251",
            "34ebad78371bfc78",
            "b80d54c068c87573",
            "b0b36a57add1ac04",
            "4862248cd24ad41a",
            "39bf1ccf5b3a5faf",
            "5b1817084e40c724",
            "f2361df7a8546931",
            "2ae6865e6ac023ef",
            "c5662457d9d1f2ba",
            "f053a430dbc7af77",
            "e71c9c90170608a3",
            "cc69481ddb4239d7",
            "69e480d5a2306292",
            "0c713a7cfa8a5968",
            "a3b9cf15f168221e",
            "fd871c5a92505ca3",
            "f7a424fbfaeca8b8"
        ],
        "env": [],
        "x": 2554,
        "y": 999,
        "w": 1252,
        "h": 222
    },
    {
        "id": "4fd5524e1698f897",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Lidl devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "3d4832ee8bb60568",
            "74078727af5ee2e0",
            "29f4524a41c3bbe4",
            "7f8f8c048a5a9e50",
            "38b2d29beeb9a423",
            "a43480d97601b0b3",
            "cef06f729c47c34b"
        ],
        "env": [],
        "x": 2554,
        "y": 1239,
        "w": 1172,
        "h": 82
    },
    {
        "id": "5ec4681c99127c5e",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Osram devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "1bda201a500415c1",
            "b96a18aebbaf647b",
            "e3ecd92d6e4b4333",
            "b5be4ef2c3766c16",
            "4651c83ecce552f8",
            "fe7e9b046fafa46d",
            "96a9ba30ab4242d6"
        ],
        "env": [],
        "x": 2554,
        "y": 1344,
        "w": 1212,
        "h": 112
    },
    {
        "id": "976cc66a0af82637",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Sonoff devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "86d5e0026f086c83",
            "1b553aedee0d8b08",
            "2dbd724356d3147c",
            "002900a242fa4e2a",
            "cfb396b223e87237",
            "ee9aaf65c819341c",
            "4e8161fd55532c08"
        ],
        "env": [],
        "x": 2554,
        "y": 1464,
        "w": 1192,
        "h": 112
    },
    {
        "id": "539d674a37353134",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "adf1e03e1e45ba46",
            "ba9518b91748cf45",
            "e8b6a0c9bf81e4bc",
            "ad164d166565ab20",
            "902db89cf58e7d4a",
            "93278f76c19d10e5",
            "283b251afd36b91e",
            "943f1135c3828226",
            "996c20a7f43bb922",
            "eb12fa8049a9c2f5",
            "7c39b8f4766d8af2",
            "d37266ca5003002f",
            "81b0bc5b842b0fd9",
            "1f300e21c525ad4d",
            "612c74f54c20b775",
            "36acea7aea3e0385",
            "b371b25fac84c93c",
            "a3c1ee29665026e7",
            "3f1912b0dfd34a67",
            "60902a7262550dc1",
            "507ba46b5bd868d8",
            "620de55a7aed2e0c",
            "6dc6133320d04d9d",
            "6847bc92cfc5190c",
            "96aebd5c66f18d71",
            "27205c55fd92a391",
            "c35a66d7c5a69ec6",
            "a4e976adce8e3559",
            "90f2623d0786a9e3",
            "4b827c89b5a138c4",
            "619657caaabed12e",
            "9ef3e2703e3d169b",
            "8859e1626155ce50",
            "0958e7f86a6f7cfa",
            "d9db49d0d2111c96",
            "b3b7f479cadb8496",
            "330e3c8d4d49643e",
            "577af1c346273217",
            "26e569e6a1eb2867",
            "1a8398e557c7f9dd",
            "74b5fa30a733b173",
            "c9e73ce19c15f214",
            "561150ce2a02c788",
            "6fd9bd11843c641b",
            "898dc4b2f4e31ea8",
            "036b4f949a146d7a",
            "9926f5faf437f4c6",
            "08ad024704865499"
        ],
        "env": [],
        "x": 2554,
        "y": 1584,
        "w": 1312,
        "h": 592
    },
    {
        "id": "fcdf7fc73dd7af70",
        "type": "mqtt out",
        "z": "32e6b1c785b786d2",
        "name": "MQTT Server",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b1bc1db1ae7424c0",
        "x": 1900,
        "y": 1580,
        "wires": []
    },
    {
        "id": "28760220d0b4981f",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota commands",
        "info": "ZbPermitJoin 1 = pairing mode voor 60sec\n\nZbName = Friendly name invoeren\n   voorbeeld: ZbName 0x2590,Test_deurcontact\n   \nZbForget <device> = verwijderen device\n\nChange channel:\nZbConfig {\"Channel\":12}\n\nChange panid:\nZbConfig {\"PanID\":\"0x1A69\"}\nhttps://tasmota.github.io/docs/Commands/#zbconfig",
        "x": 110,
        "y": 160,
        "wires": []
    },
    {
        "id": "adf1e03e1e45ba46",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Deurcontact",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)\n\nCode send by device:\nDevice: \"0x2590\"\nName: \"Test_deurcontact\"\nContact: 0  (0=contact dicht, 1=contact open)\nEndpoint: 1\nLinkQuality: 134",
        "x": 3650,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ba9518b91748cf45",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Beweging",
        "info": "Which domoticz dummy needed:\n- Switch motion (schakelaar beweging)\n\nCode send by device:\nDevice: \"0x11F0\"\nName: \"Test_beweging\"\nOccupancy: 1 (Occupancy 1 = motion, 0 = no motion)\nEndpoint: 1\nLinkQuality: 173",
        "x": 3640,
        "y": 1800,
        "wires": []
    },
    {
        "id": "e8b6a0c9bf81e4bc",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Rookmelder",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)\n\nCode send by device:\n3 messages when pushing test button\n\n*** Bericht 1:***\nDevice: \"0x7460\"\nName: \"Test_rookmelder\"\nModelId: \"lumi.sensor_smoke\"\nEndpoint: 1\nLinkQuality: 157\n\n*** Bericht 2:***\nDevice: \"0x7460\"\nName: \"Test_rookmelder\"\n0500<00: 00000FF0000\nZoneStatusChange: 0\nFire: 0\nEndpoint: 1\nLinkQuality: 157\n\n*** Bericht 3:***\nDevice: \"0x7460\"\nName: \"Test_rookmelder\"\nBatteryVoltage: 3.05\nBatteryPercentage: 100\nSmokeDensity: 0\nEndpoint: 1\nLinkQuality: 157\n",
        "x": 3650,
        "y": 1880,
        "wires": []
    },
    {
        "id": "0f01862f36be38ab",
        "type": "switch",
        "z": "32e6b1c785b786d2",
        "name": "Filter Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "RESULT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LWT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SENSOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "domoticz/out",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STATE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 850,
        "y": 1440,
        "wires": [
            [
                "38309599e8c8d9e1"
            ],
            [
                "57712e7cca74ee29"
            ],
            [
                "7b575e0384d79c38"
            ],
            [
                "42ee16d8e12d67f4"
            ],
            [
                "d7df5ed598257739"
            ],
            [
                "83800a22948e6211"
            ],
            [
                "83166d5da37022e7"
            ],
            [
                "04659a5d4d4881df"
            ],
            [
                "d49bd6378f71a628"
            ]
        ]
    },
    {
        "id": "d4a33985746fb725",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic State",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1600,
        "wires": []
    },
    {
        "id": "38309599e8c8d9e1",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d49bd6378f71a628",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic not in filter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1600,
        "wires": []
    },
    {
        "id": "d7df5ed598257739",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Info1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1440,
        "wires": []
    },
    {
        "id": "83166d5da37022e7",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Info3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1520,
        "wires": []
    },
    {
        "id": "83800a22948e6211",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Info2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1480,
        "wires": []
    },
    {
        "id": "1bda201a500415c1",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram Mini Switch",
        "info": "Which domoticz dummy needed:\n- Selector switch (keuzeschakelaar)\n\nSelector switch setup:\n0   = Off\n10  = Up\n20  = Up: hold\n30  = Up: release\n40  = Circle: click\n50  = Circle: hold\n60  = Circle: release\n70  = Down\n80  = Down: hold\n90  = Down: release\n100 = Standby\n\nCode send by device:\n*** Knop omhoog kort ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0006!01: \"\"\nPower: 1\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop omhoog lang ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0008!03: \"\"\nDimmerStop: true\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop midden kort bericht 1 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0008!04: \"FE0A00\"\nDimmer: 254\nPower: 1\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden kort bericht 2 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0300!0A: \"72010A00\"\nCT:370\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden lang bericht 1 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0300!03: \"FE0200\"\nSat: 254\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden lang bericht 2 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0300!01: \"0119\"\nHueMove: 1\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden lang bericht 3 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0003!01: \"0000\"\nHueMove: 0\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop omlaag kort ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0006!00: \"\"\nPower: 0\nEndpoint: 2\nLinkQuality: 157\n\n*** Knop omlaag lang ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0008!01: \"0126\"\nDimmerMove: 1\nEndpoint: 2\nLinkQuality: 157\n\n",
        "x": 3650,
        "y": 1400,
        "wires": []
    },
    {
        "id": "08ef5d34fa2f5b9a",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "To MQTT Server",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 1540,
        "wires": []
    },
    {
        "id": "ad071cf746fd4fd2",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "add src",
        "func": "msg.src = 'tasmota';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1360,
        "wires": [
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "3d4832ee8bb60568",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl CCT bulb",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)\n\nCode send by device:\nDevice: \"0xAF37\"\nName: \"Test_Lamp\"\nPower: 1\nDimmer: null\nHue: 0\nSat: 254\nX: 45874\nY: 19660\nCT: 153  // 153 = warm white, 500 = cold\nColorMode: 1\nRGB: \"FF0000\"\nRGBb: \"000000\"\nEndpoint: 1\nLinkQuality: 134",
        "x": 3630,
        "y": 1280,
        "wires": []
    },
    {
        "id": "2ecc0c65e522d6ab",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "domoticz/out",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "inputs": 0,
        "x": 170,
        "y": 1480,
        "wires": [
            [
                "7e37ed3f80e6353e"
            ]
        ]
    },
    {
        "id": "7e37ed3f80e6353e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "add src",
        "func": "msg.src = 'domoticz';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 1480,
        "wires": [
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "bf65146bd8d167aa",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1330,
        "y": 1380,
        "wires": [
            [
                "0ec10a8acee78267"
            ]
        ]
    },
    {
        "id": "e4ed3f9404692874",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "MQTT Server",
        "links": [
            "fe1b30e1681a0b63",
            "b6f143479743cebb",
            "996c20a7f43bb922",
            "7c39b8f4766d8af2",
            "1f300e21c525ad4d",
            "38b2d29beeb9a423",
            "b58fbdd1751a2cd8",
            "34ebad78371bfc78",
            "b0b36a57add1ac04",
            "3f1912b0dfd34a67",
            "4651c83ecce552f8",
            "5b1817084e40c724",
            "507ba46b5bd868d8",
            "a4e976adce8e3559",
            "f7a9bdcae6412aef",
            "32e21a68283df2bb",
            "fff088000ef81383",
            "08ad024704865499",
            "70235a8b59920fe7",
            "1b9c54730ad51654",
            "99d5e38aa6a308f7",
            "456f85a85253b02e",
            "dc0f5dbb0855a505",
            "14102d5fc55821a7",
            "714592ea394fdf89",
            "2dbd724356d3147c"
        ],
        "x": 1755,
        "y": 1560,
        "wires": [
            [
                "fcdf7fc73dd7af70",
                "08ef5d34fa2f5b9a"
            ]
        ]
    },
    {
        "id": "57712e7cca74ee29",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic LWT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7b575e0384d79c38",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 1360,
        "wires": [
            [
                "273c9ce4a5f2a5fc",
                "1805c2bdbbc563df",
                "397d1f72ee768ae0"
            ]
        ]
    },
    {
        "id": "273c9ce4a5f2a5fc",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota Json Receive",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ad164d166565ab20",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi door senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].Contact === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].Contact === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 1640,
        "wires": [
            [
                "996c20a7f43bb922"
            ],
            [
                "996c20a7f43bb922"
            ],
            [
                "996c20a7f43bb922"
            ],
            [
                "996c20a7f43bb922"
            ]
        ]
    },
    {
        "id": "902db89cf58e7d4a",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi door sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 1640,
        "wires": []
    },
    {
        "id": "93278f76c19d10e5",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi motion sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 1800,
        "wires": []
    },
    {
        "id": "283b251afd36b91e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi smoke detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].Fire === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].Fire === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n    else {\n\t    msg = updmsg0; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else { \n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 1880,
        "wires": [
            [
                "1f300e21c525ad4d"
            ],
            [
                "1f300e21c525ad4d"
            ],
            [
                "1f300e21c525ad4d"
            ],
            [
                "1f300e21c525ad4d"
            ]
        ]
    },
    {
        "id": "943f1135c3828226",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi smoke detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 1880,
        "wires": []
    },
    {
        "id": "b96a18aebbaf647b",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram mini switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 1400,
        "wires": []
    },
    {
        "id": "74078727af5ee2e0",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl Livarno CCT Bulb",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n       \n    \tif ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false};\n            }\n\t\t    else {\n    \t\t    msg = null;\n            }\n\t    }\n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n        return [msg, linkmsg];\t\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n\tvar level = (msg.payload.Level * 2.54);\n\tvar color;\n\t\t\n    if (msg.payload.Color.t === null) {\n        color = (153);    \n    } \n    else {\n        color = ((msg.payload.Color.t * 1.37) + 153);\n    }\n    if ( msg.payload.nvalue === 1) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n\t\treturn [msg, null];\n    } else if ( msg.payload.nvalue === 0) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msg, null];\n    }\n    else {\n        var msgcol = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"CT\":color}}};\n        var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n        return [msgcol, msglev];\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 1280,
        "wires": [
            [
                "38b2d29beeb9a423"
            ],
            [
                "38b2d29beeb9a423"
            ]
        ]
    },
    {
        "id": "29f4524a41c3bbe4",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl Livarno CCT Bulb",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a7f14c9f10b3d453",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "535a5870e30e1683",
        "name": "Heiman CO detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].CO === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].CO === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 920,
        "wires": [
            [
                "b58fbdd1751a2cd8"
            ],
            [
                "b58fbdd1751a2cd8"
            ],
            [
                "b58fbdd1751a2cd8"
            ],
            [
                "b58fbdd1751a2cd8"
            ]
        ]
    },
    {
        "id": "d6291551d1852638",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "535a5870e30e1683",
        "name": "Heiman CO detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 920,
        "wires": []
    },
    {
        "id": "e3c55ccb8b099b3c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743 remote",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxper = msg.payload.ZbReceived.idxper;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n    var topicname = msg.payload.ZbReceived.topicname;\n\n    var level;\n    var percmsg;\n    var linkmsg;\n    var askbat;\n    var valuebatperc;\n    var valuelink;\n\n    function askbatidxlink() {\n        askbat = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\": zigbeeid,\"Read\":{\"BatteryPercentage\":false}}};\n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n    }\n    \n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n        }\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n            \n        if (msg.payload.ZbReceived[zigbeeid].Power === 0) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"0\"};\n            askbatidxlink();\n        }\n        else if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n            askbatidxlink();    \n        } \n        else if (msg.payload.ZbReceived[zigbeeid].DimmerMove === 0) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n            askbatidxlink();    \n        }\n        else if (msg.payload.ZbReceived[zigbeeid].DimmerMove === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n            askbatidxlink();    \n        }\n        else if (msg.payload.ZbReceived[zigbeeid].DimmerStop === true) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n            askbatidxlink();   \n        } \n        else {\n         \tmsg = null;\n        }\n    \n        if ( idxper !== 0 ) {\n            if (valuebatperc !== undefined) {\n                percmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n                msg = null;\n                askbat = null;\n                linkmsg = null;\n            } else {\n                percmsg = null;\n            }\n        } else {\n            percmsg = null;\n        }\n        return [msg, percmsg, linkmsg, askbat];\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxperinfo = msg.payload.ZbInfo.idxper;\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var percmsginfo;\n    var linkmsginfo;\n    var valuebatpercinfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatpercinfo = msg.payload.ZbInfo[zigbeeidinfo].BatteryPercentage;\n        }\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxperinfo !== 0 ) {\n            if (valuebatpercinfo !== undefined) {\n                percmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxperinfo , \"svalue\": \"\" + valuebatpercinfo + \"\", \"parse\": false}}; \n            } else {\n                percmsginfo = null;\n            }\n        } else {\n            percmsginfo = null;\n        }\n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, percmsginfo, linkmsginfo, null];\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 1160,
        "wires": [
            [
                "34ebad78371bfc78"
            ],
            [
                "34ebad78371bfc78"
            ],
            [
                "34ebad78371bfc78"
            ],
            [
                "fd871c5a92505ca3"
            ]
        ]
    },
    {
        "id": "54dd8d6bf95fde5b",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743 remote",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 1160,
        "wires": []
    },
    {
        "id": "42ee16d8e12d67f4",
        "type": "switch",
        "z": "32e6b1c785b786d2",
        "name": "IDX check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "idx",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1400,
        "wires": [
            [
                "bf65146bd8d167aa"
            ],
            [
                "ae0c40229b700502"
            ]
        ]
    },
    {
        "id": "ae0c40229b700502",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "no IDX availble",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1420,
        "wires": []
    },
    {
        "id": "1805c2bdbbc563df",
        "type": "gate",
        "z": "32e6b1c785b786d2",
        "name": "Gate",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1650,
        "y": 1360,
        "wires": [
            [
                "d3750fa1f4bdc266",
                "0ec10a8acee78267"
            ]
        ]
    },
    {
        "id": "3b9a33f80d8918c6",
        "type": "change",
        "z": "32e6b1c785b786d2",
        "name": "Set Control",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1240,
        "wires": [
            [
                "6f07890f180e41d6"
            ]
        ]
    },
    {
        "id": "6f07890f180e41d6",
        "type": "trigger",
        "z": "32e6b1c785b786d2",
        "name": "",
        "op1": "",
        "op2": "open",
        "op1type": "pay",
        "op2type": "str",
        "duration": "3000",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1420,
        "y": 1240,
        "wires": [
            [
                "1805c2bdbbc563df"
            ]
        ]
    },
    {
        "id": "1d935a19c2d48baa",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Block-gate-in",
        "links": [
            "0ded517531ee02b6",
            "38b2d29beeb9a423",
            "b0b36a57add1ac04"
        ],
        "x": 1075,
        "y": 1240,
        "wires": [
            [
                "3b9a33f80d8918c6"
            ]
        ]
    },
    {
        "id": "d3750fa1f4bdc266",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Gate block",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 1240,
        "wires": []
    },
    {
        "id": "e3ecd92d6e4b4333",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram mini switch",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\t\n\t//Up\n    if (msg.payload.ZbReceived[zigbeeid][\"0006!01\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 1 && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n    }\n    //Up hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!05\"] === \"0026\" && msg.payload.ZbReceived[zigbeeid].DimmerMove === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n    }\n    //Up release\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!03\"] === \"\" && msg.payload.ZbReceived[zigbeeid].DimmerStop === true && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n    }\n    //Circle\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!04\"] === \"FE0A00\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n    }\n    //Circle hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0300!01\"] === \"0119\" && msg.payload.ZbReceived[zigbeeid].HueMove === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"50\"};\n    }\n    //Circle release\n    else if (msg.payload.ZbReceived[zigbeeid][\"0300!01\"] === \"0000\" && msg.payload.ZbReceived[zigbeeid].HueMove === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"60\"};\n    }\n    //Down\n    else if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 2 && msg.payload.ZbReceived[zigbeeid].Power === 0) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"70\"};\n    }\n    //Down hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!01\"] === \"0126\" && msg.payload.ZbReceived[zigbeeid].DimmerMove === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"80\"};\n    }\n    //Down release\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!03\"] === \"\" && msg.payload.ZbReceived[zigbeeid].DimmerStop === true && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"90\"};\n    } \n    else {\n        msg = null;\n    }\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 1400,
        "wires": [
            [
                "4651c83ecce552f8"
            ],
            [
                "4651c83ecce552f8"
            ],
            [
                "4651c83ecce552f8"
            ],
            [
                "4651c83ecce552f8"
            ]
        ]
    },
    {
        "id": "c279eb08d2518c16",
        "type": "flogger",
        "z": "32e6b1c785b786d2",
        "name": "",
        "logfile": "T2Z-flogger-logfile.txt",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "f6ad6c620c7a1df8",
        "sendpane": "",
        "x": 2290,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "f73a6f39342779fd",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743",
        "info": "Which domoticz dummy needed:\n- Selector switch (keuzeschakelaar)\n\nWhich domoticz dummy for battery:\n- Percentage dummy (device CAN'T do voltage)\n\n\nSelector switch setup:\n0  = Off\n10 = On\n20 = On: hold\n30 = Off: hold\n40 = Hold: stop\n\nCode send by device:\n*** Knop streepje kort ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0006!01: \"\"\nPower: 1\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop rondje kort ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0006!00: \"\"\nPower: 0\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop streepje lang ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0008!05: \"0053\"\nDimmerMove: 0\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop streepje lang release ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\n0008!07: \"\"\nDimmerStop: true\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop rondje lang ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0008!01: \"01530000\"\nDimmermove: 1\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop rondje lang release ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0008!07: \"\"\nDimmerStop: true\nEndpoint: 1\nLinkQuality: 157\n\n",
        "x": 3630,
        "y": 1160,
        "wires": []
    },
    {
        "id": "40855101e292585d",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 led strip",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3350,
        "y": 1040,
        "wires": []
    },
    {
        "id": "996c20a7f43bb922",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi doorsensor out",
        "mode": "link",
        "links": [
            "e4ed3f9404692874",
            "eb12fa8049a9c2f5"
        ],
        "x": 3115,
        "y": 1640,
        "wires": []
    },
    {
        "id": "eb12fa8049a9c2f5",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi doorsensor in",
        "links": [
            "4b827c89b5a138c4",
            "996c20a7f43bb922"
        ],
        "x": 3175,
        "y": 1640,
        "wires": [
            [
                "902db89cf58e7d4a"
            ]
        ]
    },
    {
        "id": "7c39b8f4766d8af2",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi motion sensor out",
        "mode": "link",
        "links": [
            "d37266ca5003002f",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d37266ca5003002f",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi motion sensor in",
        "links": [
            "7c39b8f4766d8af2",
            "9ef3e2703e3d169b"
        ],
        "x": 3175,
        "y": 1800,
        "wires": [
            [
                "93278f76c19d10e5"
            ]
        ]
    },
    {
        "id": "81b0bc5b842b0fd9",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi smoke detector in",
        "links": [
            "1f300e21c525ad4d",
            "0958e7f86a6f7cfa"
        ],
        "x": 3175,
        "y": 1880,
        "wires": [
            [
                "943f1135c3828226"
            ]
        ]
    },
    {
        "id": "1f300e21c525ad4d",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi smoke detector out",
        "mode": "link",
        "links": [
            "81b0bc5b842b0fd9",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1880,
        "wires": []
    },
    {
        "id": "b5be4ef2c3766c16",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram mini switch in",
        "links": [
            "4651c83ecce552f8",
            "fe7e9b046fafa46d"
        ],
        "x": 3175,
        "y": 1400,
        "wires": [
            [
                "b96a18aebbaf647b"
            ]
        ]
    },
    {
        "id": "4651c83ecce552f8",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram mini switch out",
        "mode": "link",
        "links": [
            "b5be4ef2c3766c16",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7f8f8c048a5a9e50",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl Livarno CCT in",
        "links": [
            "38b2d29beeb9a423",
            "a43480d97601b0b3"
        ],
        "x": 3175,
        "y": 1280,
        "wires": [
            [
                "29f4524a41c3bbe4"
            ]
        ]
    },
    {
        "id": "38b2d29beeb9a423",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl Livarno CCT out",
        "mode": "link",
        "links": [
            "1d935a19c2d48baa",
            "7f8f8c048a5a9e50",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6bf493cc359ec5a6",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "535a5870e30e1683",
        "name": "Heiman CO in",
        "links": [
            "b58fbdd1751a2cd8",
            "2ccae554b0a0eb62"
        ],
        "x": 3175,
        "y": 920,
        "wires": [
            [
                "d6291551d1852638"
            ]
        ]
    },
    {
        "id": "b58fbdd1751a2cd8",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "535a5870e30e1683",
        "name": "Heiman CO out",
        "mode": "link",
        "links": [
            "6bf493cc359ec5a6",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 920,
        "wires": []
    },
    {
        "id": "0140bb4b0c66e251",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743 in",
        "links": [
            "34ebad78371bfc78",
            "f053a430dbc7af77"
        ],
        "x": 3175,
        "y": 1160,
        "wires": [
            [
                "54dd8d6bf95fde5b"
            ]
        ]
    },
    {
        "id": "34ebad78371bfc78",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743 out",
        "mode": "link",
        "links": [
            "0140bb4b0c66e251",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1160,
        "wires": []
    },
    {
        "id": "b80d54c068c87573",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 in",
        "links": [
            "b0b36a57add1ac04",
            "cc69481ddb4239d7"
        ],
        "x": 3175,
        "y": 1040,
        "wires": [
            [
                "40855101e292585d"
            ]
        ]
    },
    {
        "id": "b0b36a57add1ac04",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 out",
        "mode": "link",
        "links": [
            "1d935a19c2d48baa",
            "b80d54c068c87573",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1040,
        "wires": []
    },
    {
        "id": "612c74f54c20b775",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM Temp sensor",
        "info": "Which domoticz dummy needed:\n- Temp+Hum+Baro\n\n\ntele/tasmota_9467D4/SENSOR : msg.payload : Object\nobject\nZbReceived: object\n0x4C81: object\nDevice: \"0x4C81\"\nName: \"Temp_woonkamer\"\nTemperature: 20.78\nHumidity: 59.98\nPressure: 995\nPressureScale: -1\nPressureScaledValue: 9957\nSeaPressure: 995\nEndpoint: 1\nLinkQuality: 149\n\n20.68;54.87;0;996;0\n\nhttps://www.domoticz.com/wiki/Domoticz_API/JSON_URL's#Temperature.2Fhumidity.2Fbarometer",
        "x": 3700,
        "y": 2040,
        "wires": []
    },
    {
        "id": "36acea7aea3e0385",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi WSDCGQ11LM temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n    var temp = (Math.round(tempdummy * 10))/10.0;\n    var hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n    var humstat = 0;\n    if ( hum < 30 ) {\n        humstat = 2;\n    }\n    else if (( hum >= 30) && ( hum <= 45))  {\n        humstat = 0;\n    }\n    else if (( hum >= 46) && ( hum <= 70))  {\n        humstat = 1;\n    }\n    else {\n        humstat = 3;\n    }\n    var bar = msg.payload.ZbReceived[zigbeeid].Pressure;\n    if (temp !== undefined && hum !== undefined && bar !== undefined) {\n        msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \";\" + bar + \";0\"}};\n    } else {\n        msg = null;\n    }    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 2040,
        "wires": [
            [
                "3f1912b0dfd34a67"
            ],
            [
                "3f1912b0dfd34a67"
            ],
            [
                "3f1912b0dfd34a67"
            ],
            [
                "3f1912b0dfd34a67"
            ]
        ]
    },
    {
        "id": "b371b25fac84c93c",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3380,
        "y": 2040,
        "wires": []
    },
    {
        "id": "a3c1ee29665026e7",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM in",
        "links": [
            "3f1912b0dfd34a67",
            "b3b7f479cadb8496"
        ],
        "x": 3175,
        "y": 2040,
        "wires": [
            [
                "b371b25fac84c93c"
            ]
        ]
    },
    {
        "id": "3f1912b0dfd34a67",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "a3c1ee29665026e7",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 2040,
        "wires": []
    },
    {
        "id": "4862248cd24ad41a",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 led strip",
        "info": "Which domoticz dummy needed:\n- Switch dimmer (schakelaar dimmer)\n\nCode send by device:\nDevice: \"0x3743\"\nName: \"Lamp kleding\"\nDimmer: 25\nPower: 1 (or 0 when lamp off)\nEndpoint: 1\nLinkQuality: 134",
        "x": 3670,
        "y": 1040,
        "wires": []
    },
    {
        "id": "39bf1ccf5b3a5faf",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea Powerplug",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\"};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\"};\n            }\n\t\t    else {\n    \t\t    msg = null;\n\t\t    }\n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var linkmsginfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, linkmsginfo];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n    if ( msg.payload.nvalue === 1) {\n        var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n        return [msgpow1, null];\n    } else if ( msg.payload.nvalue === 0) {\n        var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msgpow0, null];//\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2780,
        "y": 1100,
        "wires": [
            [
                "5b1817084e40c724"
            ],
            [
                "5b1817084e40c724"
            ]
        ]
    },
    {
        "id": "5b1817084e40c724",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea powerplug out",
        "mode": "link",
        "links": [
            "e4ed3f9404692874",
            "f2361df7a8546931"
        ],
        "x": 3115,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f2361df7a8546931",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea powerplug in",
        "links": [
            "5b1817084e40c724",
            "0c713a7cfa8a5968"
        ],
        "x": 3175,
        "y": 1100,
        "wires": [
            [
                "2ae6865e6ac023ef"
            ]
        ]
    },
    {
        "id": "2ae6865e6ac023ef",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea powerplug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3320,
        "y": 1100,
        "wires": []
    },
    {
        "id": "60902a7262550dc1",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi GZCGQ01LM lux-sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n    var lux = msg.payload.ZbReceived[zigbeeid].Illuminance\n\tif (lux !== undefined) {\n        msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + lux + \"\"}};\n    } else {\n        msg = null;\n    }    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;    \n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2830,
        "y": 1720,
        "wires": [
            [
                "507ba46b5bd868d8"
            ],
            [
                "507ba46b5bd868d8"
            ],
            [
                "507ba46b5bd868d8"
            ],
            [
                "507ba46b5bd868d8"
            ]
        ]
    },
    {
        "id": "507ba46b5bd868d8",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi GZCGQ01LM lux-sensor out",
        "mode": "link",
        "links": [
            "620de55a7aed2e0c",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1720,
        "wires": []
    },
    {
        "id": "620de55a7aed2e0c",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi GZCGQ01LM lux-sensor in",
        "links": [
            "507ba46b5bd868d8",
            "577af1c346273217"
        ],
        "x": 3175,
        "y": 1720,
        "wires": [
            [
                "6dc6133320d04d9d"
            ]
        ]
    },
    {
        "id": "6dc6133320d04d9d",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi GZCGQ01LM lux-sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3370,
        "y": 1720,
        "wires": []
    },
    {
        "id": "6847bc92cfc5190c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi WSDCGQ01LM temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n    var temp = (Math.round(tempdummy * 10))/10.0;\n    var hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n    var humstat = 0;\n    if ( hum < 30 ) {\n        humstat = 2;\n    }\n    else if (( hum >= 30) && ( hum <= 45))  {\n        humstat = 0;\n    }\n    else if (( hum >= 46) && ( hum <= 70))  {\n        humstat = 1;\n    }\n    else {\n        humstat = 3;\n    }\n    if (temp !== undefined && hum !== undefined) {\n        msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \"\"}};\n    } else {\n        msg = null;\n    }    \n    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else { \n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2850,
        "y": 1960,
        "wires": [
            [
                "a4e976adce8e3559"
            ],
            [
                "a4e976adce8e3559"
            ],
            [
                "a4e976adce8e3559"
            ],
            [
                "a4e976adce8e3559"
            ]
        ]
    },
    {
        "id": "96aebd5c66f18d71",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ01LM Temp sensor",
        "info": "Which domoticz dummy needed:\n- Temp+Hum",
        "x": 3700,
        "y": 1960,
        "wires": []
    },
    {
        "id": "27205c55fd92a391",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ01LM tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3380,
        "y": 1960,
        "wires": []
    },
    {
        "id": "c35a66d7c5a69ec6",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM in",
        "links": [
            "1a8398e557c7f9dd",
            "a4e976adce8e3559"
        ],
        "x": 3175,
        "y": 1960,
        "wires": [
            [
                "27205c55fd92a391"
            ]
        ]
    },
    {
        "id": "a4e976adce8e3559",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "c35a66d7c5a69ec6",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1960,
        "wires": []
    },
    {
        "id": "90f2623d0786a9e3",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi GZCGQ01LM lux sensor",
        "info": "Which domoticz dummy needed:\n- Lux",
        "x": 3690,
        "y": 1720,
        "wires": []
    },
    {
        "id": "c5662457d9d1f2ba",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Xiaomi Ikea Powerplug",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)",
        "x": 3660,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4b827c89b5a138c4",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi doorsensor passtrue in",
        "mode": "link",
        "links": [
            "619657caaabed12e",
            "eb12fa8049a9c2f5"
        ],
        "x": 2595,
        "y": 1640,
        "wires": []
    },
    {
        "id": "619657caaabed12e",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi doorsensor passtrue out",
        "links": [
            "4b827c89b5a138c4"
        ],
        "x": 2655,
        "y": 1640,
        "wires": [
            [
                "ad164d166565ab20"
            ]
        ]
    },
    {
        "id": "9ef3e2703e3d169b",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi motion passtrue in",
        "mode": "link",
        "links": [
            "8859e1626155ce50",
            "d37266ca5003002f"
        ],
        "x": 2595,
        "y": 1800,
        "wires": []
    },
    {
        "id": "8859e1626155ce50",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi motion passtrue out",
        "links": [
            "9ef3e2703e3d169b"
        ],
        "x": 2655,
        "y": 1800,
        "wires": [
            [
                "036b4f949a146d7a"
            ]
        ]
    },
    {
        "id": "0958e7f86a6f7cfa",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi smoke passtrue in",
        "mode": "link",
        "links": [
            "81b0bc5b842b0fd9",
            "d9db49d0d2111c96"
        ],
        "x": 2595,
        "y": 1880,
        "wires": []
    },
    {
        "id": "d9db49d0d2111c96",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi smoke passtrue out",
        "links": [
            "0958e7f86a6f7cfa"
        ],
        "x": 2655,
        "y": 1880,
        "wires": [
            [
                "283b251afd36b91e"
            ]
        ]
    },
    {
        "id": "fe7e9b046fafa46d",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram mini switch passtrue in",
        "mode": "link",
        "links": [
            "96a9ba30ab4242d6",
            "b5be4ef2c3766c16"
        ],
        "x": 2595,
        "y": 1400,
        "wires": []
    },
    {
        "id": "96a9ba30ab4242d6",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "5ec4681c99127c5e",
        "name": "Osram mini switch passtrue out",
        "links": [
            "fe7e9b046fafa46d"
        ],
        "x": 2655,
        "y": 1400,
        "wires": [
            [
                "e3ecd92d6e4b4333"
            ]
        ]
    },
    {
        "id": "a43480d97601b0b3",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl Livarno CCT passtrue in",
        "mode": "link",
        "links": [
            "7f8f8c048a5a9e50",
            "cef06f729c47c34b"
        ],
        "x": 2595,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cef06f729c47c34b",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "4fd5524e1698f897",
        "name": "Lidl Livarno CCT passtrue out",
        "links": [
            "a43480d97601b0b3"
        ],
        "x": 2655,
        "y": 1280,
        "wires": [
            [
                "74078727af5ee2e0"
            ]
        ]
    },
    {
        "id": "2ccae554b0a0eb62",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "535a5870e30e1683",
        "name": "Heiman CO passtrue in",
        "mode": "link",
        "links": [
            "273dbf580278d699",
            "6bf493cc359ec5a6"
        ],
        "x": 2595,
        "y": 920,
        "wires": []
    },
    {
        "id": "273dbf580278d699",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "535a5870e30e1683",
        "name": "Heiman CO passtrue out",
        "links": [
            "2ccae554b0a0eb62"
        ],
        "x": 2655,
        "y": 920,
        "wires": [
            [
                "a7f14c9f10b3d453"
            ]
        ]
    },
    {
        "id": "f053a430dbc7af77",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743 passtrue in",
        "mode": "link",
        "links": [
            "0140bb4b0c66e251",
            "e71c9c90170608a3",
            "372ad568c052f2cc"
        ],
        "x": 2595,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e71c9c90170608a3",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea E1743 passtrue out",
        "links": [
            "f053a430dbc7af77"
        ],
        "x": 2655,
        "y": 1160,
        "wires": [
            [
                "e3c55ccb8b099b3c"
            ]
        ]
    },
    {
        "id": "cc69481ddb4239d7",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 LED passtrue in",
        "mode": "link",
        "links": [
            "69e480d5a2306292",
            "b80d54c068c87573"
        ],
        "x": 2595,
        "y": 1040,
        "wires": []
    },
    {
        "id": "69e480d5a2306292",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 LED passtrue out",
        "links": [
            "cc69481ddb4239d7"
        ],
        "x": 2655,
        "y": 1040,
        "wires": [
            [
                "f7a424fbfaeca8b8"
            ]
        ]
    },
    {
        "id": "b3b7f479cadb8496",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM temp passtrue in",
        "mode": "link",
        "links": [
            "330e3c8d4d49643e",
            "a3c1ee29665026e7"
        ],
        "x": 2595,
        "y": 2040,
        "wires": []
    },
    {
        "id": "330e3c8d4d49643e",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM temp passtrue out",
        "links": [
            "b3b7f479cadb8496"
        ],
        "x": 2655,
        "y": 2040,
        "wires": [
            [
                "36acea7aea3e0385"
            ]
        ]
    },
    {
        "id": "0c713a7cfa8a5968",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea Powerplug passtrue in",
        "mode": "link",
        "links": [
            "a3b9cf15f168221e",
            "f2361df7a8546931"
        ],
        "x": 2595,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a3b9cf15f168221e",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Xiaomi Power plug passtrue out",
        "links": [
            "0c713a7cfa8a5968"
        ],
        "x": 2655,
        "y": 1100,
        "wires": [
            [
                "39bf1ccf5b3a5faf"
            ]
        ]
    },
    {
        "id": "577af1c346273217",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi GZCGQ01LM Lux passtrue in",
        "mode": "link",
        "links": [
            "26e569e6a1eb2867",
            "620de55a7aed2e0c"
        ],
        "x": 2595,
        "y": 1720,
        "wires": []
    },
    {
        "id": "26e569e6a1eb2867",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi GZCGQ01LM Lux passtrue out",
        "links": [
            "577af1c346273217"
        ],
        "x": 2655,
        "y": 1720,
        "wires": [
            [
                "60902a7262550dc1"
            ]
        ]
    },
    {
        "id": "1a8398e557c7f9dd",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ01LM temp passtrue in",
        "mode": "link",
        "links": [
            "74b5fa30a733b173",
            "c35a66d7c5a69ec6"
        ],
        "x": 2595,
        "y": 1960,
        "wires": []
    },
    {
        "id": "74b5fa30a733b173",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ01LM temp passtrue out",
        "links": [
            "1a8398e557c7f9dd"
        ],
        "x": 2655,
        "y": 1960,
        "wires": [
            [
                "6847bc92cfc5190c"
            ]
        ]
    },
    {
        "id": "28f9407743c02b71",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Flogger link",
        "links": [],
        "x": 2175,
        "y": 1660,
        "wires": [
            [
                "c279eb08d2518c16"
            ]
        ]
    },
    {
        "id": "c9e73ce19c15f214",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Watersensor passtrue in",
        "mode": "link",
        "links": [
            "561150ce2a02c788",
            "898dc4b2f4e31ea8"
        ],
        "x": 2595,
        "y": 2120,
        "wires": []
    },
    {
        "id": "561150ce2a02c788",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Watersensor passtrue out",
        "links": [
            "c9e73ce19c15f214"
        ],
        "x": 2655,
        "y": 2120,
        "wires": [
            [
                "9926f5faf437f4c6"
            ]
        ]
    },
    {
        "id": "6fd9bd11843c641b",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Watersensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 2120,
        "wires": []
    },
    {
        "id": "898dc4b2f4e31ea8",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi Watersensor in",
        "links": [
            "c9e73ce19c15f214",
            "08ad024704865499"
        ],
        "x": 3175,
        "y": 2120,
        "wires": [
            [
                "6fd9bd11843c641b"
            ]
        ]
    },
    {
        "id": "fd871c5a92505ca3",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "",
        "pauseType": "delay",
        "timeout": "1800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2980,
        "y": 1180,
        "wires": [
            [
                "34ebad78371bfc78"
            ]
        ]
    },
    {
        "id": "a7479fa3f6b2cba5",
        "type": "change",
        "z": "32e6b1c785b786d2",
        "name": "Set Control Ikea 1743",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1200,
        "wires": [
            [
                "5b88abafacecbe59"
            ]
        ]
    },
    {
        "id": "372ad568c052f2cc",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Block-gate-overrule-open",
        "links": [
            "f053a430dbc7af77"
        ],
        "x": 1075,
        "y": 1200,
        "wires": [
            [
                "a7479fa3f6b2cba5"
            ]
        ]
    },
    {
        "id": "5b88abafacecbe59",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1420,
        "y": 1200,
        "wires": [
            [
                "1805c2bdbbc563df"
            ]
        ]
    },
    {
        "id": "f7a424fbfaeca8b8",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "d8be83a166707012",
        "name": "Ikea ICPSHC24 led strip",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\", \"parse\": false};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\", \"parse\": false};\n            }\n\t\t    else {\n    \t\t    msg = null;\n\t\t    }\n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n        var ZigbeeID = msg.payload.zigbeeid\n        var level = (msg.payload.Level * 2.54);\n        var topicname = msg.payload.topicname;\n        if ( msg.payload.nvalue === 1) {\n            var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n            return [msgpow1, null];\n        } else if ( msg.payload.nvalue === 0) {\n            var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n            return [msgpow0, null];//\n        }\n        else {\n            var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n            return [null, msglev];\n        }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 1040,
        "wires": [
            [
                "b0b36a57add1ac04"
            ],
            [
                "b0b36a57add1ac04"
            ]
        ]
    },
    {
        "id": "036b4f949a146d7a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": " Xiaomi motion senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar idxextra = msg.payload.ZbReceived.idxextra;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar extramsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\nvar valuelum;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    //Set value Illuminance idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"Illuminance\")) {\n        valuelum = msg.payload.ZbReceived[zigbeeid].Illuminance;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].Occupancy === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        }\n        else {\n            msg = null;\n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].Occupancy === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    if ( idxextra !== 0 ) {\n        if (valuelum !== undefined) {\n            extramsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxextra , \"svalue\": \"\" + valuelum + \"\", \"parse\": false}}; \n        } else {\n            extramsg = null;\n        }\n    } else {\n        extramsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg, extramsg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2800,
        "y": 1800,
        "wires": [
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ]
        ]
    },
    {
        "id": "397d1f72ee768ae0",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota Json Receive",
        "mode": "link",
        "links": [],
        "x": 1295,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ccf0ce108a646aba",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "E1743 + Powerplug bat+link",
        "func": "var getflow = flow.keys();\nvar topicname;\n\nfor ( var i = 0; i < getflow.length; i++ ) {\n    var zigbeedevice = getflow[i]; //geeft het zigbee ID\n    var digits = (zigbeedevice.substring(0,2));\n    if (digits == \"0x\") {\n      topicname = flow.get(zigbeedevice)[1]; //geeft array0\n      msg.topic = \"cmnd/\" + topicname + \"/ZbInfo\"\n      msg.payload = zigbeedevice;\n      node.send(msg);\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1560,
        "wires": [
            [
                "fff088000ef81383"
            ]
        ]
    },
    {
        "id": "5754549a4a868ca2",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Not in the tasmota ID filter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7f8b0447b2aab70c",
        "type": "switch",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "Filter data",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ZbReceived",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "ZbInfo",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 440,
        "y": 1400,
        "wires": [
            [
                "ad071cf746fd4fd2"
            ],
            [
                "7e50ad36620eb3e9"
            ],
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "7e50ad36620eb3e9",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "add src",
        "func": "msg.src = 'tasmotainfo';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1400,
        "wires": [
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "fff088000ef81383",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "",
        "mode": "link",
        "links": [
            "e4ed3f9404692874"
        ],
        "x": 1695,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a2fceb2efb4f1b06",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "V_01-04-2022_R1",
        "info": "01-04-2022 R1:\n- Optie om de custom domoticz pagina in te stellen toegevoegd\n22-03-2022 R1:\n- Finetuning van de aanpassing van 19-03-2022 R1\n19-03-2022 R1:\n\nNIET ZOMAAR UPDATEN, LEES AANPASSING 1 VAN DEZE RELEASE\n\n- Device aanduiding uit elkaar gehaald, was voorheen 1 veld met merk+type, dit zijn nu 2 losse velden. \n  HIERDOOR KAN JE NIET ZOMAAR UPDATEN, JE BACKUP ZAL FOUTIEF WORDEN INGELEZEN\n  Of alles opnieuw invoeren, of de backup handmatig aanpassen. \n\n- Actuele versie balk in UI toegevoegd\n- Ikea Powerplug Wordt nu ook gefaked voor link quality waarden\n- Flogger file wordt nu ook in de map opgeslagen waar de data file met idx nummer staat\n- Sonoff SNZB-01 switch toegevoegd\n10-03-2022 R1:\n- Beta versie is verwijdert, we zijn live\n- Release notes functie toegevoegd in UI\n- Bug voor automatisch toevoegen ikea E1743 opgelost\n07-03-2022 R1 Beta:\n- Check van versienummer controleert op response 200 of 201, anders return false\n06-03-2022 R1 Beta:\n- Download flows.json wordt nu opgeslagen met versie naam\n05-03-2022 R2 Beta:\n- Je kan nu per zigbee bridge een command sturen\n- Kleur/text verandert bij een beschikbare update\n05-03-2022 R1 Beta:\n- Ikea 1743 doet nu auto update flow.set na import nieuwe flow of idx set\n04-03-2022 R1 Beta:\n- Toevoegen van nodered UI tbx idx tabel\n28-02-2022 R2:\n- Tasmota zigbee UI toegevoegd\n28-02-2022 R1:\n- Bug Ikea LED Strip opgelost, bij power 0 stuurt deze nu ook een 0 ipv 1\n27-02-2022 R1:\n- Batterijtrigger aangepast van \"true\" naar \"false\", dit lijkt effect te hebben op het aantal response meldingen van het device\n26-02-2022 R1: \n- Ikea powerplug, link naar gate verwijdert\n- Batterijtrigger voor E1743 aangepast, want deze stopte soms vanzelf.\n22-02-2022 R1: \n- Node.send for ikea E1743 voor linkage updates\n- Bug Ikea Powerplug opgelost, bij power 0 stuurt deze nu ook een 0 ipv 1\n19-02-2022 R1: \n- Xiaomi Water sensor toegevoegd, niet getest\n17-02-2022 R1: \n- Gestart met Versie nummers",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "9926f5faf437f4c6",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi water sensor (niet getest)",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].WATER === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].WATER === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 2120,
        "wires": [
            [
                "08ad024704865499"
            ],
            [
                "08ad024704865499"
            ],
            [
                "08ad024704865499"
            ],
            [
                "08ad024704865499"
            ]
        ]
    },
    {
        "id": "08ad024704865499",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "539d674a37353134",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "898dc4b2f4e31ea8",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 2120,
        "wires": []
    },
    {
        "id": "135bbe3e1b66aca2",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 1640,
        "wires": [
            [
                "749058221c88e34a"
            ]
        ]
    },
    {
        "id": "749058221c88e34a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "//msg = {\"topic\":\"tele/tasmota_963592/SENSOR\",\"payload\":{\"ZbReceived\":{\"0xC7CB\":{\"Device\":\"0xC7CB\",\"Name\": \"Remote_kledingkast\", \"0006!00\": \"\", \"Power\": 0, \"Endpoint\": 1, \"LinkQuality\": 157}}}};\nmsg = {\"topic\":\"tele/tasmota_96373D/SENSOR\",\"payload\":{\"ZbReceived\":{\"0x48B9\":{\"Device\":\"0x48B9\",\"Name\": \"Remote_kledingkast\", \"0006!00\": \"\", \"Power\": 0, \"Endpoint\": 1, \"LinkQuality\": 157}}}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1640,
        "wires": [
            [
                "f5acc65f2453f2f1"
            ]
        ]
    },
    {
        "id": "f5acc65f2453f2f1",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "04659a5d4d4881df",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 1560,
        "wires": [
            [
                "baeb620c32d87004",
                "d4a33985746fb725"
            ]
        ]
    },
    {
        "id": "baeb620c32d87004",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "var minuts = msg.payload.Time\nvar array = minuts.split(\":\");\nvar value = parseFloat(array[1]);\nif (value < 5) {\n    msg.payload = value;\n} else {\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1560,
        "wires": [
            [
                "ccf0ce108a646aba"
            ]
        ]
    },
    {
        "id": "09abadaf9cac5387",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "store Tasmota Info",
        "func": "var devs; \n\nif ( msg.src === 'restore' ) {\n    devs = flow.get(\"tasmotas\") || {};\n    return {payload:Object.values(devs)};\n} else {\n\n    devs = flow.get(\"tasmotas\") || {};\n\n    // extract devname\n    let devName = msg.topic.split(\"/\")[1];\n\n    // get dev by name\n    let dev = devs[devName] || {};\n    dev.lastTime = new Date().getTime();\n\n    // extract data from msg\n    if (msg.topic.includes(\"SENSOR\")) {\n        if (msg.payload.ZbReceived !== undefined) {\n            dev.zigbee = true;\n        } else {\n            dev.zigbee = false;\n            return;\n        }\n    } else if (msg.topic.includes(\"STATE\")) {\n        dev.STATE = msg.payload;  \n    } else if (msg.topic.includes(\"STATUS5\")) {\n        dev.STATUS5 = msg.payload; \n        dev.link = \"<a href=http://\"+msg.payload.StatusNET.IPAddress+\" target=\\\"_blank\\\">\"+devName+\"</a>\";\n    } else if (msg.topic.includes(\"STATUS2\")) {\n        dev.STATUS2 = msg.payload;  \n    } else if (msg.topic.includes(\"INFO2\")) {\n        dev.INFO2 = msg.payload; \n        dev.link = \"<a href=http://\"+msg.payload.IPAddress+\" target=\\\"_blank\\\">\"+devName+\"</a>\";\n    } else if (msg.payload.ZbState !== undefined) {\n        dev.ZbState = msg.payload.ZbState;  \n        dev.zigbee = true;\n    } \n\n    // set name/link\n    dev.name = devName;\n    if (dev.link === undefined) dev.link = dev.name;\n   \n    // calc last seen\n    Object.entries(devs).forEach(element => element[1].seen = Math.round((new Date().getTime()-element[1].lastTime)/60000)+\"m\");\n\n   // write back\n   devs[devName] = dev;\n   flow.set(\"tasmotas\", devs);\n\n   return {payload:Object.values(devs)};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 640,
        "wires": [
            [
                "738203cee5b7576e",
                "f7c665cefb19670e"
            ]
        ]
    },
    {
        "id": "d08da6060205cd88",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "store zigbee sensors",
        "func": "var devs; \n\nif ( msg.src === 'restore' ) {\n    devs = flow.get(\"t2zdevices\") || {};\n    return [{payload:Object.values(devs)}];\n} else if (msg.payload.ZbReceived === undefined) {\n    return;\n} else {\n\n\n    // properties that should  show up in the status\n    var inStatus = [\"Contact\", \"Occupancy\", \"Power\", \"Power2\", \"Dimmer\", \"Hue\", \"CT\", \"ColorMode\", \"Sat\", \"RGB\", \"RGBb\", \"Temperature\", \"Humidity\", \"Pressure\", \"LocalTemperature\", \"OccupiedHeatingSetpoint\", \"PIHeatingDemand\", \"Illuminance\", \"AqaraVibrationMode\", \"AqaraVibrationsOrAngle\", \"AqaraVibration505\", \"ZoneStatusChange\", \"AqaraCube\", \"AqaraCubeSide\", \"AqaraCubeFromSide\", \"AqaraRotate\"];\n\n    // properties that should not show up in the status\n    var notStatus = [\"Device\", \"Name\", \"BatteryVoltage\", \"BatteryPercentage\", \"LinkQuality\", \"Endpoint\", \"bridge\", \"lastTime\", \"seen\", \"label\", \"status\", \"EurotronicErrors\", \"0201/4008\", \"Xiaomi_64\"];\n\n    //node.warn(msg.payload);\n    devs = flow.get(\"t2zdevices\") || {};\n\n    var receivedSensors = []\n    for (var devN in msg.payload.ZbReceived) {\n        let devInfo = msg.payload.ZbReceived[devN];\n        let ID = devInfo.Device;\n    \n        // get dev by ID\n        let dev = devs[ID] || {};\n\n        for (let prop in devInfo) {\n            dev[prop] = devInfo[prop];\n        }\n    \n        if (devInfo.Name!==undefined) {\n            dev.label = devInfo.Name;\n        } else {\n            dev.label = ID; \n        }\n        dev.bridge = msg.topic.split(\"/\")[1];\n        dev.lastTime = new Date().getTime();\n    \n        // create status from properties\n        let status = \"\";\n        for (let prop in dev) {\n            if (inStatus.includes(prop)) {\n                status += \" \"+prop+\": \"+ dev[prop]; \n            }\n        }\n        if (status === \"\") {\n            for (let prop in dev) {\n                if (! notStatus.includes(prop)) {\n                    status += \" \"+prop+\": \"+ dev[prop]; \n                }\n            }   \n        }\n        dev.status = status;\n    \n        // write back\n        devs[ID] = dev;\n       receivedSensors.push(dev);\n    }\n   \n    Object.entries(devs).forEach(element => element[1].seen = Math.round((new Date().getTime()-element[1].lastTime)/60000)+\"m\");\n    \n    flow.set(\"t2zdevices\", devs);\n\n    //return [{payload:Object.values(devs)}, {payload:receivedSensors}];\n    return [{payload:Object.values(devs)}];\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "e669c6020ec33ea2",
                "39b828367fc868a1"
            ]
        ]
    },
    {
        "id": "275d25c96252a9db",
        "type": "catch",
        "z": "32e6b1c785b786d2",
        "name": "",
        "scope": [
            "4f9f9724cbeb89b7"
        ],
        "uncaught": false,
        "x": 2310,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ab4957c45c92c798",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "Send probe",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "14400",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "ds",
        "payloadType": "str",
        "x": 2370,
        "y": 100,
        "wires": [
            [
                "2ee82fa6912e4647"
            ]
        ]
    },
    {
        "id": "2ee82fa6912e4647",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "Probe status",
        "func": "\nvar msg1 = { topic:\"cmnd/sonoffs/STATUS\", payload:\"5\" };\nvar msg2 = { topic:\"cmnd/tasmotas/STATUS\", payload:\"5\" };\nvar msg3 = { topic:\"cmnd/sonoffs/STATUS\", payload:\"2\" };\nvar msg4 = { topic:\"cmnd/tasmotas/STATUS\", payload:\"2\" };\nreturn [ [msg1, msg2, msg3, msg4] ];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 100,
        "wires": [
            [
                "b6e455fe14a56f37",
                "456f85a85253b02e"
            ]
        ]
    },
    {
        "id": "b6e455fe14a56f37",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2760,
        "y": 160,
        "wires": []
    },
    {
        "id": "cecef8cc8c2c1193",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "tele/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 190,
        "y": 1400,
        "wires": [
            [
                "4f9f9724cbeb89b7",
                "7f8b0447b2aab70c"
            ]
        ]
    },
    {
        "id": "4f9f9724cbeb89b7",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 1300,
        "wires": [
            [
                "d08da6060205cd88",
                "a7f044e8e2c649b1",
                "09abadaf9cac5387"
            ]
        ]
    },
    {
        "id": "5db5c3b67f4218b7",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "stat/+/STATUS5",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 1280,
        "wires": [
            [
                "4f9f9724cbeb89b7"
            ]
        ]
    },
    {
        "id": "b6ed5f4cd718bf9b",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "tele/+/INFO2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "4f9f9724cbeb89b7"
            ]
        ]
    },
    {
        "id": "d41f574abdf8c5dd",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "stat/+/STATUS2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "4f9f9724cbeb89b7"
            ]
        ]
    },
    {
        "id": "54e16cbd001413fd",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Check LastSeen and Battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "18000",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2430,
        "y": 260,
        "wires": [
            [
                "2dc045fd70544cb5",
                "49984443b00b6a39"
            ]
        ]
    },
    {
        "id": "2dc045fd70544cb5",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Check Zigbee lastseen and Battery",
        "func": "\nvar devs = flow.get(\"t2zdevices\") || {};\n\nvar warning = \"\";\nfor (var devN in devs) {\n    let devInfo = devs[devN];\n    //node.warn(devInfo.seen + \" \" + devInfo.BatteryPercentage);\n    if (devInfo.BatteryPercentage !== undefined && devInfo.BatteryPercentage < 25) {\n         //node.warn(devInfo.Name + \" Battery Low: \" + devInfo.BatteryPercentage);\n         warning += \"\\t\" + devInfo.Name + \" battery low : \" + devInfo.BatteryPercentage + \"%\\n\"\n    }\n    if (parseInt(devInfo.seen) > 720) {\n         //node.warn(devInfo.Name + \" seems offline: \" + devInfo.seen);\n         warning += \"\\t\" + devInfo.Name + \" seems offline: \" + devInfo.seen + \"\\n\"\n    }\n}\n\n//node.warn(warning);\nif (warning !== \"\") {\n    msg.payload = \"Zigbee Devices: \" + warning;\n    msg.sound = \"none\";\n    return msg;\n}\n\nreturn null;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 260,
        "wires": [
            [
                "e157d9879540a216",
                "93d507cb91268b43"
            ]
        ]
    },
    {
        "id": "e157d9879540a216",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "position": "top left",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Device Warning!",
        "x": 3040,
        "y": 260,
        "wires": []
    },
    {
        "id": "e9fd972a641bf538",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Add your own notification service here:",
        "info": "",
        "x": 2670,
        "y": 340,
        "wires": []
    },
    {
        "id": "3ca55e67a1a23c62",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Check Tasmota lastseen",
        "func": "\n\nvar devs = flow.get(\"tasmotas\") || {};\n\nvar warning = \"\";\nfor (var devN in devs) {\n    let devInfo = devs[devN];\n    //node.warn(devInfo.name + \" \" + devInfo.seen);\n    if (parseInt(devInfo.seen) > 60) {\n         //node.warn(devInfo.name + \" seems offline: \" + devInfo.seen);\n         warning += \"\\t\" + devInfo.name + \" seems offline: \" + devInfo.seen + \"\\n\"\n    }\n}\n\n//node.warn(warning);\nif (warning !== \"\") {\n    msg.payload = \"Tasmota Devices: \" + warning;\n    msg.sound = \"none\";\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 300,
        "wires": [
            [
                "e157d9879540a216",
                "93d507cb91268b43"
            ]
        ]
    },
    {
        "id": "49984443b00b6a39",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2480,
        "y": 300,
        "wires": [
            [
                "3ca55e67a1a23c62"
            ]
        ]
    },
    {
        "id": "93d507cb91268b43",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "SensorsProblem Notification",
        "links": [
            "764cb81e.ab379"
        ],
        "x": 2975,
        "y": 300,
        "wires": []
    },
    {
        "id": "738203cee5b7576e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "filter Zigbee Bridges",
        "func": "let zbBridges = msg.payload.filter(function(el) {\n      return el.zigbee === true;\n  })\n\nmsg.payload = zbBridges;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 780,
        "wires": [
            [
                "5a82ae65dd933d20"
            ]
        ]
    },
    {
        "id": "a876b2262d2d8972",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "",
        "label": "PermitJoin",
        "tooltip": "",
        "place": "",
        "group": "ab17d46e1b772514",
        "order": 11,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "oldname",
        "topicType": "str",
        "className": "",
        "x": 1630,
        "y": 780,
        "wires": [
            [
                "d3729f0632afe0c5"
            ]
        ]
    },
    {
        "id": "5a82ae65dd933d20",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "extract devicenames",
        "func": "msg.options = msg.payload.map(obj => {\n   return obj.name;\n});\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 780,
        "wires": [
            [
                "a876b2262d2d8972",
                "460d09788346164d"
            ]
        ]
    },
    {
        "id": "d3729f0632afe0c5",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "permitJoin",
        "func": "\nmsg.topic = \"cmnd/\"+msg.payload+\"/ZbPermitJoin\";\nmsg.payload = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 780,
        "wires": [
            [
                "70235a8b59920fe7"
            ]
        ]
    },
    {
        "id": "f3db21b9723e0cfc",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "func": "if (msg.topic === \"link\") {\n    return;\n}\n\nif (msg.topic === \"del\") {\n    var devs = flow.get(\"tasmotas\") || {};\n    delete devs[msg.payload.name];\n    msg.topic = \"Bridge: \" + msg.payload.name + \" is verwijdert.\";\n    msg.payload = \"Sonoff bridge is niet buiten werking gezet, alleen verwijdert op deze pagina.\"\n    return msg;\n}\n\nmsg.topic = msg.payload.name;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 560,
        "wires": [
            [
                "37e55389157ed1ad",
                "202c7dd66b1fedba"
            ]
        ]
    },
    {
        "id": "37e55389157ed1ad",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Tasmota Device Info",
        "x": 1720,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f7c665cefb19670e",
        "type": "ui_table",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "group": "ab17d46e1b772514",
        "name": "Tasmota bridges",
        "order": 4,
        "width": 10,
        "height": 3,
        "columns": [
            {
                "field": "link",
                "title": "Name",
                "width": "28%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATE.Wifi.RSSI",
                "title": "RSSI",
                "width": "14%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "14%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ZbState.Message",
                "title": "Zb Status",
                "width": "45%",
                "align": "right",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Verwijder",
                "width": "25%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1160,
        "y": 560,
        "wires": [
            [
                "f3db21b9723e0cfc"
            ]
        ]
    },
    {
        "id": "8ecb1a7237e6ad5e",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2110,
        "y": 180,
        "wires": [
            [
                "3ba3b3d5afc5b7df"
            ]
        ]
    },
    {
        "id": "3ba3b3d5afc5b7df",
        "type": "file",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "Save to file",
        "filename": "/home/pi/domoticz/plugins/tasmota2zigbee/zigbeeidxtabel.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 2110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c5c4597ec7e244f2",
        "type": "file in",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "Read file",
        "filename": "/home/pi/domoticz/plugins/tasmota2zigbee/zigbeeidxtabel.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2500,
        "y": 480,
        "wires": [
            [
                "21c95c5161e18956"
            ]
        ]
    },
    {
        "id": "21c95c5161e18956",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2630,
        "y": 480,
        "wires": [
            [
                "7473e02c36c330c9"
            ]
        ]
    },
    {
        "id": "56f447df100afcfa",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "Tijd sync",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 2360,
        "y": 480,
        "wires": [
            [
                "c5c4597ec7e244f2"
            ]
        ]
    },
    {
        "id": "481e845fe0a736c7",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3310,
        "y": 520,
        "wires": []
    },
    {
        "id": "e1417a024763e7fe",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "fc3ffea91c83f578",
        "name": "",
        "func": "flow.set(\"t2ztable\", \"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1720,
        "wires": [
            [
                "5dc9a5c207e8575c"
            ]
        ]
    },
    {
        "id": "71c13e1afc67c07c",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "fc3ffea91c83f578",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 1720,
        "wires": [
            [
                "e1417a024763e7fe"
            ]
        ]
    },
    {
        "id": "5dc9a5c207e8575c",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "fc3ffea91c83f578",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1720,
        "wires": []
    },
    {
        "id": "376768625db0b7b5",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "Apparaat",
        "tooltip": "",
        "place": "",
        "group": "9493153c6a285be5",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "device",
        "topicType": "str",
        "className": "",
        "x": 2140,
        "y": 620,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "2c282dd1ec8d4503",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "IDX nummer",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idx",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 380,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "81f07f96a45e1c0a",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Kies merk device",
        "group": "9493153c6a285be5",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Heiman",
                "value": "Heiman",
                "type": "str"
            },
            {
                "label": "Ikea",
                "value": "Ikea",
                "type": "str"
            },
            {
                "label": "Lidl",
                "value": "Lidl",
                "type": "str"
            },
            {
                "label": "Osram",
                "value": "Osram",
                "type": "str"
            },
            {
                "label": "Sonoff",
                "value": "Sonoff",
                "type": "str"
            },
            {
                "label": "Xiaomi",
                "value": "Xiaomi",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "vendor",
        "topicType": "str",
        "className": "",
        "x": 2100,
        "y": 260,
        "wires": [
            [
                "24d22abc9e1ab60f",
                "e506ce49a49f836d"
            ]
        ]
    },
    {
        "id": "b78371b5ab34502d",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "group": "9493153c6a285be5",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Set settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "str",
        "x": 2110,
        "y": 580,
        "wires": [
            [
                "24d22abc9e1ab60f",
                "7d360ac1a9c0face"
            ]
        ]
    },
    {
        "id": "da61aa56340660d7",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "Clear",
        "func": "flow.set(\"renameZigbee\", {});\ndelete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 720,
        "wires": [
            [
                "81f07f96a45e1c0a",
                "2c282dd1ec8d4503",
                "7bda4cc6084e4b4b",
                "2bf44a259c619be9",
                "90d3cd9a221a8d81",
                "0dac2a94f75ffde2",
                "28b040d3881c0232"
            ]
        ]
    },
    {
        "id": "24d22abc9e1ab60f",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "Set Device settings",
        "func": "var data1 = context.get(\"data1\") || null; //get from context or default to 0\nvar data2 = context.get(\"data2\") || 0; //get from context or default to 0\nvar data3 = context.get(\"data3\") || 0; //get from context or default to 0\nvar data4 = context.get(\"data4\") || 0; //get from context or default to 0\nvar data5 = context.get(\"data5\") || 0; //get from context or default to 0\nvar data6 = context.get(\"data6\") || 0; //get from context or default to 0\nvar data7 = context.get(\"data7\") || 0; //get from context or default to 0\nvar data8 = context.get(\"data8\") || 0; //get from context or default to 0\n\nvar reconfig = flow.get(\"t2ztable\") || {};\n\nswitch (msg.topic){\n\n    case \"device\":\n        data1 = msg.payload; \n        context.set(\"data1\", data1);//store in context for next time \n        return;\n    \n    case \"vendor\":\n        data2 = msg.payload; \n        context.set(\"data2\", data2);//store in context for next time \n        return;\n    \n    case \"type\":\n        data3 = msg.payload; \n        context.set(\"data3\", data3);//store in context for next time \n        return;\n    \n    case \"idx\":\n        data4 = msg.payload; \n        context.set(\"data4\", data4);//store in context for next time \n        return;\n        \n    case \"idxbat\":\n        data5 = msg.payload;\n        context.set(\"data5\", data5); //store in context for next time \n        return;\n        \n    case \"idxper\":\n        data6 = msg.payload;\n        context.set(\"data6\", data6); //store in context for next time \n        return;\n    \n    case \"idxlink\":\n        data7 = msg.payload;\n        context.set(\"data7\", data7); //store in context for next time \n        return;\n    \n    case \"idxextra\":\n        data8 = msg.payload;\n        context.set(\"data8\", data8); //store in context for next time \n        return;\n        \n    case \"submit\":\n        if (data1 !== null ) {\n            //msg.payload = \"Device: \"+ data1 +\" , type: \" + data2 +\" , idx: \" + data3 +\" , idxbat: \" + data4 +\" , idxper: \" + data5 + \", idxlink: \" + data6 + \", idxextra: \" + data7;\n            var string = \"{\" + \"_/\" + data1 + \"/_/}\"\n            var array = string.split(\"/\")[2];\n            var receivedSensors = []\n            //return msg; \n        \n            let dev = reconfig[array] || {};\n            //dev.name = data1;\n            dev.vendors = data2;\n            dev.type = data3;\n            dev.idx = data4;\n            dev.idxbat = data5;\n            dev.idxper = data6;\n            dev.idxlink = data7;\n            dev.idxextra = data8;\n      \n            // write back\n            reconfig[array] = dev;\n            receivedSensors.push(dev);\n \n            flow.set(\"t2ztable\", reconfig);\n            context.set(\"data1\", null)\n        } else {\n            return;\n        }\n    }\n\nreturn [{payload:Object.values(reconfig)},msg];\n//return msg;\n//return;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2110,
        "y": 220,
        "wires": [
            [
                "8ecb1a7237e6ad5e"
            ],
            [
                "39038a9d2681bd20"
            ]
        ]
    },
    {
        "id": "7bda4cc6084e4b4b",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "IDX batterij",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxbat",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2110,
        "y": 420,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "2bf44a259c619be9",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "IDX percentage",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxper",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2120,
        "y": 460,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "90d3cd9a221a8d81",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "IDX extra",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxextra",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 540,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "7d360ac1a9c0face",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2110,
        "y": 680,
        "wires": [
            [
                "da61aa56340660d7"
            ]
        ]
    },
    {
        "id": "0dac2a94f75ffde2",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "IDX link",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxlink",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 2100,
        "y": 500,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "70235a8b59920fe7",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "Manage zigbee bridge",
        "mode": "link",
        "links": [
            "e4ed3f9404692874"
        ],
        "x": 1926,
        "y": 780,
        "wires": []
    },
    {
        "id": "a7f044e8e2c649b1",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Voorbereiden voor device tabel",
        "func": "var devs; \n\nif ( msg.src === 'restore' ) {\n    devs = flow.get(\"t2ztable\") || {};\n    return [{payload:Object.values(devs)}];\n} else if (msg.payload.ZbReceived === undefined) {\n    return;\n} else {\n\n    devs = flow.get(\"t2ztable\") || {};\n    var receivedSensors = []\n\n    for (var devN in msg.payload.ZbReceived) {\n        let devInfo = msg.payload.ZbReceived[devN];\n        let ID = devInfo.Device;\n        let Name = devInfo.Name;\n     \n        // get dev by ID\n        let dev = devs[ID] || {};\n     \n        if (dev.vendors===undefined) {\n            dev.vendors = \"onbekend\";\n        }\n        if (dev.type===undefined) {\n            dev.type = \"onbekend\";\n        }\n        if (dev.idx===undefined) {\n            dev.idx = 0;\n        }\n        if (dev.idxbat===undefined) {\n            dev.idxbat = 0;\n        }\n        if (dev.idxper===undefined) {\n            dev.idxper = 0;\n        }\n        if (dev.idxlink===undefined) {\n            dev.idxlink = 0;\n        }\n        if (dev.idxextra===undefined) {\n            dev.idxextra = 0;\n        }\n\n        //dev.label = ID; \n        dev.zigbeeid = ID;\n        dev.bridge = msg.topic.split(\"/\")[1];\n        dev.name = Name;\n    \n        // write back\n        devs[ID] = dev;\n        receivedSensors.push(dev);\n    }\n    flow.set(\"t2ztable\", devs);\n}\nreturn [{payload:Object.values(devs)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 100,
        "wires": [
            [
                "466516d2d35d133a"
            ]
        ]
    },
    {
        "id": "466516d2d35d133a",
        "type": "ui_table",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "group": "9493153c6a285be5",
        "name": "Zigbee tabel",
        "order": 2,
        "width": 24,
        "height": 9,
        "columns": [
            {
                "field": "name",
                "title": "Naam",
                "width": "16%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "vendors",
                "title": "Merk apparaat",
                "width": "9%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type apparaat",
                "width": "16%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "zigbeeid",
                "title": "Device",
                "width": "7%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "bridge",
                "title": "Bridge",
                "width": "12%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idx",
                "title": "idx switch",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxbat",
                "title": "idx batterij",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxper",
                "title": "idx percentage",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxlink",
                "title": "idx link",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxextra",
                "title": "idx extra",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Delete",
                "width": "10%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1150,
        "y": 100,
        "wires": [
            [
                "2c3829ae941b05df"
            ]
        ]
    },
    {
        "id": "8323979a6ecc7569",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "Set flow.get test",
        "func": "var store =  msg.payload;\nflow.set(\"t2ztable\", store);\nreturn [{payload:Object.values(store)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3320,
        "y": 480,
        "wires": [
            [
                "081b4575f60f755b"
            ]
        ]
    },
    {
        "id": "247a4e546ff06812",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "add src",
        "func": "msg.src = 'restore';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 100,
        "wires": [
            [
                "a7f044e8e2c649b1"
            ]
        ]
    },
    {
        "id": "2c3829ae941b05df",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "name": "",
        "func": "if (msg.topic === \"del\") {\n    var devs = flow.get(\"t2ztable\") || {};\n    var flowdeltype = msg.payload.type;\n    var flowdelid = msg.payload.zigbeeid;\n    delete devs[msg.payload.zigbeeid];\n    if (flowdeltype === \"Remote (E1743)\" || flowdeltype === \"Plug (E1603)\" || flowdeltype === \"Plug (E1702)\" || flowdeltype === \"Plug (E1708)\") {\n        flow.set(flowdelid, undefined);\n    }\n    \n    msg.topic = \"IDX tabel: \" + msg.payload.name + \", \" + msg.payload.zigbeeid + \" is verwijdert.\";\n    msg.payload = \"Device is niet verwijdert in de sonoff bridge, alleen op deze webpagina.\"\n    var reconfig = flow.get(\"t2ztable\") || {}\n    return [msg,{payload:Object.values(reconfig)}];\n}\n\nmsg.topic = msg.payload.name;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 100,
        "wires": [
            [
                "1a53da933bfd8c5d",
                "41a4f1d59a1d6403"
            ],
            [
                "b078324fb7eaaff9"
            ]
        ]
    },
    {
        "id": "1a53da933bfd8c5d",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 1510,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7473e02c36c330c9",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "func": "//var test = flow.get(\"t2ztest\") || {};\nvar store = msg.payload;\nmsg2 = Object.assign({}, store);\nreturn [{payload:(msg2)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2760,
        "y": 480,
        "wires": [
            [
                "59c69e3ca4cad7cb"
            ]
        ]
    },
    {
        "id": "59c69e3ca4cad7cb",
        "type": "split",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2890,
        "y": 480,
        "wires": [
            [
                "9d9cc3cc6fa57133"
            ]
        ]
    },
    {
        "id": "9d9cc3cc6fa57133",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "func": "var value = msg.payload.zigbeeid\nmsg.topic = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3020,
        "y": 480,
        "wires": [
            [
                "20ef08116235f529"
            ]
        ]
    },
    {
        "id": "20ef08116235f529",
        "type": "join",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3150,
        "y": 480,
        "wires": [
            [
                "8323979a6ecc7569",
                "481e845fe0a736c7",
                "589b204a53bdbefa"
            ]
        ]
    },
    {
        "id": "39038a9d2681bd20",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "Restore idx table (zigbee tabel)",
        "mode": "link",
        "links": [
            "36574a90b5c65556",
            "7348ab76bf1cbc93"
        ],
        "x": 2095,
        "y": 100,
        "wires": []
    },
    {
        "id": "7348ab76bf1cbc93",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "restore idxtable out",
        "links": [
            "081b4575f60f755b",
            "39038a9d2681bd20",
            "41a4f1d59a1d6403",
            "f9c4038fea73b0cf"
        ],
        "x": 455,
        "y": 100,
        "wires": [
            [
                "247a4e546ff06812"
            ]
        ]
    },
    {
        "id": "081b4575f60f755b",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "Restore idx table (read file)",
        "mode": "link",
        "links": [
            "7348ab76bf1cbc93"
        ],
        "x": 3435,
        "y": 480,
        "wires": []
    },
    {
        "id": "b078324fb7eaaff9",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "name": "",
        "func": "var reconfig = flow.get(\"t2ztable\") || {};\nreturn [{payload:Object.values(reconfig)},msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 140,
        "wires": [
            [
                "810c2c17eb1aa35d"
            ]
        ]
    },
    {
        "id": "810c2c17eb1aa35d",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1670,
        "y": 140,
        "wires": [
            [
                "52e4097a46ded523"
            ]
        ]
    },
    {
        "id": "52e4097a46ded523",
        "type": "file",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "name": "Save to file",
        "filename": "/home/pi/domoticz/plugins/tasmota2zigbee/zigbeeidxtabel.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1870,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "41a4f1d59a1d6403",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "5145f22353cd7b61",
        "name": "Restore in (zigbee tabel)",
        "mode": "link",
        "links": [
            "7348ab76bf1cbc93"
        ],
        "x": 1655,
        "y": 100,
        "wires": []
    },
    {
        "id": "bbb134228666745c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "add src",
        "func": "msg.src = 'restore';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 340,
        "wires": [
            [
                "d08da6060205cd88"
            ]
        ]
    },
    {
        "id": "8973fb5a6b5ae8bc",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Restore zigbee table in",
        "links": [
            "2e6b49ecc2394a78"
        ],
        "x": 455,
        "y": 340,
        "wires": [
            [
                "bbb134228666745c"
            ]
        ]
    },
    {
        "id": "202c7dd66b1fedba",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "Restore bridges table out",
        "mode": "link",
        "links": [
            "7496f31d163c12cc"
        ],
        "x": 1926,
        "y": 560,
        "wires": []
    },
    {
        "id": "e669c6020ec33ea2",
        "type": "ui_table",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "group": "d325c76.7444a38",
        "name": "Zigbee Devices",
        "order": 1,
        "width": 30,
        "height": 11,
        "columns": [
            {
                "field": "label",
                "title": "Naam",
                "width": "15%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Device",
                "title": "Device",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "bridge",
                "title": "Bridge",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "LinkQuality",
                "title": "RSSI",
                "width": "6%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "BatteryPercentage",
                "title": "Bat. %",
                "width": "8%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "BatteryVoltage",
                "title": "Bat. V",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "6%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "39%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Delete",
                "width": "7%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1160,
        "y": 460,
        "wires": [
            [
                "82b014a353b034a7"
            ]
        ]
    },
    {
        "id": "82b014a353b034a7",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "name": "",
        "func": "if (msg.topic === \"del\") {\n    var devs = flow.get(\"t2zdevices\") || {};\n    delete devs[msg.payload.Device];\n    msg.topic = \"Zigbee tabel: \" + msg.payload.label + \", \"  + msg.payload.Device + \" is verwijdert.\";\n    msg.payload = \"Device is niet verwijdert in de sonoff bridge, alleen op deze webpagina.\"\n    return msg;\n}\n\nmsg.topic = msg.payload.label;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 460,
        "wires": [
            [
                "943de23188f1e72a",
                "2e6b49ecc2394a78"
            ]
        ]
    },
    {
        "id": "943de23188f1e72a",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 1710,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "156bc35f15595850",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "add src",
        "func": "msg.src = 'restore';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 640,
        "wires": [
            [
                "09abadaf9cac5387"
            ]
        ]
    },
    {
        "id": "7496f31d163c12cc",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Restore bridges table in",
        "links": [
            "109fd5f4e96bdb31",
            "202c7dd66b1fedba"
        ],
        "x": 455,
        "y": 640,
        "wires": [
            [
                "156bc35f15595850"
            ]
        ]
    },
    {
        "id": "2e6b49ecc2394a78",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "name": "Restore zigbee table out",
        "mode": "link",
        "links": [
            "8973fb5a6b5ae8bc"
        ],
        "x": 1925,
        "y": 460,
        "wires": []
    },
    {
        "id": "2b85d6ecfe7216e8",
        "type": "http in",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "url": "/flows.json",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 2360,
        "y": 660,
        "wires": [
            [
                "b3b34d23fc262cfc"
            ]
        ]
    },
    {
        "id": "b34469817cdf7cdc",
        "type": "http response",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 3210,
        "y": 660,
        "wires": []
    },
    {
        "id": "b3b34d23fc262cfc",
        "type": "http request",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "body",
        "url": "https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/flows.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2650,
        "y": 660,
        "wires": [
            [
                "8da96a20e8d1784e"
            ]
        ]
    },
    {
        "id": "9af985a7a1629ced",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Wat instellen bij een nieuw device",
        "info": "Wat allemaal instellen bij een nieuw device\n\n* Tasmota ID filter on ui table\n  - Als het een nieuw merk betreft:\n      - In tab \"Setup\" de \"Outputs\" met 1 verhogen.\n      - In tab \"On Message\" de returns bij werken ivm 1 extra output. Let op, voor tasmota, tasmotainfo en domoticz zijn 3 aparte blocken\n      - Achter de ID filter natuurlijk de nieuwe functie node voor het device maken en toevoegen\n  - Als het een nieuw device is:\n      - Dan hierin niets doen, dan naar de uitgang van het juiste merk gaan, daar het type toevoegen en een nieuwe device block maken\n\n* Drop Down Vendors node voor webpagina\n  - Bij options een extra block aanmaken. De naam moet identiek zijn aan wat je bij de tasmota ID filter hebt ingevoerd.\n \n* Drop Down type node voor webpagina\n  - Bij options een extra block aanmaken. De naam moet identiek zijn aan wat je bij de Vendor naam filter hebt ingevoerd.",
        "x": 150,
        "y": 200,
        "wires": []
    },
    {
        "id": "456f85a85253b02e",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "Probe to get IP out",
        "mode": "link",
        "links": [
            "e4ed3f9404692874"
        ],
        "x": 2715,
        "y": 100,
        "wires": []
    },
    {
        "id": "c729eedde8321077",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "Zigbee Apparaat in",
        "links": [
            "44be3c4f17a3ac08"
        ],
        "x": 2035,
        "y": 620,
        "wires": [
            [
                "376768625db0b7b5"
            ]
        ]
    },
    {
        "id": "589b204a53bdbefa",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "func": "var devsdomoticz = flow.get(\"t2ztable\") || {};\nvar length = Object.keys(devsdomoticz).length;\n\nfor ( var i = 0; i < length; i++ ) {\n    var keys = Object.keys(devsdomoticz);\n    var IDkey = keys[i];\n    var message = devsdomoticz[IDkey];\n    var messagetype = devsdomoticz[IDkey].type;\n    var messageidx = parseInt(devsdomoticz[IDkey].idx);\n    var messagezigbeeid = devsdomoticz[IDkey].zigbeeid;\n    var messagebridge = devsdomoticz[IDkey].bridge;\n    var array = [];\n    \n    if ( messagetype === \"Remote (E1743)\" || messagetype === \"Plug (E1603)\" || messagetype === \"Plug (E1702)\" || messagetype === \"Plug (E1708)\") {\n        array[0] = messageidx;\n        array[1] = messagebridge;\n        flow.set(messagezigbeeid, array);\n        msg.payload = \"Flow.set for device id \" + messagezigbeeid + \", idx: \" + messageidx + \", bridge: \" + messagebridge + \"\";\n        node.send(msg);\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3300,
        "y": 440,
        "wires": [
            [
                "c0dd3b2da21e23f7"
            ]
        ]
    },
    {
        "id": "c0dd3b2da21e23f7",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3450,
        "y": 440,
        "wires": []
    },
    {
        "id": "1d35990521f7c49c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "Send command to bridge",
        "func": "var send1;\nvar send2;\nvar send3;\n//var send1 = context.get(\"send1\") || \"empty\"; //get from context or default to 0\n//var send2 = context.get(\"send2\") || \"empty\"; //get from context or default to 0\n//var send3 = context.get(\"send3\") || \"empty\"; //get from context or default to 0\n\nswitch (msg.topic){\n\n    case \"bridge\":\n        send1 = msg.payload; \n        if (send1 == \"\") {\n            return;\n        } else {\n            context.set(\"send1\", send1);//store in context for next time \n        }\n        return;\n    \n    case \"command\":\n        send2 = msg.payload; \n        if (send2 == \"\") {\n            return;\n        } else {\n            context.set(\"send2\", send2);//store in context for next time \n        }\n        return;\n    \n    case \"parameter\":\n        send3 = msg.payload; \n        if (send1 == \"\") {\n            return;\n        } else {\n            context.set(\"send3\", send3);//store in context for next time \n        }\n        return;\n        \n    case \"submit\":\n        send1 = context.get(\"send1\")\n        send2 = context.get(\"send2\")\n        send3 = context.get(\"send3\")\n        if (send1 !== \"empty\" && send2 !== \"empty\" && send3 !== \"empty\" ) {\n            msg.payload = send1 + \" \" + send2 + \" \" + send3;\n            msg.topic = \"cmnd/\"+send1+\"/\"+send2;\n            msg.payload = send3;\n            context.set(\"send1\", \"empty\");\n            context.set(\"send1\", \"empty\");\n            context.set(\"send1\", \"empty\");\n            return msg;\n        } else {\n            return;\n        }\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 620,
        "wires": [
            [
                "dc0f5dbb0855a505"
            ]
        ]
    },
    {
        "id": "460d09788346164d",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "label": "Bridge",
        "tooltip": "",
        "place": "",
        "group": "ab17d46e1b772514",
        "order": 5,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "bridge",
        "topicType": "str",
        "className": "",
        "x": 1230,
        "y": 600,
        "wires": [
            [
                "1d35990521f7c49c"
            ]
        ]
    },
    {
        "id": "bfd99529b3e29427",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "label": "Command",
        "tooltip": "",
        "group": "ab17d46e1b772514",
        "order": 7,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "command",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1390,
        "y": 600,
        "wires": [
            [
                "1d35990521f7c49c"
            ]
        ]
    },
    {
        "id": "7a270006242bbfc0",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "label": "Parameter",
        "tooltip": "",
        "group": "ab17d46e1b772514",
        "order": 9,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "parameter",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1390,
        "y": 640,
        "wires": [
            [
                "1d35990521f7c49c"
            ]
        ]
    },
    {
        "id": "695720e4296db2e6",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "Clear",
        "func": "//delete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 640,
        "wires": [
            [
                "7a270006242bbfc0",
                "bfd99529b3e29427"
            ]
        ]
    },
    {
        "id": "90ff06fb83d4e97b",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 680,
        "wires": [
            [
                "695720e4296db2e6"
            ]
        ]
    },
    {
        "id": "ff5e4e68237fd483",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 12,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Verstuur",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "str",
        "x": 1400,
        "y": 680,
        "wires": [
            [
                "1d35990521f7c49c",
                "90ff06fb83d4e97b"
            ]
        ]
    },
    {
        "id": "dc0f5dbb0855a505",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "Send command to bridge",
        "mode": "link",
        "links": [
            "e4ed3f9404692874"
        ],
        "x": 1925,
        "y": 620,
        "wires": []
    },
    {
        "id": "b01db5d10adf0ad6",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Help function om commands naar bridge te sturen.",
        "topicType": "str",
        "x": 1550,
        "y": 680,
        "wires": [
            [
                "474c468923da77f3"
            ]
        ]
    },
    {
        "id": "4d29c691a74b2673",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 1850,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "8d7042a134b77af5",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 2370,
        "y": 620,
        "wires": [
            [
                "7e7e2210239d3b41"
            ]
        ]
    },
    {
        "id": "7e7e2210239d3b41",
        "type": "http request",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/version",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2530,
        "y": 620,
        "wires": [
            [
                "e2d336891879b581"
            ]
        ]
    },
    {
        "id": "4e88330a1b823043",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Wat aanpassen bij een nieuwe release",
        "info": "- De \"comment\" node van de release notes.\n- Node \"UPDATE RELEASE\", de versie in aanpassen.\n- Op github de \"version\" file aanpassen.\n- Op github de \"releasenotes\" file aanpassen.",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "d33963f3ee2f7ef1",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "label": "Apparaat",
        "tooltip": "",
        "place": "",
        "group": "ab17d46e1b772514",
        "order": 6,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "oldname",
        "topicType": "str",
        "className": "",
        "x": 1420,
        "y": 240,
        "wires": [
            [
                "edea2f707eaa6c2e"
            ]
        ]
    },
    {
        "id": "39b828367fc868a1",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "extract devicenames",
        "func": "\nmsg.options = msg.payload.map(obj => {\n   var rObj = {};\n   rObj[obj.label] = obj.bridge+\"/\"+obj.Device;\n   return rObj;\n});\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "d33963f3ee2f7ef1",
                "44be3c4f17a3ac08"
            ]
        ]
    },
    {
        "id": "202da5354877d0e8",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 10,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "Verander naam",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "rename",
        "topicType": "str",
        "x": 1440,
        "y": 360,
        "wires": [
            [
                "edea2f707eaa6c2e"
            ]
        ]
    },
    {
        "id": "e42c3f20342ec925",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "label": "Nieuwe naam",
        "tooltip": "",
        "group": "ab17d46e1b772514",
        "order": 8,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "newname",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1440,
        "y": 300,
        "wires": [
            [
                "edea2f707eaa6c2e"
            ]
        ]
    },
    {
        "id": "edea2f707eaa6c2e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "Rename Zigbee Dev.",
        "func": "let rename = flow.get(\"renameZigbee\") || {};\nflow.set(\"renameZigbee\", rename);\n\nif (msg.topic === \"oldname\" && msg.payload !== \"\") {\n    //var string = \"{\" + \"_/\" + data1 + \"/_/}\"\n    //var array = string.split(\"/\")[2];\n    var string = \"{\" + \"_/\" + msg.payload + \"/_/}\";\n    let vars = string.split(\"/\");\n    //let vars = msg.payload.split(\"/\");\n    rename.bridge = vars[1];\n    rename.device = vars[2];\n    flow.set(\"renameZigbee\", rename);\n    return;\n} else if (msg.topic === \"newname\") {\n    rename.newname = msg.payload;\n    flow.set(\"renameZigbee\", rename);\n    return;\n} else if (msg.topic === \"rename\") {\n    msg.topic = \"cmnd/\"+rename.bridge+\"/ZbName\";\n    msg.payload = rename.device + \",\" + rename.newname;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 260,
        "wires": [
            [
                "21a702d22e35399a",
                "99d5e38aa6a308f7"
            ]
        ]
    },
    {
        "id": "21a702d22e35399a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "Clear",
        "func": "flow.set(\"renameZigbee\", {});\ndelete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1730,
        "y": 340,
        "wires": [
            [
                "e42c3f20342ec925"
            ]
        ]
    },
    {
        "id": "99d5e38aa6a308f7",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "Herbenoem zigbee apparaat",
        "mode": "link",
        "links": [
            "e4ed3f9404692874"
        ],
        "x": 1925,
        "y": 260,
        "wires": []
    },
    {
        "id": "44be3c4f17a3ac08",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "Zigbee Apparaat out",
        "mode": "link",
        "links": [
            "c729eedde8321077"
        ],
        "x": 1335,
        "y": 260,
        "wires": []
    },
    {
        "id": "07b49abc2e756953",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 300,
        "wires": [
            [
                "99d5e38aa6a308f7"
            ]
        ]
    },
    {
        "id": "36574a90b5c65556",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "2b14dd6ae297283b",
        "name": "Check E1743 after setting settings",
        "links": [
            "39038a9d2681bd20"
        ],
        "x": 3175,
        "y": 440,
        "wires": [
            [
                "589b204a53bdbefa"
            ]
        ]
    },
    {
        "id": "474c468923da77f3",
        "type": "template",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "help text",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Command &nbsp&nbsp&nbsp&nbsp: Parameter <br>\n<br>\nZbPermitJoin : 0 = disable pairing mode <br>\nZbPermitJoin : 1 = enable pairing mode for 60 seconds <br>\n<br>\nMore information: https://tasmota.github.io/docs/Commands/#zigbee <br>",
        "output": "str",
        "x": 1680,
        "y": 680,
        "wires": [
            [
                "4d29c691a74b2673"
            ]
        ]
    },
    {
        "id": "8da96a20e8d1784e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "func": "var store = flow.get(\"version\")\nmsg.headers['Content-Disposition'] = 'attachment; filename=\"' + store + '.json\"'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2940,
        "y": 660,
        "wires": [
            [
                "b34469817cdf7cdc"
            ]
        ]
    },
    {
        "id": "e2d336891879b581",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "UPDATE RELEASE",
        "func": "var version = \"V_01-04-2022_R1\"\noldStr = msg.payload;\nvar newStr = oldStr.slice(0, oldStr.length-1);\nvar store = newStr;\nflow.set(\"version\", newStr);\nvar html = \"\";\nmsg.topic = \"Release notes\";\nif (msg.statusCode === 200 || 201) {\n    if (store === version) {\n        msg.text = \"FLOW IS UP TO DATE MET GITHUB (\" + version + \")\"\n        msg.background = \"#0A8085\";\n        return msg;\n    } else {\n        msg.text = \"ER IS EEN UPDATE, DOWNLOAD FLOW FILE VAN GITHUB\"\n        msg.background = \"#8C101C\";\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2720,
        "y": 620,
        "wires": [
            [
                "8aa74c6a8e77e370"
            ]
        ]
    },
    {
        "id": "8aa74c6a8e77e370",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 14,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "{{text}}",
        "tooltip": "",
        "color": "white",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "show",
        "topicType": "str",
        "x": 2910,
        "y": 620,
        "wires": [
            [
                "5a7d611fb820f67f"
            ]
        ]
    },
    {
        "id": "5a7d611fb820f67f",
        "type": "http request",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/releasenotes",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 3050,
        "y": 620,
        "wires": [
            [
                "9c27a2105dd41e6b"
            ]
        ]
    },
    {
        "id": "19a535f96f40be94",
        "type": "ui_template",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "group": "9e91865c0e53e9f2",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <h2 style=\"margin:10px\">Release notes</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n            <div ng-bind-html=\"msg.payload\" style=\"height:400px;width:100%;margin: 4px 2px;overflow:auto;\"></div>\n            <!--<div ng-bind-html=\"msg.payload\"></div>-->\n            <form action=\"/flows.json\" method=\"get\"><input type=\"submit\" class=\"buttons\" value=\"Download\" name=\"Submit\" id=\"frm1_submit\"/></form>\n            <button class=\"buttoncl\" id=\"myCls\" ng-click=\"closeDialog()\">Close</button>\n        </div> \n    </div> \n</div> \n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    color : rgb(255,255,255);\n\tbackground-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n\tposition: absolute;\n    background-color: rgb(51,51,51);\n    left: 25%;\n    top: 30px;\n    border-radius: 3px;\n    padding: 0;\n    width: 50%;\n    /*height: 70%;*/\n    height: 550px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: rgb(20,117,120);\n    border-radius: 3px 3px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n\n.btn1 {\n  color : rgb(255,255,255);\n  background-color: rgb(20,117,120);\n  border-radius: 3px 3px 3px 3px;\n  font-size: 16px;\n}\n\n/* Button style */\n    .buttoncl {\n        position: absolute;\n        border: none;\n        /*border-radius: 2px;*/\n        padding: 15px 4.4%;\n        font-size: 16px;\n        font-weight:550;\n        font-family:arial;\n        margin: 4px 2px;\n        /*text-transform: uppercase;*/\n        display: inline-block;\n        cursor: pointer;\n        color: white;\n        background-color:  #0A8085;\n        outline: none;\n        left: 85%;\n        top: 88%;\n    } \n    \n    .buttons {\n        position: absolute;\n        background-color: #0A8085;\n        border: none;\n        color: #FFF7E0; \n        padding: 15px 4.4%;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        font-weight:550;\n        font-family:arial;\n        margin: 4px 2px;\n        cursor: pointer;\n        left: 65%;\n        top: 88%;\n    }\n\n</style>\n\n<script>\nvar dialog;\n\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    \n    scope.init = function() {\n        scope.send({payload : \"init\"});\n\t\tscope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //dialog.appendTo(document.body); // This leaves ghost numpads if pinpad is not opened!\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n\t\tscope.send({payload : scope.passcode});\n    }\n     \n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n\t\t\t\t\t\tscope.passcode = \"\";\n                        scope.showDialog();\n                break;\n                case \"close\": \n                    dialog.css(\"display\", \"none\");\n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3340,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "9c27a2105dd41e6b",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "54c30edf1af25e1f",
        "name": "",
        "func": "if (msg.statusCode === 200 || 201) {\n    return msg;\n} else {\n    msg.payload = '<p style=\"color:red;\">Fout bij laden release notes van github</p><br><a href=\"https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/releasenotes\" target=\"_blank\">Link naar github, voor release notes</a>'\n    return msg;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3200,
        "y": 620,
        "wires": [
            [
                "19a535f96f40be94"
            ]
        ]
    },
    {
        "id": "aab8962e5eec8251",
        "type": "ui_text",
        "z": "32e6b1c785b786d2",
        "group": "4133b8f6529bf1a5",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Actuele versie: V_01-04-2022_R1",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 160,
        "y": 120,
        "wires": []
    },
    {
        "id": "83700eedcca6f6ae",
        "type": "ui_text",
        "z": "32e6b1c785b786d2",
        "group": "ab17d46e1b772514",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color =\"#0EB8C0\" font size= \"4px\">Tasmota zigbee bridge</font>",
        "layout": "row-left",
        "className": "",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "fcf6302c704a4982",
        "type": "ui_text",
        "z": "32e6b1c785b786d2",
        "group": "ab17d46e1b772514",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color =\"#0EB8C0\" font size= \"4px\">Stuur bericht naar zigbee bridge</font>",
        "layout": "row-left",
        "className": "",
        "x": 990,
        "y": 700,
        "wires": []
    },
    {
        "id": "9527b2c566efe1b0",
        "type": "ui_text",
        "z": "32e6b1c785b786d2",
        "group": "ab17d46e1b772514",
        "order": 3,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color =\"#0EB8C0\" font size= \"4px\">Verander naam zigbee apparaat</font>",
        "layout": "row-left",
        "className": "",
        "x": 990,
        "y": 480,
        "wires": []
    },
    {
        "id": "86d5e0026f086c83",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01 passtrue in",
        "mode": "link",
        "links": [
            "002900a242fa4e2a",
            "1b553aedee0d8b08"
        ],
        "x": 2595,
        "y": 1520,
        "wires": []
    },
    {
        "id": "1b553aedee0d8b08",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01 passtrue out",
        "links": [
            "86d5e0026f086c83"
        ],
        "x": 2655,
        "y": 1520,
        "wires": [
            [
                "ee9aaf65c819341c"
            ]
        ]
    },
    {
        "id": "2dbd724356d3147c",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01 out",
        "mode": "link",
        "links": [
            "002900a242fa4e2a",
            "e4ed3f9404692874"
        ],
        "x": 3115,
        "y": 1520,
        "wires": []
    },
    {
        "id": "002900a242fa4e2a",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01 in",
        "links": [
            "2dbd724356d3147c",
            "86d5e0026f086c83"
        ],
        "x": 3175,
        "y": 1520,
        "wires": [
            [
                "cfb396b223e87237"
            ]
        ]
    },
    {
        "id": "cfb396b223e87237",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01 switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3350,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ee9aaf65c819341c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01 Switch",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\t\n\t//off (nog nooit een off gezien vanuit device, dit zijn fake controle waarden)\n    if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"0\"};\n    }\n    // single push\n    else if (msg.payload.ZbReceived[zigbeeid][\"0006!02\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 2) {\n        //msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Toggle\" };\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n    }\n    //double fast push\n    else if (msg.payload.ZbReceived[zigbeeid][\"0006!01\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n    }    \n    //hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 0) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};   \n    }    \n    else {\n        msg = null;\n    }\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 1520,
        "wires": [
            [
                "2dbd724356d3147c"
            ],
            [
                "2dbd724356d3147c"
            ],
            [
                "2dbd724356d3147c"
            ],
            [
                "2dbd724356d3147c"
            ]
        ]
    },
    {
        "id": "18087eef88f2f61f",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Welke modules installeren voor deze flow",
        "info": "Via manage pallette, onderstaande modules toevoegen\n- node-red-contrib-flogger\n- node-red-contrib-simple-gate\n- node-red-dashboard\n- node-red-node-ui-table",
        "x": 180,
        "y": 280,
        "wires": []
    },
    {
        "id": "e506ce49a49f836d",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "func": "if (msg.payload === \"Heiman\") {\n    msg.options = [ \"Monoxide (HS1CA-M)\"]\n}\nelse if (msg.payload === \"Ikea\") {\n    msg.options = [ \"Light (ICPSHC24-10EU-IL-1)\",\n                    \"Plug (E1603)\",\n                    \"Plug (E1702)\",\n                    \"Plug (E1708)\",\n                    \"Remote (E1743)\"]\n}\nelse if (msg.payload === \"Lidl\") {\n    msg.options = [ \"Light (HG06492C)\"]\n}\nelse if (msg.payload === \"Osram\") {\n    msg.options = [ \"Remote (AC0251100NJ)\",\n                    \"Remote (AC0251600NJ)\",\n                    \"Remote (AC0251700NJ)\"]\n}\nelse if (msg.payload === \"Sonoff\") {\n    msg.options = [ \"Remote (SNZB-01)\" ]\n}\nelse if (msg.payload === \"Xiaomi\") {\n    msg.options = [ \"Door (MCCGQ12LM)\",\n                    \"Door (MCCGQ14LM)\",\n                    \"Lux (GZCGQ01LM)\",\n                    \"Motion (RTCGQ01LM)\",\n                    \"Motion (RTCGQ12LM)\",\n                    \"Smoke (JTYJ-GD-01LM/BW)\",\n                    \"Temp (WSDCGQ01LM)\",\n                    \"Temp (WSDCGQ11LM)\",\n                    \"Temp (WSDCGQ12LM)\",\n                    \"Water (SJCGQ11LM)\"]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 300,
        "wires": [
            [
                "7080191a1def4f03"
            ]
        ]
    },
    {
        "id": "7080191a1def4f03",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Kies type device",
        "group": "9493153c6a285be5",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "type",
        "topicType": "str",
        "className": "",
        "x": 2100,
        "y": 340,
        "wires": [
            [
                "24d22abc9e1ab60f"
            ]
        ]
    },
    {
        "id": "0ec10a8acee78267",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota ID filter on ui table",
        "func": "if ( msg.src === 'tasmota' ) {\n    var devs = flow.get(\"t2ztable\") || {};\n    var storepayload = msg.payload;\n    var zigbeedevice\n\n    for (var devN in msg.payload.ZbReceived) {\n        let devInfo = msg.payload.ZbReceived[devN];\n        let ID = devInfo.Device;\n\n        // get dev by ID\n        var dev = devs[ID] || {};\n        \n        zigbeevendor = dev.vendors;\n        zigbeedevice = dev.type;\n        storepayload[\"ZbReceived\"].idx = parseInt(dev.idx);\n        storepayload[\"ZbReceived\"].idxbat = parseInt(dev.idxbat);\n\t    storepayload[\"ZbReceived\"].idxper = parseInt(dev.idxper);\n\t    storepayload[\"ZbReceived\"].idxlink = parseInt(dev.idxlink);\n\t    storepayload[\"ZbReceived\"].idxextra = parseInt(dev.idxextra);\n\t    storepayload[\"ZbReceived\"].zigbeeid = dev.zigbeeid;\n        storepayload[\"ZbReceived\"].topicname = dev.bridge;\n        storepayload[\"ZbReceived\"].type = dev.type;\n            \n        //msg.payload = zigbeedevice;\n        //return [msg]\n    }\n    msg.payload = storepayload;\n    if ( zigbeevendor === \"Heiman\" ) {\n        return [null, msg, null, null, null, null, null]; \n    } \n    else if ( zigbeevendor === \"Ikea\" ) {\n        return [null, null, msg, null, null, null, null]; \n    }\n    else if ( zigbeevendor === \"Lidl\" ) {\n        return [null, null, null, msg, null, null, null]; \n    }\n    else if ( zigbeevendor === \"Osram\" ) {\n        return [null, null, null, null, msg, null, null]; \n    }\n    else if ( zigbeevendor === \"Sonoff\" ) {\n        return [null, null, null, null, null, msg, null]; \n    }\n    else if ( zigbeevendor === \"Xiaomi\" ) {\n        return [null, null, null, null, null, null, msg]; \n    }\n        return [msg, null, null, null, null, null, null];\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    var devsinfo = flow.get(\"t2ztable\") || {};\n    var storepayloadinfo = msg.payload;\n    var zigbeedeviceinfo\n\n    for (var devNinfo in msg.payload.ZbInfo) {\n        let devInfoinfo = msg.payload.ZbInfo[devNinfo];\n        let IDinfo = devInfoinfo.Device;\n\n        // get dev by ID\n        var devinfo = devsinfo[IDinfo] || {};\n        \n        zigbeevendorinfo = devinfo.vendors;\n        zigbeedeviceinfo = devinfo.type;\n        storepayloadinfo[\"ZbInfo\"].idx = parseInt(devinfo.idx);\n        storepayloadinfo[\"ZbInfo\"].idxbat = parseInt(devinfo.idxbat);\n\t    storepayloadinfo[\"ZbInfo\"].idxper = parseInt(devinfo.idxper);\n\t    storepayloadinfo[\"ZbInfo\"].idxlink = parseInt(devinfo.idxlink);\n\t    storepayloadinfo[\"ZbInfo\"].idxextra = parseInt(devinfo.idxextra);\n\t    storepayloadinfo[\"ZbInfo\"].zigbeeid = devinfo.zigbeeid;\n        storepayloadinfo[\"ZbInfo\"].topicname = devinfo.bridge;\n        storepayloadinfo[\"ZbInfo\"].type = devinfo.type;\n            \n        //msg.payload = zigbeedevice;\n        //return [msg]\n    }\n    msg.payload = storepayloadinfo;\n    if ( zigbeevendorinfo === \"Ikea\" ) {\n        return [null, null, msg, null, null, null, null]; \n    }\n        return [msg, null, null, null, null, null, null];\n}\n\nif ( msg.src === 'domoticz' ) {\n    var devsdomoticz = flow.get(\"t2ztable\") || {};\n    var storepayloaddomoticz = msg.payload;\n    var zigbeevendordomoticz;\n    var zigbeedevicedomoticz;\n    var idxnumber = msg.payload.idx;\n    var length = Object.keys(devsdomoticz).length;\n\n    for ( var i = 0; i < length; i++ ) {\n        var keys = Object.keys(devsdomoticz);\n        var IDkey = keys[i];\n        var message = devsdomoticz[IDkey];\n        var messageidx = parseInt(devsdomoticz[IDkey].idx);\n        \n        if ( messageidx === idxnumber) {\n            zigbeevendordomoticz = message.vendors;\n            storepayloaddomoticz.type = message.type;\n            storepayloaddomoticz.idxdz = message.idx;\n            storepayloaddomoticz.idxbat = message.idxbat;\n            storepayloaddomoticz.zigbeeid = message.zigbeeid;\n            storepayloaddomoticz.topicname = message.bridge;\n        }\n        msg.payload = storepayloaddomoticz;\n        if ( zigbeevendordomoticz === \"Lidl\" ) {    \n            return [null, null, null, msg, null, null, null];\n        }\n        else if ( zigbeevendordomoticz === \"Ikea\" ) {\n            return [null, null, msg, null, null, null, null]; \n        }\n    }\n            return [msg, null, null, null, null, null, null]; \n}",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1380,
        "wires": [
            [
                "5754549a4a868ca2"
            ],
            [
                "53a29084e299b137"
            ],
            [
                "46ad308c041daee7"
            ],
            [
                "17aaa36b8e19d062"
            ],
            [
                "77fa62c94002df1e"
            ],
            [
                "bf267b053d32db86"
            ],
            [
                "172ca5c4a4bc9eeb"
            ]
        ]
    },
    {
        "id": "53a29084e299b137",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Heiman devices",
        "func": "if (msg.payload.ZbReceived.type === \"Monoxide (HS1CA-M)\") {\n    return [msg]\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 920,
        "wires": [
            [
                "2ccae554b0a0eb62"
            ]
        ]
    },
    {
        "id": "46ad308c041daee7",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Ikea devices",
        "func": "if (msg.payload.ZbInfo) {\n    if (msg.payload.ZbInfo.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg]\n    }\n}\n\nif (msg.payload.ZbReceived) {\n    if (msg.payload.ZbReceived.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg]\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    if (msg.payload.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null]\n    }\n    else if (msg.payload.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg]\n    }\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1100,
        "wires": [
            [
                "cc69481ddb4239d7"
            ],
            [
                "0c713a7cfa8a5968"
            ],
            [
                "0c713a7cfa8a5968"
            ],
            [
                "0c713a7cfa8a5968"
            ],
            [
                "f053a430dbc7af77"
            ]
        ]
    },
    {
        "id": "17aaa36b8e19d062",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Lidl devices",
        "func": "if (msg.payload.ZbInfo) {\n    if (msg.payload.ZbInfo.type === \"Light (HG06492C)\") {\n        return [msg];\n    }\n}\n\nif (msg.payload.ZbReceived) {\n    if (msg.payload.ZbReceived.type === \"Light (HG06492C)\") {\n        return [msg];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    if (msg.payload.type === \"Light (HG06492C)\") {\n        return [msg];\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 1280,
        "wires": [
            [
                "a43480d97601b0b3"
            ]
        ]
    },
    {
        "id": "77fa62c94002df1e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Osram devices",
        "func": "if (msg.payload.ZbReceived.type === \"Remote (AC0251100NJ)\") {\n    return [msg, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Remote (AC0251600NJ)\") {\n    return [null, msg, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Remote (AC0251700NJ)\") {\n    return [null, null, msg]\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1400,
        "wires": [
            [
                "fe7e9b046fafa46d"
            ],
            [
                "fe7e9b046fafa46d"
            ],
            [
                "fe7e9b046fafa46d"
            ]
        ]
    },
    {
        "id": "bf267b053d32db86",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Sonoff devices",
        "func": "if (msg.payload.ZbReceived.type === \"Remote (SNZB-01)\") {\n    return [msg]\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1520,
        "wires": [
            [
                "86d5e0026f086c83"
            ]
        ]
    },
    {
        "id": "172ca5c4a4bc9eeb",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Devices",
        "func": "if (msg.payload.ZbReceived.type === \"Door (MCCGQ12LM)\") {\n    return [msg, null, null, null, null, null, null, null, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Door (MCCGQ14LM)\") {\n    return [null, msg, null, null, null, null, null, null, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Lux (GZCGQ01LM)\") {\n    return [null, null, msg, null, null, null, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Motion (RTCGQ01LM)\") {\n    return [null, null, null, msg, null, null, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Motion (RTCGQ12LM)\") {\n    return [null, null, null, null, msg, null, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Smoke (JTYJ-GD-01LM/BW)\") {\n    return [null, null, null, null, null, msg, null, null, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Temp (WSDCGQ01LM)\") {\n    return [null, null, null, null, null, null, msg, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Temp (WSDCGQ11LM)\") {\n    return [null, null, null, null, null, null, null, msg, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Temp (WSDCGQ12LM)\") {\n    return [null, null, null, null, null, null, null, null, msg, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Water (SJCGQ11LM)\") {\n    return [null, null, null, null, null, null, null, null, null, msg]    \n}",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1880,
        "wires": [
            [
                "4b827c89b5a138c4"
            ],
            [
                "4b827c89b5a138c4"
            ],
            [
                "577af1c346273217"
            ],
            [
                "9ef3e2703e3d169b"
            ],
            [
                "9ef3e2703e3d169b"
            ],
            [
                "0958e7f86a6f7cfa"
            ],
            [
                "1a8398e557c7f9dd"
            ],
            [
                "b3b7f479cadb8496"
            ],
            [
                "b3b7f479cadb8496"
            ],
            [
                "c9e73ce19c15f214"
            ]
        ]
    },
    {
        "id": "28b040d3881c0232",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "342e272fde205046",
        "name": "",
        "func": "msg.options =[];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 760,
        "wires": [
            [
                "7080191a1def4f03"
            ]
        ]
    },
    {
        "id": "4e8161fd55532c08",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "976cc66a0af82637",
        "name": "Sonoff SNZB-01",
        "info": "Which domoticz dummy needed:\n- Selector switch (keuzeschakelaar)\n\nSelector switch setup:\n0   = Niet gebruikt\n10  = Single Click\n20  = Double Click\n30  = Hold Click",
        "x": 3640,
        "y": 1520,
        "wires": []
    },
    {
        "id": "cc43c168095abbf7",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "",
        "info": "if (msg.payload.ZbInfo) {\n    if (msg.payload.ZbInfo.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg]\n    }\n}\n\nif (msg.payload.ZbReceived) {\n    if (msg.payload.ZbReceived.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg]\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    if (msg.payload.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null]\n    }\n    else if (msg.payload.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg]\n    }\n}",
        "x": 2150,
        "y": 2100,
        "wires": []
    },
    {
        "id": "79ec8237220e308b",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Make custom page domoticz",
        "func": "var ipnodered = flow.get(\"ipnodered\") //|| null; //get from context or default to 0\nvar portnodered = flow.get(\"portnodered\")// || 0; //get from context or default to 0\nvar filelocation = flow.get(\"filelocation\")\n\nswitch (msg.topic){\n\n    case \"ipnodered\":\n        ipnodered = msg.payload; \n        flow.set(\"ipnodered\", ipnodered);//store in context for next time \n        return;\n    \n    case \"portnodered\":\n        portnodered = msg.payload; \n        flow.set(\"portnodered\", portnodered);//store in context for next time \n        return;\n        \n    case \"filelocation\":\n        var filelocationexcl = msg.payload; \n        filelocation = filelocationexl + \"/tasmota_sonoff_bridge.html\"\n        flow.set(\"filelocation\", filelocation);//store in context for next time \n        return;\n    \n    case \"Cancel\":\n        return;\n\n    case \"Submit\":\n        if (ipnodered !== null ) {\n            var file = flow.get(\"filelocation\");\n            msg.filename = file; \n            msg.payload = '<IFRAME SRC=\"http://' + ipnodered + ':' + portnodered + '/ui\" height=\"800\" width=\"100%\"></IFRAME>';\n            return msg;\n        } else {\n            return;\n        }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4400,
        "y": 140,
        "wires": [
            [
                "358856e6a5e45040",
                "db9ca20934bba080"
            ]
        ]
    },
    {
        "id": "b55545ae93e5847f",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "name": "",
        "label": "Port address nodered host",
        "tooltip": "",
        "group": "d0a2461924835075",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "portnodered",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4000,
        "y": 140,
        "wires": [
            [
                "79ec8237220e308b"
            ]
        ]
    },
    {
        "id": "accf1a11dc0b6389",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "name": "",
        "label": "IP address nodered host",
        "tooltip": "",
        "group": "d0a2461924835075",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "ipnodered",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 3990,
        "y": 60,
        "wires": [
            [
                "79ec8237220e308b"
            ]
        ]
    },
    {
        "id": "d9d831879af67d08",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "name": "",
        "group": "d0a2461924835075",
        "order": 4,
        "width": 30,
        "height": 1,
        "passthru": false,
        "label": "Save custom pagina domoticz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "OPMERKING!",
        "topicType": "str",
        "x": 3430,
        "y": 300,
        "wires": [
            [
                "966012a70158302b"
            ]
        ]
    },
    {
        "id": "10e661c6c7ded4e7",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "name": "",
        "label": "Domoticz template location",
        "tooltip": "",
        "group": "d0a2461924835075",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "filelocation",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4000,
        "y": 220,
        "wires": [
            [
                "79ec8237220e308b"
            ]
        ]
    },
    {
        "id": "a74aaef0e4828296",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1880",
        "payloadType": "str",
        "x": 3390,
        "y": 160,
        "wires": [
            [
                "b55545ae93e5847f",
                "19b3dfadf146aac7"
            ]
        ]
    },
    {
        "id": "da5f9cc95705b51b",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "/home/pi/domoticz/www/templates",
        "payloadType": "str",
        "x": 3390,
        "y": 240,
        "wires": [
            [
                "10e661c6c7ded4e7",
                "b52b89d5417db470"
            ]
        ]
    },
    {
        "id": "b21db43ffd5c5597",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Store ip details",
        "func": "if ( msg.src === 'ipnodered' ) {\n        var ipnodered = msg.payload; \n        flow.set(\"ipnodered\", ipnodered);//store in context for next time \n        return;\n}\n\nif ( msg.src === 'portnodered' ) {\n        var portnodered = msg.payload; \n        flow.set(\"portnodered\", portnodered);//store in context for next time \n        return;\n}\n\nif ( msg.src === 'filelocation' ) {\n        var filelocationexcl = msg.payload; \n        var filelocation = \"\" + filelocationexcl + \"/tasmota_sonoff_bridge.html\"\n        flow.set(\"filelocation\", filelocation);//store in context for next time \n        return;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "60bd45cb4182b4c0",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "msg.src = 'ipnodered';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3940,
        "y": 100,
        "wires": [
            [
                "b21db43ffd5c5597"
            ]
        ]
    },
    {
        "id": "19b3dfadf146aac7",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "msg.src = 'portnodered';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3940,
        "y": 180,
        "wires": [
            [
                "b21db43ffd5c5597"
            ]
        ]
    },
    {
        "id": "b52b89d5417db470",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "msg.src = 'filelocation';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3940,
        "y": 260,
        "wires": [
            [
                "b21db43ffd5c5597"
            ]
        ]
    },
    {
        "id": "a8017b293b4c44e4",
        "type": "exec",
        "z": "32e6b1c785b786d2",
        "command": "/sbin/ip -4 -o addr show dev eth0| /usr/bin/awk '{split($4,a,\"/\");print a[1]}'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "20",
        "winHide": false,
        "oldrc": false,
        "name": "GetIp",
        "x": 3550,
        "y": 80,
        "wires": [
            [
                "f0bc9f21faf5a78a"
            ],
            [],
            []
        ]
    },
    {
        "id": "9dc84db28ef78e49",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 3370,
        "y": 80,
        "wires": [
            [
                "a8017b293b4c44e4"
            ]
        ]
    },
    {
        "id": "f0bc9f21faf5a78a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "oldIP = msg.payload;\nvar newIP = oldIP.slice(0, oldIP.length-1);\nmsg.payload = newIP;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3720,
        "y": 80,
        "wires": [
            [
                "accf1a11dc0b6389",
                "60bd45cb4182b4c0"
            ]
        ]
    },
    {
        "id": "358856e6a5e45040",
        "type": "file",
        "z": "32e6b1c785b786d2",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4640,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d6c69e413ec1890c",
        "type": "exec",
        "z": "32e6b1c785b786d2",
        "command": "sudo /etc/init.d/domoticz.sh",
        "addpay": false,
        "append": "restart",
        "useSpawn": "false",
        "timer": "30",
        "winHide": false,
        "oldrc": false,
        "name": "Domoticz restart",
        "x": 4820,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "db9ca20934bba080",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4640,
        "y": 160,
        "wires": [
            [
                "d6c69e413ec1890c"
            ]
        ]
    },
    {
        "id": "966012a70158302b",
        "type": "template",
        "z": "32e6b1c785b786d2",
        "name": "opmerking tekst",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "LET OP, lees goed wat er staat.<br>\n<br>\nAls er op \"SUBMIT\" wordt geklikt, zal domoticz over 5 seconden herstarten.<br>\nWil je dit niet, klik dan op \"CANCEL\".<br>",
        "output": "str",
        "x": 3660,
        "y": 300,
        "wires": [
            [
                "77e88446e1293af1"
            ]
        ]
    },
    {
        "id": "77e88446e1293af1",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "Submit",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Herstart domoticz",
        "x": 3850,
        "y": 300,
        "wires": [
            [
                "81bf1074f9edc0f3"
            ]
        ]
    },
    {
        "id": "81bf1074f9edc0f3",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "msg.topic = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 300,
        "wires": [
            [
                "79ec8237220e308b"
            ]
        ]
    },
    {
        "id": "e82f16f2d7456839",
        "type": "ui_spacer",
        "z": "32e6b1c785b786d2",
        "name": "spacer",
        "group": "9a96a8b1.92db78",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b1bc1db1ae7424c0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "verifyservercert": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f6ad6c620c7a1df8",
        "type": "config-log",
        "logname": "DeviceLogSonoffZigbee",
        "logdir": "/home/pi/domoticz/plugins/tasmota2zigbee/",
        "stamp": "local",
        "logstyle": "plain",
        "logrotate": true,
        "logcompress": false,
        "logrotatecount": "15",
        "logsize": "100"
    },
    {
        "id": "ab17d46e1b772514",
        "type": "ui_group",
        "name": "Algemene wijziging - opties",
        "tab": "abe3d4c.9322328",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9493153c6a285be5",
        "type": "ui_group",
        "name": "Set idx nummers en idx tabel",
        "tab": "abe3d4c.9322328",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d325c76.7444a38",
        "type": "ui_group",
        "name": "Zigbee tabel",
        "tab": "abe3d4c.9322328",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e91865c0e53e9f2",
        "type": "ui_group",
        "name": "",
        "tab": "abe3d4c.9322328",
        "order": 6,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4133b8f6529bf1a5",
        "type": "ui_group",
        "name": "Versie nummer",
        "tab": "abe3d4c.9322328",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0a2461924835075",
        "type": "ui_group",
        "name": "Set custom page domoticz",
        "tab": "abe3d4c.9322328",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a96a8b1.92db78",
        "type": "ui_group",
        "name": "Col2",
        "tab": "c3173234.2636e",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "abe3d4c.9322328",
        "type": "ui_tab",
        "name": "Tasmota Zigbee Admin",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c3173234.2636e",
        "type": "ui_tab",
        "name": "RPi Control",
        "icon": "dashboard",
        "order": 2
    }
]
