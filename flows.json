[
    {
        "id": "fe9ee8c084b47472",
        "type": "tab",
        "label": "Sonoff Zigbee2Domoticz",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7ff275045da68003",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Probe to get IPs and Infos",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "c0b6e90bc373771b",
            "bef2273801e888f7",
            "86fac75bfb9f867b"
        ],
        "x": 4474,
        "y": 1999,
        "w": 502,
        "h": 82
    },
    {
        "id": "55c0110d8a16ff0d",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota data ontvangen",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "37f87489bd6dde46",
            "9c4b062463c4e794",
            "37112a7350251da9",
            "67602cbcb9026cc4",
            "7a431dbd8520bd03",
            "f92a5159e97a77a4",
            "b262770faed87cbd",
            "77103c1516206c18",
            "5d2763a1f8e0d5e1",
            "90f47b611c850bf5",
            "95cc09fbdd9089f5",
            "4aca05fbb0986699",
            "3a25158bf00b1ca3",
            "5bd5cc18ada34d81",
            "5f246820ce070bc4",
            "091a6cbf81003659",
            "872e7b0f422a1d41",
            "bb1eb60b98ab7aec"
        ],
        "env": [],
        "x": 34,
        "y": 479,
        "w": 712,
        "h": 482
    },
    {
        "id": "d5b11f0d9e7bf749",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Last Seen and Battery Notification",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "d68ed5181e9c86b1",
            "bb33c93aa582bb8d",
            "13907cbfae6fbf76",
            "1b0988dd438402ed",
            "c7386a6cd9acf86c",
            "1308f565f28a8c73"
        ],
        "x": 4094,
        "y": 1539,
        "w": 892,
        "h": 122
    },
    {
        "id": "aca7b5bb3271a2a5",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Manage zigbee bridge",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "9bb4e40a6c4b2566",
            "0d9959901263a725",
            "bec302e9009c6eea",
            "6598f41dd304fb06",
            "2793e58ce2aba424"
        ],
        "env": [],
        "x": 4114,
        "y": 1439,
        "w": 873,
        "h": 82
    },
    {
        "id": "5c5e3c83cb6dbe07",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Stuur naar zigbee bridge",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "30d9179ca875f514",
            "3e9fdf15cedc30b4",
            "e5e0c4044b9c2f9d",
            "df3e7b691e14412d",
            "0d7afa620c0aa6bf",
            "407b6a20b708894c",
            "7eaa3d68004ad078",
            "28b930df93cbd157",
            "add1e640e055614f",
            "3bd46cbb48803b53",
            "9d8571e1a793b72a",
            "e3fd566a643c7715",
            "7bc63312105345f2",
            "647a620cfaf30bcf",
            "cb3b8a10f455ba6b"
        ],
        "env": [],
        "x": 4114,
        "y": 1219,
        "w": 873,
        "h": 202
    },
    {
        "id": "896b3999999cb97c",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "IDX zigbee tabel",
        "style": {
            "label": true,
            "stroke": "#3f93cf",
            "color": "#3f93cf"
        },
        "nodes": [
            "afdae34213774c80",
            "8859c54cff425966",
            "d95ad6c0fc0c4dba",
            "d95c71698d9a8b80",
            "9519be1631bb453c",
            "d675c07dab7f3d3e",
            "1317126848c925a0",
            "de94480695fba3d6",
            "bdefd8c3dcad29d0",
            "3b40dc7cbbd912aa",
            "df058869800b9833",
            "c86bbe1ef73d57bd",
            "58aca37319371d05",
            "ecb6c1f1d953c7e3",
            "71d3c4bed28867f7",
            "2e645ba5b4c034eb",
            "2d4009137014058b",
            "2bb630daa4cf4ede",
            "a532c4f9908b536a",
            "da1ba52052d62685",
            "55ef8afd05fe2e88",
            "42c5a1b287c92ddc"
        ],
        "env": [],
        "x": 3734,
        "y": 699,
        "w": 1232,
        "h": 362
    },
    {
        "id": "280d3e6578824262",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Set flow.get(tztest) na deploy",
        "style": {
            "label": true,
            "stroke": "#3f93cf",
            "color": "#3f93cf"
        },
        "nodes": [
            "73fbee0549a0e24c",
            "a0f480b6c6317447",
            "d6f935aec6b52ada",
            "b70e39d18f067209",
            "c8b092804c77e1da",
            "4e98d9a253279ba0",
            "549f8188c255a6fc",
            "02e9c41e48846c06",
            "6f463b6e9c88b001",
            "8593ad253022cc51",
            "3d742aa02c8ac93e",
            "b8ad9bb69c783e4b"
        ],
        "env": [],
        "x": 3674,
        "y": 359,
        "w": 1302,
        "h": 162
    },
    {
        "id": "bdaf844989e00ee8",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Zigbee tabel idx",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "3e63ffeeaf565b52",
            "49a573f99df9de32",
            "29079e4881f8691a",
            "c898ad69eda3762d",
            "c7517a7695411d71",
            "c9fa347ab81afe51",
            "f06769e647c4551e",
            "ac9edecb804c22b9",
            "70f52fa4ec5fce95",
            "a020c9e7ce544991",
            "be041a7afb57e35e",
            "30c882c6f623dbb6",
            "eddf6e8fdf7a9e7c"
        ],
        "env": [],
        "x": 3734,
        "y": 539,
        "w": 1252,
        "h": 162
    },
    {
        "id": "d5058dd19940945a",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Alle zigbee apparaten",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "e3ed960a4aa17dc4",
            "dc24154c6e48c679",
            "96b98e5e7309ed24",
            "71ac9f2fe79236ec"
        ],
        "env": [],
        "x": 4194,
        "y": 1899,
        "w": 792,
        "h": 82
    },
    {
        "id": "c101b10c559fee47",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Download knop flows.json",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "b6485973daaf0195",
            "5c54596c4a2203bb",
            "906bf8378dd0bb3d",
            "07b2bc980d296cdf",
            "5354589125109462",
            "a5d54417b7af82fc",
            "af6aade3b269020c",
            "d350df217befa26c",
            "316c0638bc20837a",
            "29c7956d5bba9de9",
            "e52028fa5c84a6c1"
        ],
        "env": [],
        "x": 3754,
        "y": 1079,
        "w": 1232,
        "h": 122
    },
    {
        "id": "44758f092409c09e",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Herbenoem Zigbee apparaten",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "050fb9afb2b185a1",
            "2e5f5500f9bb45f9",
            "4590a9258fa91d0f",
            "b5d12c116471a898",
            "72113a7b7f790446",
            "fc525bd61fe98543",
            "b26efc2253e722f6",
            "2e7efb15b32cef6b",
            "c598d6bbe76c2d9d",
            "84fcdff80c8dfad0"
        ],
        "env": [],
        "x": 4184,
        "y": 1679,
        "w": 802,
        "h": 202
    },
    {
        "id": "228df667ae552978",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Heiman devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "59cc1938fe4a8989",
            "7fb8b93e3108606a",
            "91cb3b0e8eff134b",
            "e76ba050d460bb25",
            "355a0e3683278b80",
            "650b9ca485aeaab1",
            "12f603fb7ce38886",
            "3a6f80efb587496b",
            "6eb23e8f2824607a"
        ],
        "env": [],
        "x": 2134,
        "y": 264,
        "w": 1152,
        "h": 192
    },
    {
        "id": "b7e34177f056a897",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Ikea devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "b795c491237ecd83",
            "d12cbf12c74a94d7",
            "bc634c8e18c261a4",
            "da0e8d0ab6d59724",
            "c752cbda7a171c88",
            "bd35ab52e4bc9e15",
            "423ee036c8c42318",
            "2650a4dc7b195842",
            "99c5802633a6ebf3",
            "7e95562f721cdefd",
            "106ba09215cc4bf7",
            "fc2fa765ab141bd3",
            "c0d6650e03376498",
            "4d8fe180afbe8514",
            "e1d4fe7edd783dd6",
            "0e891d6bbf506488",
            "2265acf8cb8707c4",
            "e39377a2457682b4"
        ],
        "env": [],
        "x": 2134,
        "y": 459,
        "w": 1152,
        "h": 297
    },
    {
        "id": "0a2e01214bded454",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Lidl devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "9d4f9974c069ae65",
            "afac6bbd937f4c16",
            "58fff854fe909786",
            "6b3b57797279c717",
            "843b6baf5da9e7a0",
            "62abf7f8fa42e851",
            "b42a4699db8357fa",
            "3916d8d8f0169b93",
            "5bb905544da5f536",
            "9d025c529cac36aa",
            "8becaa666222f0fb",
            "83fbf5a16a2d3804",
            "a306c5c8fa5ff9a9",
            "f9497cf555673053",
            "91d142db88659e5f",
            "f47089a5d5e9a3b4",
            "f335dbd5e751a1bd",
            "e40155baa8a52116",
            "f463c735fc2aa9c9",
            "5aa905edadd1f100",
            "40e955ac3e334fe2",
            "1618df8f7b35f3d3",
            "82dc3a27f4dbba7d",
            "f3944dc4535573f4",
            "f8218807ecd71335"
        ],
        "env": [],
        "x": 2134,
        "y": 759,
        "w": 1152,
        "h": 402
    },
    {
        "id": "918e0af22924c402",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Osram devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "28c81369517294e3",
            "6b66c7b991eac007",
            "2ac5a575553cb8b6",
            "9b258c86f4629583",
            "0c2f265aecb6fcef"
        ],
        "env": [],
        "x": 2134,
        "y": 1184,
        "w": 1112,
        "h": 112
    },
    {
        "id": "72778dde22d80e88",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Sonoff devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "20abb5580249af22",
            "94f3f677567afe90",
            "1cca10fb7ccaa67d",
            "8683449d486c3f6b",
            "289659383f163731",
            "498ba43866809f9d",
            "e8f24b6b346293fe",
            "9e5cc2582878cf49",
            "be8648d4896c7fc0",
            "555d40212bc6dc53",
            "b3979067ddfa23d7",
            "67849fb16d88cf6d",
            "0d0ad47e5d5cd43d",
            "665a14339afa6db7",
            "772864c8ca3b2d75",
            "29f45b6f02c41d45",
            "8dd6e4a26f0576c7"
        ],
        "env": [],
        "x": 2134,
        "y": 1304,
        "w": 1172,
        "h": 312
    },
    {
        "id": "9bb2b82d7bf97e98",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Set custom page domoticz",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "2482809312f89300",
            "602bca587a78a585",
            "f94d4471621f5ca9",
            "87099ef5e3c4f42d",
            "464597409d205697",
            "074a6188fca8e669",
            "7d6bc7cf78ed1be3",
            "2affe0b4578fa18d",
            "62425111473b4f2c",
            "37609ded5494e00a",
            "8e93351eac0fe01c",
            "a2af7ae190ea9d9d",
            "1a57d4cc192dca16",
            "aa36c8ee94b4e7f4",
            "b3ca1f1704b1aa98",
            "a8d7a924d17378e3",
            "953eee96b0503b51",
            "2d8d2d1ed9343f2b",
            "6f7be6fd19fd603c",
            "49dcd5c1f81a7981"
        ],
        "env": [],
        "x": 3314,
        "y": 19,
        "w": 1672,
        "h": 322
    },
    {
        "id": "fde3092311406cc5",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Xiaomi devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "29960d7b5547c80b",
            "53b00bf0430b7050",
            "e99cc5d4ea5b8ff2",
            "26ed2c8c7d700e4f",
            "c1c0b2dba023871a",
            "fcc45a601372ea82",
            "c5ca73ecb5ac32f7",
            "c3911e29eff22c69",
            "33e999928aa851b6",
            "09efc5ee994f22f0",
            "2d99642c66a5c870",
            "69fba7698ad67740",
            "084cdb103cdf0689",
            "b660a10a741bbea7",
            "08b20c29baa2864e",
            "1e8e1243697e355b",
            "a28d026537f564cb",
            "3fc3cc2a49dd810f",
            "f88985f05d6a2da5",
            "b50e72ef40397145",
            "c4d1576b6fcc7988",
            "336fadefa081e2d6",
            "139535167a72ee3d",
            "37683f48364ef490",
            "be886a66023a4dcb",
            "62152593619eda30",
            "94a98079bb20e16d",
            "01dd9b0687c95a4e",
            "470dd67421ea09cd",
            "f68824538abe0e52",
            "16f71bd9eeec5062",
            "356ebc678ef0dee1",
            "1e24ade3c53d3538"
        ],
        "env": [],
        "x": 2134,
        "y": 1624,
        "w": 1212,
        "h": 672
    },
    {
        "id": "219168e7678220cf",
        "type": "group",
        "z": "fe9ee8c084b47472",
        "name": "Osram devices",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "707724ee7edcf005",
            "3a12c2edd9b6c7d4",
            "23e0810b20425dd3",
            "4aca286ee7c4de75",
            "6208a905899a72f0"
        ],
        "env": [],
        "x": 2134,
        "y": 2244,
        "w": 1172,
        "h": 112
    },
    {
        "id": "1f1263b83da8549a",
        "type": "mqtt out",
        "z": "fe9ee8c084b47472",
        "name": "MQTT Server",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b1bc1db1ae7424c0",
        "x": 1900,
        "y": 940,
        "wires": []
    },
    {
        "id": "a31a8723d566d181",
        "type": "comment",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota commands",
        "info": "ZbPermitJoin 1 = pairing mode voor 60sec\n\nZbName = Friendly name invoeren\n   voorbeeld: ZbName 0x2590,Test_deurcontact\n   \nZbForget <device> = verwijderen device\n\nChange channel:\nZbConfig {\"Channel\":12}\n\nChange panid:\nZbConfig {\"PanID\":\"0x1A69\"}\nhttps://tasmota.github.io/docs/Commands/#zbconfig",
        "x": 110,
        "y": 160,
        "wires": []
    },
    {
        "id": "28b374ac5247c4e6",
        "type": "switch",
        "z": "fe9ee8c084b47472",
        "name": "Filter Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "RESULT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LWT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SENSOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "domoticz/out",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STATE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 890,
        "y": 800,
        "wires": [
            [
                "4d2cef4fee63b42e"
            ],
            [
                "ee7f8e22508b54c7"
            ],
            [
                "1274aa135b44e1cf"
            ],
            [
                "62cc4cdde8b9aab4"
            ],
            [
                "f483cf21a5ccb6a3"
            ],
            [
                "05cab1feee197a4c"
            ],
            [
                "2173baf8d26f1f7d"
            ],
            [
                "6e611cb3e50e402c"
            ],
            [
                "ac42d3eb2359d2d5"
            ]
        ]
    },
    {
        "id": "2ab005474c9d67ae",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic State",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 960,
        "wires": []
    },
    {
        "id": "4d2cef4fee63b42e",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 640,
        "wires": []
    },
    {
        "id": "ac42d3eb2359d2d5",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic not in filter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 960,
        "wires": []
    },
    {
        "id": "f483cf21a5ccb6a3",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic Info1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 800,
        "wires": []
    },
    {
        "id": "2173baf8d26f1f7d",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic Info3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 880,
        "wires": []
    },
    {
        "id": "05cab1feee197a4c",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic Info2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 840,
        "wires": []
    },
    {
        "id": "b3aa08a735e5aa16",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "To MQTT Server",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 900,
        "wires": []
    },
    {
        "id": "90f47b611c850bf5",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "add src",
        "func": "msg.src = 'tasmota';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 740,
        "wires": [
            [
                "28b374ac5247c4e6"
            ]
        ]
    },
    {
        "id": "b262770faed87cbd",
        "type": "mqtt in",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "topic": "domoticz/out",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "inputs": 0,
        "x": 190,
        "y": 920,
        "wires": [
            [
                "77103c1516206c18",
                "4aca05fbb0986699"
            ]
        ]
    },
    {
        "id": "77103c1516206c18",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "add src",
        "func": "msg.src = 'domoticz';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 920,
        "wires": [
            [
                "28b374ac5247c4e6"
            ]
        ]
    },
    {
        "id": "f2ae12a8451e0a9e",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1330,
        "y": 740,
        "wires": [
            [
                "4496ae8e6ae3b948"
            ]
        ]
    },
    {
        "id": "17fce7e4a549f3c4",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "MQTT Server",
        "links": [
            "01dd9b0687c95a4e",
            "08b20c29baa2864e",
            "139535167a72ee3d",
            "20abb5580249af22",
            "2793e58ce2aba424",
            "2d99642c66a5c870",
            "356ebc678ef0dee1",
            "423ee036c8c42318",
            "4aca286ee7c4de75",
            "6b3b57797279c717",
            "7eaa3d68004ad078",
            "83fbf5a16a2d3804",
            "86fac75bfb9f867b",
            "91d142db88659e5f",
            "99c5802633a6ebf3",
            "9b258c86f4629583",
            "a28d026537f564cb",
            "b26efc2253e722f6",
            "b42a4699db8357fa",
            "c3911e29eff22c69",
            "c752cbda7a171c88",
            "e76ba050d460bb25",
            "f463c735fc2aa9c9",
            "fb7face5ab5f8842",
            "fcc45a601372ea82",
            "2265acf8cb8707c4",
            "6eb23e8f2824607a",
            "be8648d4896c7fc0",
            "f8218807ecd71335",
            "b3979067ddfa23d7",
            "772864c8ca3b2d75"
        ],
        "x": 1755,
        "y": 920,
        "wires": [
            [
                "1f1263b83da8549a",
                "b3aa08a735e5aa16",
                "35e24bbe339bbbea"
            ]
        ]
    },
    {
        "id": "ee7f8e22508b54c7",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Topic LWT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 680,
        "wires": []
    },
    {
        "id": "1274aa135b44e1cf",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 720,
        "wires": [
            [
                "d3e6a3da5ededfb8",
                "55927c21d4dc4376",
                "76869f79281528dd"
            ]
        ]
    },
    {
        "id": "d3e6a3da5ededfb8",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota Json Receive",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 700,
        "wires": []
    },
    {
        "id": "28c81369517294e3",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "918e0af22924c402",
        "name": "Osram mini switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9d4f9974c069ae65",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno RGB Bulb",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n       \n        if ( idx !== 0 ) {\n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false};\n            }\n\t        else {\n                msg = null;\n            }\n    \t} else {\n    \t    msg = null;\n    \t}\n\t    \n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n        return [msg, linkmsg];\t\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n\tvar level = (msg.payload.Level * 2.54);\n\tvar color;\n\t\n\tvar R = msg.payload.Color.r/255;\n\tvar G = msg.payload.Color.g/255;\n\tvar B = msg.payload.Color.b/255;\n\t\n\tvar X = R * 0.649926 + G * 0.103455 + B * 0.197109;\n    var Y = R * 0.234327 + G * 0.743075 + B * 0.022598;\n    var Z = R * 0.0000000 + G * 0.053077 + B * 1.035763;\n\n\t//var X =  0.4124*R + 0.3576*G + 0.1805*B;\n    //var Y =  0.2126*R + 0.7152*G + 0.0722*B;\n    //var Z =  0.0193*R + 0.1192*G + 0.9505*B;\n\t\n\tvar first = (X / (X + Y + Z)) * 65536;\n    var second = (Y / (X + Y + Z)) * 65536;\n\t\n\tvar RGB = \"\" + first + \",\" + second + \"\"\n\t\t\n    if (msg.payload.Color.t === null) {\n        color = (153);    \n    } \n    else {\n        color = ((msg.payload.Color.t * 1.37) + 153);\n    }\n    \n    \n    if ( msg.payload.nvalue === 1) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n\t\treturn [msg, null];\n    } else if ( msg.payload.nvalue === 0) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msg, null];\n    }\n    else {\n        var msgcolor\n        if (msg.payload.Color.t === 0) {\n            msgcolor = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Color\":RGB}}};\n        } else {\n            msgcolor = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"CT\":color}}};\n        }\n        var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n        return [msgcolor, msglev];\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 840,
        "wires": [
            [
                "6b3b57797279c717"
            ],
            [
                "6b3b57797279c717"
            ]
        ]
    },
    {
        "id": "afac6bbd937f4c16",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno RGB Bulb",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 840,
        "wires": []
    },
    {
        "id": "59cc1938fe4a8989",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman CO detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n    if ( idx !== 0 ) {\n\t    var updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n        var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n     \n    \tif (context.get(zigbeeid) === undefined) {\n            context.set(zigbeeid, 3);\n        }\n    \n    \tif (msg.payload.ZbReceived[zigbeeid].CO === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            } \n\t        else if (context.get(zigbeeid) === 1) {  \n                msg = updmsg1; \n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].CO === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n\t    }\n    } else {\n        msg = null;\n    }\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 320,
        "wires": [
            [
                "e76ba050d460bb25"
            ],
            [
                "e76ba050d460bb25"
            ],
            [
                "e76ba050d460bb25"
            ],
            [
                "e76ba050d460bb25"
            ]
        ]
    },
    {
        "id": "7fb8b93e3108606a",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman CO detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 320,
        "wires": []
    },
    {
        "id": "b795c491237ecd83",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea E1743 remote",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxper = msg.payload.ZbReceived.idxper;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n    var topicname = msg.payload.ZbReceived.topicname;\n\n    var level;\n    var percmsg;\n    var linkmsg;\n    var askbat;\n    var valuebatperc;\n    var valuelink;\n\n    function askbatidxlink() {\n        askbat = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\": zigbeeid,\"Read\":{\"BatteryPercentage\":false}}};\n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n    }\n    \n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n        }\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n            \n        if ( idx !== 0 ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 0) {\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"0\"};\n                askbatidxlink();\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n                askbatidxlink();    \n            } \n            else if (msg.payload.ZbReceived[zigbeeid].DimmerMove === 0) {\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n                askbatidxlink();    \n            }\n            else if (msg.payload.ZbReceived[zigbeeid].DimmerMove === 1) {\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n                askbatidxlink();    \n            }\n            else if (msg.payload.ZbReceived[zigbeeid].DimmerStop === true) {\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n                askbatidxlink();   \n            } \n            else {\n             \tmsg = null;\n            }\n        } else {\n            msg = null;\n        }\n    \n        if ( idxper !== 0 ) {\n            if (valuebatperc !== undefined) {\n                percmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n                msg = null;\n                askbat = null;\n                linkmsg = null;\n            } else {\n                percmsg = null;\n            }\n        } else {\n            percmsg = null;\n        }\n        return [msg, percmsg, linkmsg, askbat];\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxperinfo = msg.payload.ZbInfo.idxper;\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var percmsginfo;\n    var linkmsginfo;\n    var valuebatpercinfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatpercinfo = msg.payload.ZbInfo[zigbeeidinfo].BatteryPercentage;\n        }\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxperinfo !== 0 ) {\n            if (valuebatpercinfo !== undefined) {\n                percmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxperinfo , \"svalue\": \"\" + valuebatpercinfo + \"\", \"parse\": false}}; \n            } else {\n                percmsginfo = null;\n            }\n        } else {\n            percmsginfo = null;\n        }\n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, percmsginfo, linkmsginfo, null];\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 620,
        "wires": [
            [
                "c752cbda7a171c88"
            ],
            [
                "c752cbda7a171c88"
            ],
            [
                "c752cbda7a171c88"
            ],
            [
                "fc2fa765ab141bd3"
            ]
        ]
    },
    {
        "id": "d12cbf12c74a94d7",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea E1743 remote",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 620,
        "wires": []
    },
    {
        "id": "62cc4cdde8b9aab4",
        "type": "switch",
        "z": "fe9ee8c084b47472",
        "name": "IDX check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "idx",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 760,
        "wires": [
            [
                "f2ae12a8451e0a9e"
            ],
            [
                "2945774ecd287a8c"
            ]
        ]
    },
    {
        "id": "2945774ecd287a8c",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "no IDX availble",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 780,
        "wires": []
    },
    {
        "id": "55927c21d4dc4376",
        "type": "gate",
        "z": "fe9ee8c084b47472",
        "name": "Gate",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1650,
        "y": 720,
        "wires": [
            [
                "62aff541a9f41a75",
                "4496ae8e6ae3b948"
            ]
        ]
    },
    {
        "id": "406fa44348363124",
        "type": "change",
        "z": "fe9ee8c084b47472",
        "name": "Set Control",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 600,
        "wires": [
            [
                "6e53a18a4f6fed13"
            ]
        ]
    },
    {
        "id": "6e53a18a4f6fed13",
        "type": "trigger",
        "z": "fe9ee8c084b47472",
        "name": "",
        "op1": "",
        "op2": "open",
        "op1type": "pay",
        "op2type": "str",
        "duration": "3000",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1420,
        "y": 600,
        "wires": [
            [
                "55927c21d4dc4376"
            ]
        ]
    },
    {
        "id": "c9e5c5badc9a8085",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Block-gate-in",
        "links": [
            "0ded517531ee02b6",
            "6b3b57797279c717",
            "423ee036c8c42318",
            "b42a4699db8357fa",
            "f463c735fc2aa9c9"
        ],
        "x": 1075,
        "y": 600,
        "wires": [
            [
                "406fa44348363124"
            ]
        ]
    },
    {
        "id": "62aff541a9f41a75",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Gate block",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1850,
        "y": 660,
        "wires": []
    },
    {
        "id": "6b66c7b991eac007",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "918e0af22924c402",
        "name": "Osram mini switch",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\t\n\tif ( idx !== 0 ) {\n\t    //Up\n        if (msg.payload.ZbReceived[zigbeeid][\"0006!01\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 1 && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n        }\n        //Up hold\n        else if (msg.payload.ZbReceived[zigbeeid][\"0008!05\"] === \"0026\" && msg.payload.ZbReceived[zigbeeid].DimmerMove === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n        }\n        //Up release\n        else if (msg.payload.ZbReceived[zigbeeid][\"0008!03\"] === \"\" && msg.payload.ZbReceived[zigbeeid].DimmerStop === true && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n        }\n        //Circle\n        else if (msg.payload.ZbReceived[zigbeeid][\"0008!04\"] === \"FE0A00\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n        }\n        //Circle hold\n        else if (msg.payload.ZbReceived[zigbeeid][\"0300!01\"] === \"0119\" && msg.payload.ZbReceived[zigbeeid].HueMove === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"50\"};\n        }\n        //Circle release\n        else if (msg.payload.ZbReceived[zigbeeid][\"0300!01\"] === \"0000\" && msg.payload.ZbReceived[zigbeeid].HueMove === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"60\"};\n        }\n        //Down\n        else if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 2 && msg.payload.ZbReceived[zigbeeid].Power === 0) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"70\"};\n        }\n        //Down hold\n        else if (msg.payload.ZbReceived[zigbeeid][\"0008!01\"] === \"0126\" && msg.payload.ZbReceived[zigbeeid].DimmerMove === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"80\"};\n        }\n        //Down release\n        else if (msg.payload.ZbReceived[zigbeeid][\"0008!03\"] === \"\" && msg.payload.ZbReceived[zigbeeid].DimmerStop === true && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"90\"};\n        } \n        else {\n            msg = null;\n        }\n\t} else {\n\t    msg = null;\n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1240,
        "wires": [
            [
                "9b258c86f4629583"
            ],
            [
                "9b258c86f4629583"
            ],
            [
                "9b258c86f4629583"
            ],
            [
                "9b258c86f4629583"
            ]
        ]
    },
    {
        "id": "1b2b404d1e13b0bd",
        "type": "flogger",
        "z": "fe9ee8c084b47472",
        "name": "",
        "logfile": "T2Z-flogger-logfile.txt",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "f6ad6c620c7a1df8",
        "sendpane": "",
        "x": 1970,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "bc634c8e18c261a4",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea ICPSHC24 led strip",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 500,
        "wires": []
    },
    {
        "id": "2ac5a575553cb8b6",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "918e0af22924c402",
        "name": "Osram mini switch in",
        "links": [
            "9b258c86f4629583",
            "8b7f9c7c96650350"
        ],
        "x": 2955,
        "y": 1240,
        "wires": [
            [
                "28c81369517294e3"
            ]
        ]
    },
    {
        "id": "9b258c86f4629583",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "918e0af22924c402",
        "name": "Osram mini switch out",
        "mode": "link",
        "links": [
            "2ac5a575553cb8b6",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 1240,
        "wires": []
    },
    {
        "id": "58fff854fe909786",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno RGB in",
        "links": [
            "6b3b57797279c717",
            "bfbb529c51f44cf9"
        ],
        "x": 2955,
        "y": 840,
        "wires": [
            [
                "afac6bbd937f4c16"
            ]
        ]
    },
    {
        "id": "6b3b57797279c717",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno RGB out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "58fff854fe909786",
            "c9e5c5badc9a8085"
        ],
        "x": 2895,
        "y": 840,
        "wires": []
    },
    {
        "id": "91cb3b0e8eff134b",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman CO in",
        "links": [
            "e76ba050d460bb25",
            "ad73507f15bf9249"
        ],
        "x": 2955,
        "y": 320,
        "wires": [
            [
                "7fb8b93e3108606a"
            ]
        ]
    },
    {
        "id": "e76ba050d460bb25",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman CO out",
        "mode": "link",
        "links": [
            "91cb3b0e8eff134b",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 320,
        "wires": []
    },
    {
        "id": "da0e8d0ab6d59724",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea E1743 in",
        "links": [
            "c752cbda7a171c88",
            "c2f3907aa0b72ddc"
        ],
        "x": 2955,
        "y": 620,
        "wires": [
            [
                "d12cbf12c74a94d7"
            ]
        ]
    },
    {
        "id": "c752cbda7a171c88",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea E1743 out",
        "mode": "link",
        "links": [
            "da0e8d0ab6d59724",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 620,
        "wires": []
    },
    {
        "id": "bd35ab52e4bc9e15",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea ICPSHC24 in",
        "links": [
            "423ee036c8c42318",
            "032cb5d89205a87e"
        ],
        "x": 2955,
        "y": 500,
        "wires": [
            [
                "bc634c8e18c261a4"
            ]
        ]
    },
    {
        "id": "423ee036c8c42318",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea ICPSHC24 out",
        "mode": "link",
        "links": [
            "c9e5c5badc9a8085",
            "bd35ab52e4bc9e15",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 500,
        "wires": []
    },
    {
        "id": "2650a4dc7b195842",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea Powerplug",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if ( idx !== 0 ) {\n                if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\"};\n                }\n                else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\"};\n                }\n\t\t        else {\n        \t\t    msg = null;\n\t\t        }\n            } else {\n                msg = null;\n            }\n            \n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var linkmsginfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, linkmsginfo];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n    if ( msg.payload.nvalue === 1) {\n        var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n        return [msgpow1, null];\n    } else if ( msg.payload.nvalue === 0) {\n        var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msgpow0, null];//\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 560,
        "wires": [
            [
                "99c5802633a6ebf3"
            ],
            [
                "99c5802633a6ebf3"
            ]
        ]
    },
    {
        "id": "99c5802633a6ebf3",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea powerplug out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "7e95562f721cdefd"
        ],
        "x": 2895,
        "y": 560,
        "wires": []
    },
    {
        "id": "7e95562f721cdefd",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea powerplug in",
        "links": [
            "99c5802633a6ebf3",
            "3af4d6f4138c2bd4"
        ],
        "x": 2955,
        "y": 560,
        "wires": [
            [
                "106ba09215cc4bf7"
            ]
        ]
    },
    {
        "id": "106ba09215cc4bf7",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea powerplug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 560,
        "wires": []
    },
    {
        "id": "226e6ddfad569d8c",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Flogger link",
        "links": [],
        "x": 1855,
        "y": 1060,
        "wires": [
            [
                "1b2b404d1e13b0bd"
            ]
        ]
    },
    {
        "id": "fc2fa765ab141bd3",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "",
        "pauseType": "delay",
        "timeout": "1800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2760,
        "y": 640,
        "wires": [
            [
                "c752cbda7a171c88"
            ]
        ]
    },
    {
        "id": "1a658ea610c0e0ee",
        "type": "change",
        "z": "fe9ee8c084b47472",
        "name": "Set Control Ikea 1743",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 560,
        "wires": [
            [
                "402e4b3e80019353"
            ]
        ]
    },
    {
        "id": "121677f67d26e33a",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Block-gate-overrule-open",
        "links": [
            "c2f3907aa0b72ddc"
        ],
        "x": 1075,
        "y": 560,
        "wires": [
            [
                "1a658ea610c0e0ee"
            ]
        ]
    },
    {
        "id": "402e4b3e80019353",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "name": "",
        "pauseType": "delay",
        "timeout": "1800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1420,
        "y": 560,
        "wires": [
            [
                "55927c21d4dc4376"
            ]
        ]
    },
    {
        "id": "c0d6650e03376498",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea ICPSHC24 led strip",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if ( idx !== 0 ) {\n                if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\", \"parse\": false};\n                }\n                else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\", \"parse\": false};\n                }\n\t\t        else {\n        \t\t    msg = null;\n\t    \t    }\n            } else { \n                msg = null;\n            }\n            \n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n        var ZigbeeID = msg.payload.zigbeeid\n        var level = (msg.payload.Level * 2.54);\n        var topicname = msg.payload.topicname;\n        if ( msg.payload.nvalue === 1) {\n            var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n            return [msgpow1, null];\n        } else if ( msg.payload.nvalue === 0) {\n            var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n            return [msgpow0, null];//\n        }\n        else {\n            var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n            return [null, msglev];\n        }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 500,
        "wires": [
            [
                "423ee036c8c42318"
            ],
            [
                "423ee036c8c42318"
            ]
        ]
    },
    {
        "id": "76869f79281528dd",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota Json Receive",
        "mode": "link",
        "links": [],
        "x": 1295,
        "y": 660,
        "wires": []
    },
    {
        "id": "86b817edc7ae2c52",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "E1743 + Powerplug bat+link",
        "func": "var getflow = flow.keys();\nvar topicname;\n\nif (getflow !== \"\") {\n    for ( var i = 0; i < getflow.length; i++ ) {\n        var zigbeedevice = getflow[i]; //geeft het zigbee ID\n        var digits = (zigbeedevice.substring(0,2));\n        if (digits == \"0x\") {\n          topicname = flow.get(zigbeedevice)[1]; //geeft array0\n          msg.topic = \"cmnd/\" + topicname + \"/ZbInfo\"\n          msg.payload = zigbeedevice;\n          node.send(msg);\n        }\n    }\n} \nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 920,
        "wires": [
            [
                "fb7face5ab5f8842"
            ]
        ]
    },
    {
        "id": "c3d7575710381576",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "Not in the tasmota ID filter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 240,
        "wires": []
    },
    {
        "id": "f92a5159e97a77a4",
        "type": "switch",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "Filter data",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ZbReceived",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "ZbInfo",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 460,
        "y": 780,
        "wires": [
            [
                "90f47b611c850bf5"
            ],
            [
                "5d2763a1f8e0d5e1"
            ],
            [
                "28b374ac5247c4e6"
            ]
        ]
    },
    {
        "id": "5d2763a1f8e0d5e1",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "add src",
        "func": "msg.src = 'tasmotainfo';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 780,
        "wires": [
            [
                "28b374ac5247c4e6"
            ]
        ]
    },
    {
        "id": "fb7face5ab5f8842",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "name": "Fake ikea out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4"
        ],
        "x": 1695,
        "y": 920,
        "wires": []
    },
    {
        "id": "2a9af97bcc2e365d",
        "type": "comment",
        "z": "fe9ee8c084b47472",
        "name": "V_25-05-2022_R1",
        "info": "25-05-2022 R1:\n- Aanpassing: \"Endpoint\":1 toegevoegd aan Sonoff S26R2ZB\n- Aanpassing: Sonoff SNZB-02, bij missende data toch bericht versturen.\n- Aanpassing: Device namen worden beter in tabellen toegevoegd/verwijdert worden\n23-05-2021 R1:\n- Bug:        Domoticz commands voor sonoff werden niet gerouteerd in UI table\n22-05-2021 R1:\n- Toegevoegd: Sonoff SNZB-02\n19-05-2022 R1:\n- Toegevoegd: Sonoff S26R2ZB\n17-05-2022 R1:\n- Toegevoegd: Lidl HG06620 \n- Bug:        Variable vendor bug opgelost (Met dank aan Appiesan)\n24-04-2022 R1:\n- Aanpassing: Verwijderen device uit IDX-tabel vraagt eerst om bevestiging alvorens te verwijderen\n17-04-2022 R2:\n- Bug:        Wegschrijven naam bij set idx ging niet goed, werd bridge/zigbeeid getoond\n17-04-2022 R1:\n- Toegevoegd: Ikea motion E1525\n- Toegevoegd: Ikea motion E1745\n- Toegevoegd: Heiman rookmelder HS1SA\n- Toegevoegd: Sonoff motion SNZB-03\n- Aanpassing: Menu gebruiksvriendelijker gemaakt\n11-04-2022 R2:\n- Aanpassing: Check op ikea flow data, om error te voorkomen\n11-04-2022 R1:\n- Aanpassing: Lidl TS0601: idxextra werkte niet correct\n10-04-2022 R3:\n- Aanpassing: In \"Set idx nummers en idx tabel\" een aanpassing doorgevoerd\n10-04-2022 R2:\n- Toegevoegd: Button \"Hoe device instellen domoticz\"\n10-04-2022 R1:\n- Toegevoegd: Tuya switch 4-buttons\n09-04-2022 R2:\n- Toegevoegd: Lidl HG06335/HG07310 \n09-04-2022 R1:\n- Toegevoegd: Debug mqtt veld in UI\n- Toegevoegd: Xiaomi smart home cube\n- Aanpassing: Als IDX 0 is, dan gaat er geen bericht naar domoticz\n08-04-2022 R1:\n- Toegevoegd: Lidl HG06336\n- Toegevoegd: Lampen (RGB/CCT) lidl toegevoegd\n05-04-2022 R2:\n- Aanpassing: Lidl HG06106B, dat CT en RGB mogelijk is.\n05-04-2022 R1:\n- Toegevoegd: Lidl HG06106B\n01-04-2022 R1:\n- Aanpassing: Optie om de custom domoticz pagina in te stellen toegevoegd\n17-02-2022 R1: \n- Gestart met Versie nummers",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "6e611cb3e50e402c",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1110,
        "y": 920,
        "wires": [
            [
                "fb87444d663cc51c",
                "2ab005474c9d67ae"
            ]
        ]
    },
    {
        "id": "fb87444d663cc51c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "Split time",
        "func": "var minuts = msg.payload.Time\nvar array = minuts.split(\":\");\nvar value = parseFloat(array[1]);\nif (value < 5) {\n    msg.payload = value;\n} else {\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 920,
        "wires": [
            [
                "86b817edc7ae2c52"
            ]
        ]
    },
    {
        "id": "3d42a9509df3af38",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "store Tasmota Info",
        "func": "var devs; \n\nif ( msg.src === 'restore' ) {\n    devs = flow.get(\"tasmotas\") || {};\n    return {payload:Object.values(devs)};\n} else {\n\n    devs = flow.get(\"tasmotas\") || {};\n\n    // extract devname\n    let devName = msg.topic.split(\"/\")[1];\n\n    // get dev by name\n    let dev = devs[devName] || {};\n    dev.lastTime = new Date().getTime();\n\n    // extract data from msg\n    if (msg.topic.includes(\"SENSOR\")) {\n        if (msg.payload.ZbReceived !== undefined) {\n            dev.zigbee = true;\n        } else {\n            dev.zigbee = false;\n            return;\n        }\n    } else if (msg.topic.includes(\"STATE\")) {\n        dev.STATE = msg.payload;  \n    } else if (msg.topic.includes(\"STATUS5\")) {\n        dev.STATUS5 = msg.payload; \n        dev.link = \"<a href=http://\"+msg.payload.StatusNET.IPAddress+\" target=\\\"_blank\\\">\"+devName+\"</a>\";\n    } else if (msg.topic.includes(\"STATUS2\")) {\n        dev.STATUS2 = msg.payload;  \n    } else if (msg.topic.includes(\"INFO2\")) {\n        dev.INFO2 = msg.payload; \n        dev.link = \"<a href=http://\"+msg.payload.IPAddress+\" target=\\\"_blank\\\">\"+devName+\"</a>\";\n    } else if (msg.payload.ZbState !== undefined) {\n        dev.ZbState = msg.payload.ZbState;  \n        dev.zigbee = true;\n    } \n\n    // set name/link\n    dev.name = devName;\n    if (dev.link === undefined) dev.link = dev.name;\n   \n    // calc last seen\n    Object.entries(devs).forEach(element => element[1].seen = Math.round((new Date().getTime()-element[1].lastTime)/60000)+\"m\");\n\n   // write back\n   devs[devName] = dev;\n   flow.set(\"tasmotas\", devs);\n\n   return {payload:Object.values(devs)};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 1360,
        "wires": [
            [
                "9bb4e40a6c4b2566",
                "e5e0c4044b9c2f9d"
            ]
        ]
    },
    {
        "id": "6de321a36a5801d6",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "store zigbee sensors",
        "func": "var devs; \n\nif ( msg.src === 'restore' ) {\n    devs = flow.get(\"t2zdevices\") || {};\n    return [{payload:Object.values(devs)}, {payload:Object.values(devs)}];\n} else if (msg.payload.ZbReceived === undefined) {\n    return;\n} else {\n\n\n    // properties that should  show up in the status\n    var inStatus = [\"Contact\", \"Occupancy\", \"Power\", \"Power2\", \"Dimmer\", \"Hue\", \"CT\", \"ColorMode\", \"Sat\", \"RGB\", \"RGBb\", \"Temperature\", \"Humidity\", \"Pressure\", \"LocalTemperature\", \"OccupiedHeatingSetpoint\", \"PIHeatingDemand\", \"Illuminance\", \"AqaraVibrationMode\", \"AqaraVibrationsOrAngle\", \"AqaraVibration505\", \"ZoneStatusChange\", \"AqaraCube\", \"AqaraCubeSide\", \"AqaraCubeFromSide\", \"AqaraRotate\"];\n\n    // properties that should not show up in the status\n    var notStatus = [\"Device\", \"Name\", \"BatteryVoltage\", \"BatteryPercentage\", \"LinkQuality\", \"Endpoint\", \"bridge\", \"lastTime\", \"seen\", \"label\", \"status\", \"EurotronicErrors\", \"0201/4008\", \"Xiaomi_64\"];\n\n    //node.warn(msg.payload);\n    devs = flow.get(\"t2zdevices\") || {};\n\n    var update;\n    update = {payload:Object.values(devs)};\n\n    devt = flow.get(\"t2ztable\") || {};\n    var length = Object.keys(devt).length;\n    for ( var i = 0; i < length; i++ ) {\n        var keys = Object.keys(devt);\n        var IDkey = keys[i];\n        //var message = devs[IDkey].Device;\n        var message = devt[IDkey].zigbeeid;\n        //var messageidx = parseInt(devs[IDkey].idx);\n        if (msg.payload.ZbReceived[message]) {\n            if (devt[IDkey].vendors !== \"onbekend\") {\n                update = null;\n                //node.warn(message)\n            }\n        }\n        \n    }\n        \n\n\n\n\n    var receivedSensors = []\n    for (var devN in msg.payload.ZbReceived) {\n        let devInfo = msg.payload.ZbReceived[devN];\n        let ID = devInfo.Device;\n    \n        // get dev by ID\n        let dev = devs[ID] || {};\n\n        for (let prop in devInfo) {\n            dev[prop] = devInfo[prop];\n        }\n    \n        if (devInfo.Name!==undefined) {\n            dev.label = devInfo.Name;\n        } else {\n            dev.label = ID; \n        }\n        dev.bridge = msg.topic.split(\"/\")[1];\n        dev.lastTime = new Date().getTime();\n    \n        // create status from properties\n        let status = \"\";\n        for (let prop in dev) {\n            if (inStatus.includes(prop)) {\n                status += \" \"+prop+\": \"+ dev[prop]; \n            }\n        }\n        if (status === \"\") {\n            for (let prop in dev) {\n                if (! notStatus.includes(prop)) {\n                    status += \" \"+prop+\": \"+ dev[prop]; \n                }\n            }   \n        }\n        dev.status = status;\n    \n        // write back\n        devs[ID] = dev;\n       receivedSensors.push(dev);\n    }\n   \n    Object.entries(devs).forEach(element => element[1].seen = Math.round((new Date().getTime()-element[1].lastTime)/60000)+\"m\");\n    \n    flow.set(\"t2zdevices\", devs);\n\n    //return [{payload:Object.values(devs)}, {payload:receivedSensors}];\n    return [update, {payload:Object.values(devs)}];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4040,
        "y": 1800,
        "wires": [
            [
                "2e5f5500f9bb45f9"
            ],
            [
                "e3ed960a4aa17dc4",
                "84fcdff80c8dfad0"
            ]
        ]
    },
    {
        "id": "6891001fbdbf2081",
        "type": "catch",
        "z": "fe9ee8c084b47472",
        "name": "",
        "scope": [
            "9c4b062463c4e794"
        ],
        "uncaught": false,
        "x": 3210,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c0b6e90bc373771b",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "7ff275045da68003",
        "name": "Send probe",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "14400",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "ds",
        "payloadType": "str",
        "x": 4590,
        "y": 2040,
        "wires": [
            [
                "bef2273801e888f7"
            ]
        ]
    },
    {
        "id": "bef2273801e888f7",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "7ff275045da68003",
        "name": "Probe status",
        "func": "\nvar msg1 = { topic:\"cmnd/sonoffs/STATUS\", payload:\"5\" };\nvar msg2 = { topic:\"cmnd/tasmotas/STATUS\", payload:\"5\" };\nvar msg3 = { topic:\"cmnd/sonoffs/STATUS\", payload:\"2\" };\nvar msg4 = { topic:\"cmnd/tasmotas/STATUS\", payload:\"2\" };\nreturn [ [msg1, msg2, msg3, msg4] ];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4790,
        "y": 2040,
        "wires": [
            [
                "86fac75bfb9f867b"
            ]
        ]
    },
    {
        "id": "37f87489bd6dde46",
        "type": "mqtt in",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "topic": "tele/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 210,
        "y": 780,
        "wires": [
            [
                "9c4b062463c4e794",
                "f92a5159e97a77a4",
                "5f246820ce070bc4"
            ]
        ]
    },
    {
        "id": "9c4b062463c4e794",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "bb1eb60b98ab7aec"
            ]
        ]
    },
    {
        "id": "37112a7350251da9",
        "type": "mqtt in",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "topic": "stat/+/STATUS5",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 580,
        "wires": [
            [
                "9c4b062463c4e794"
            ]
        ]
    },
    {
        "id": "67602cbcb9026cc4",
        "type": "mqtt in",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "topic": "tele/+/INFO2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 190,
        "y": 520,
        "wires": [
            [
                "9c4b062463c4e794"
            ]
        ]
    },
    {
        "id": "7a431dbd8520bd03",
        "type": "mqtt in",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "topic": "stat/+/STATUS2",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 640,
        "wires": [
            [
                "9c4b062463c4e794"
            ]
        ]
    },
    {
        "id": "d68ed5181e9c86b1",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "d5b11f0d9e7bf749",
        "name": "Check LastSeen and Battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "18000",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 4270,
        "y": 1580,
        "wires": [
            [
                "bb33c93aa582bb8d",
                "c7386a6cd9acf86c"
            ]
        ]
    },
    {
        "id": "bb33c93aa582bb8d",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "d5b11f0d9e7bf749",
        "name": "Check Zigbee lastseen and Battery",
        "func": "\nvar devs = flow.get(\"t2zdevices\") || {};\n\nvar warning = \"\";\nfor (var devN in devs) {\n    let devInfo = devs[devN];\n    //node.warn(devInfo.seen + \" \" + devInfo.BatteryPercentage);\n    if (devInfo.BatteryPercentage !== undefined && devInfo.BatteryPercentage < 25) {\n         //node.warn(devInfo.Name + \" Battery Low: \" + devInfo.BatteryPercentage);\n         warning += \"\\t\" + devInfo.Name + \" battery low : \" + devInfo.BatteryPercentage + \"%\\n\"\n    }\n    if (parseInt(devInfo.seen) > 720) {\n         //node.warn(devInfo.Name + \" seems offline: \" + devInfo.seen);\n         warning += \"\\t\" + devInfo.Name + \" seems offline: \" + devInfo.seen + \"\\n\"\n    }\n}\n\n//node.warn(warning);\nif (warning !== \"\") {\n    msg.payload = \"Zigbee Devices: \" + warning;\n    msg.sound = \"none\";\n    return msg;\n}\n\nreturn null;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4580,
        "y": 1580,
        "wires": [
            [
                "13907cbfae6fbf76",
                "1308f565f28a8c73"
            ]
        ]
    },
    {
        "id": "13907cbfae6fbf76",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "d5b11f0d9e7bf749",
        "position": "top left",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Device Warning!",
        "x": 4880,
        "y": 1580,
        "wires": []
    },
    {
        "id": "1b0988dd438402ed",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "d5b11f0d9e7bf749",
        "name": "Check Tasmota lastseen",
        "func": "\n\nvar devs = flow.get(\"tasmotas\") || {};\n\nvar warning = \"\";\nfor (var devN in devs) {\n    let devInfo = devs[devN];\n    //node.warn(devInfo.name + \" \" + devInfo.seen);\n    if (parseInt(devInfo.seen) > 60) {\n         //node.warn(devInfo.name + \" seems offline: \" + devInfo.seen);\n         warning += \"\\t\" + devInfo.name + \" seems offline: \" + devInfo.seen + \"\\n\"\n    }\n}\n\n//node.warn(warning);\nif (warning !== \"\") {\n    msg.payload = \"Tasmota Devices: \" + warning;\n    msg.sound = \"none\";\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4550,
        "y": 1620,
        "wires": [
            [
                "13907cbfae6fbf76",
                "1308f565f28a8c73"
            ]
        ]
    },
    {
        "id": "c7386a6cd9acf86c",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "d5b11f0d9e7bf749",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 4320,
        "y": 1620,
        "wires": [
            [
                "1b0988dd438402ed"
            ]
        ]
    },
    {
        "id": "1308f565f28a8c73",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "d5b11f0d9e7bf749",
        "name": "SensorsProblem Notification",
        "links": [
            "764cb81e.ab379"
        ],
        "x": 4815,
        "y": 1620,
        "wires": []
    },
    {
        "id": "9bb4e40a6c4b2566",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "aca7b5bb3271a2a5",
        "name": "filter Zigbee Bridges",
        "func": "let zbBridges = msg.payload.filter(function(el) {\n      return el.zigbee === true;\n  })\n\nmsg.payload = zbBridges;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4240,
        "y": 1480,
        "wires": [
            [
                "bec302e9009c6eea"
            ]
        ]
    },
    {
        "id": "0d9959901263a725",
        "type": "ui_dropdown",
        "z": "fe9ee8c084b47472",
        "g": "aca7b5bb3271a2a5",
        "name": "",
        "label": "PermitJoin",
        "tooltip": "",
        "place": "",
        "group": "ab17d46e1b772514",
        "order": 11,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "oldname",
        "topicType": "str",
        "className": "",
        "x": 4670,
        "y": 1480,
        "wires": [
            [
                "6598f41dd304fb06"
            ]
        ]
    },
    {
        "id": "bec302e9009c6eea",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "aca7b5bb3271a2a5",
        "name": "extract devicenames",
        "func": "msg.options = msg.payload.map(obj => {\n   return obj.name;\n});\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4480,
        "y": 1480,
        "wires": [
            [
                "0d9959901263a725",
                "0d7afa620c0aa6bf"
            ]
        ]
    },
    {
        "id": "6598f41dd304fb06",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "aca7b5bb3271a2a5",
        "name": "permitJoin",
        "func": "\nmsg.topic = \"cmnd/\"+msg.payload+\"/ZbPermitJoin\";\nmsg.payload = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4830,
        "y": 1480,
        "wires": [
            [
                "2793e58ce2aba424"
            ]
        ]
    },
    {
        "id": "30d9179ca875f514",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "Del zigbee bridge",
        "func": "if (msg.topic === \"link\") {\n    return;\n}\n\nif (msg.topic === \"del\") {\n    var devs = flow.get(\"tasmotas\") || {};\n    delete devs[msg.payload.name];\n    msg.topic = \"Bridge: \" + msg.payload.name + \" is verwijdert.\";\n    msg.payload = \"Sonoff bridge is niet buiten werking gezet, alleen verwijdert op deze pagina.\"\n    return msg;\n}\n\nmsg.topic = msg.payload.name;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4470,
        "y": 1260,
        "wires": [
            [
                "3e9fdf15cedc30b4",
                "df3e7b691e14412d"
            ]
        ]
    },
    {
        "id": "3e9fdf15cedc30b4",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Tasmota Device Info",
        "x": 4740,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "e5e0c4044b9c2f9d",
        "type": "ui_table",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "group": "ab17d46e1b772514",
        "name": "Tasmota bridges",
        "order": 4,
        "width": 10,
        "height": 3,
        "columns": [
            {
                "field": "link",
                "title": "Name",
                "width": "28%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATE.Wifi.RSSI",
                "title": "RSSI",
                "width": "14%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "14%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ZbState.Message",
                "title": "Zb Status",
                "width": "45%",
                "align": "right",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Verwijder",
                "width": "25%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 4220,
        "y": 1260,
        "wires": [
            [
                "30d9179ca875f514"
            ]
        ]
    },
    {
        "id": "df058869800b9833",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4710,
        "y": 740,
        "wires": [
            [
                "c86bbe1ef73d57bd"
            ]
        ]
    },
    {
        "id": "c86bbe1ef73d57bd",
        "type": "file",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Save to file",
        "filename": "/home/pi/domoticz/plugins/tasmota2zigbee/zigbeeidxtabel.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 4870,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "73fbee0549a0e24c",
        "type": "file in",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Read file",
        "filename": "/home/pi/domoticz/plugins/tasmota2zigbee/zigbeeidxtabel.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3920,
        "y": 440,
        "wires": [
            [
                "a0f480b6c6317447"
            ]
        ]
    },
    {
        "id": "a0f480b6c6317447",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4050,
        "y": 440,
        "wires": [
            [
                "4e98d9a253279ba0"
            ]
        ]
    },
    {
        "id": "d6f935aec6b52ada",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Tijd sync",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 3780,
        "y": 440,
        "wires": [
            [
                "73fbee0549a0e24c"
            ]
        ]
    },
    {
        "id": "b70e39d18f067209",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Debug flow.get",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4820,
        "y": 480,
        "wires": []
    },
    {
        "id": "afdae34213774c80",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "IDX nummer",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idx",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4230,
        "y": 760,
        "wires": [
            [
                "9519be1631bb453c"
            ]
        ]
    },
    {
        "id": "8859c54cff425966",
        "type": "ui_dropdown",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Kies merk device",
        "group": "9493153c6a285be5",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Heiman",
                "value": "Heiman",
                "type": "str"
            },
            {
                "label": "Ikea",
                "value": "Ikea",
                "type": "str"
            },
            {
                "label": "Lidl",
                "value": "Lidl",
                "type": "str"
            },
            {
                "label": "Osram",
                "value": "Osram",
                "type": "str"
            },
            {
                "label": "Tuya",
                "value": "Tuya",
                "type": "str"
            },
            {
                "label": "Sonoff",
                "value": "Sonoff",
                "type": "str"
            },
            {
                "label": "Xiaomi",
                "value": "Xiaomi",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "vendor",
        "topicType": "str",
        "className": "",
        "x": 4500,
        "y": 920,
        "wires": [
            [
                "9519be1631bb453c",
                "71d3c4bed28867f7",
                "a532c4f9908b536a"
            ]
        ]
    },
    {
        "id": "d95ad6c0fc0c4dba",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "group": "9493153c6a285be5",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Set settings",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "str",
        "x": 4230,
        "y": 960,
        "wires": [
            [
                "9519be1631bb453c",
                "bdefd8c3dcad29d0"
            ]
        ]
    },
    {
        "id": "d95c71698d9a8b80",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Clear",
        "func": "flow.set(\"renameZigbee\", {});\ndelete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4030,
        "y": 1020,
        "wires": [
            [
                "8859c54cff425966",
                "afdae34213774c80",
                "d675c07dab7f3d3e",
                "1317126848c925a0",
                "de94480695fba3d6",
                "3b40dc7cbbd912aa",
                "2d4009137014058b"
            ]
        ]
    },
    {
        "id": "9519be1631bb453c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Set Device settings",
        "func": "var data1 = context.get(\"data1\") || null; //get from context or default to 0\nvar data2 = context.get(\"data2\") || 0; //get from context or default to 0\nvar data3 = context.get(\"data3\") || 0; //get from context or default to 0\nvar data4 = context.get(\"data4\") || 0; //get from context or default to 0\nvar data5 = context.get(\"data5\") || 0; //get from context or default to 0\nvar data6 = context.get(\"data6\") || 0; //get from context or default to 0\nvar data7 = context.get(\"data7\") || 0; //get from context or default to 0\nvar data8 = context.get(\"data8\") || 0; //get from context or default to 0\n\nvar reconfig = flow.get(\"t2ztable\") || {};\n\nswitch (msg.topic){\n\n    case \"device\":\n        data1 = msg.payload; \n        context.set(\"data1\", data1);//store in context for next time \n        return;\n    \n    case \"vendor\":\n        data2 = msg.payload; \n        context.set(\"data2\", data2);//store in context for next time \n        return;\n    \n    case \"type\":\n        data3 = msg.payload; \n        context.set(\"data3\", data3);//store in context for next time \n        return;\n    \n    case \"idx\":\n        data4 = msg.payload; \n        context.set(\"data4\", data4);//store in context for next time \n        return;\n        \n    case \"idxbat\":\n        data5 = msg.payload;\n        context.set(\"data5\", data5); //store in context for next time \n        return;\n        \n    case \"idxper\":\n        data6 = msg.payload;\n        context.set(\"data6\", data6); //store in context for next time \n        return;\n    \n    case \"idxlink\":\n        data7 = msg.payload;\n        context.set(\"data7\", data7); //store in context for next time \n        return;\n    \n    case \"idxextra\":\n        data8 = msg.payload;\n        context.set(\"data8\", data8); //store in context for next time \n        return;\n        \n    case \"submit\":\n        if (data1 !== null ) {\n            //msg.payload = \"Device: \"+ data1 +\" , type: \" + data2 +\" , idx: \" + data3 +\" , idxbat: \" + data4 +\" , idxper: \" + data5 + \", idxlink: \" + data6 + \", idxextra: \" + data7;\n            var string = \"{\" + \"_/\" + data1 + \"/_/}\"\n            var array = string.split(\"/\")[2];\n            \n            var strings = \"{\" + \"_/\" + data1 + \"/_/}\"\n            var arrayname = string.split(\"/\")[3];\n            var receivedSensors = []\n            //return msg; \n        \n            let dev = reconfig[array] || {};\n            dev.name = arrayname;\n            dev.vendors = data2;\n            dev.type = data3;\n            dev.idx = data4;\n            dev.idxbat = data5;\n            dev.idxper = data6;\n            dev.idxlink = data7;\n            dev.idxextra = data8;\n      \n            // write back\n            reconfig[array] = dev;\n            receivedSensors.push(dev);\n \n            flow.set(\"t2ztable\", reconfig);\n            context.set(\"data1\", null)\n        } else {\n            return;\n        }\n    }\n\nreturn [{payload:Object.values(reconfig)},msg];\n//return msg;\n//return;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4530,
        "y": 760,
        "wires": [
            [
                "df058869800b9833"
            ],
            [
                "58aca37319371d05"
            ]
        ]
    },
    {
        "id": "d675c07dab7f3d3e",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "IDX batterij",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxbat",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4230,
        "y": 800,
        "wires": [
            [
                "9519be1631bb453c"
            ]
        ]
    },
    {
        "id": "1317126848c925a0",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "IDX percentage",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxper",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4240,
        "y": 840,
        "wires": [
            [
                "9519be1631bb453c"
            ]
        ]
    },
    {
        "id": "de94480695fba3d6",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "IDX extra",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxextra",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4220,
        "y": 920,
        "wires": [
            [
                "9519be1631bb453c"
            ]
        ]
    },
    {
        "id": "bdefd8c3dcad29d0",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3870,
        "y": 1020,
        "wires": [
            [
                "d95c71698d9a8b80"
            ]
        ]
    },
    {
        "id": "3b40dc7cbbd912aa",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "IDX link",
        "tooltip": "",
        "group": "9493153c6a285be5",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "idxlink",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4220,
        "y": 880,
        "wires": [
            [
                "9519be1631bb453c"
            ]
        ]
    },
    {
        "id": "2793e58ce2aba424",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "aca7b5bb3271a2a5",
        "name": "Manage zigbee bridge",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4"
        ],
        "x": 4946,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f06769e647c4551e",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "Voorbereiden voor device tabel",
        "func": "var devs; \n\nif ( msg.src === 'restore' ) {\n    devs = flow.get(\"t2ztable\") || {};\n    return [{payload:Object.values(devs)}];\n} else if (msg.payload.ZbReceived === undefined) {\n    return;\n} else {\n\n    devs = flow.get(\"t2ztable\") || {};\n    var receivedSensors = []\n\n    for (var devN in msg.payload.ZbReceived) {\n        let devInfo = msg.payload.ZbReceived[devN];\n        let ID = devInfo.Device;\n        let Name = devInfo.Name;\n     \n        // get dev by ID\n        let dev = devs[ID] || {};\n     \n        if (dev.vendors===undefined) {\n            dev.vendors = \"onbekend\";\n        }\n        if (dev.type===undefined) {\n            dev.type = \"onbekend\";\n        }\n        if (dev.idx===undefined) {\n            dev.idx = 0;\n        }\n        if (dev.idxbat===undefined) {\n            dev.idxbat = 0;\n        }\n        if (dev.idxper===undefined) {\n            dev.idxper = 0;\n        }\n        if (dev.idxlink===undefined) {\n            dev.idxlink = 0;\n        }\n        if (dev.idxextra===undefined) {\n            dev.idxextra = 0;\n        }\n\n        //dev.label = ID; \n        dev.zigbeeid = ID;\n        dev.bridge = msg.topic.split(\"/\")[1];\n        dev.name = Name;\n    \n        // write back\n        devs[ID] = dev;\n        receivedSensors.push(dev);\n    }\n    flow.set(\"t2ztable\", devs);\n}\nreturn [{payload:Object.values(devs)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4090,
        "y": 580,
        "wires": [
            [
                "3e63ffeeaf565b52"
            ]
        ]
    },
    {
        "id": "3e63ffeeaf565b52",
        "type": "ui_table",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "group": "9493153c6a285be5",
        "name": "Zigbee tabel",
        "order": 2,
        "width": 24,
        "height": 10,
        "columns": [
            {
                "field": "name",
                "title": "Naam",
                "width": "16%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "vendors",
                "title": "Merk apparaat",
                "width": "9%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type apparaat",
                "width": "16%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "zigbeeid",
                "title": "Device",
                "width": "7%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "bridge",
                "title": "Bridge",
                "width": "12%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idx",
                "title": "idx switch",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxbat",
                "title": "idx batterij",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxper",
                "title": "idx percentage",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxlink",
                "title": "idx link",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "idxextra",
                "title": "idx extra",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Delete",
                "width": "10%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 4310,
        "y": 580,
        "wires": [
            [
                "eddf6e8fdf7a9e7c"
            ]
        ]
    },
    {
        "id": "c8b092804c77e1da",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Set flow.get test",
        "func": "var store =  msg.payload;\nflow.set(\"t2ztable\", store);\nreturn [{payload:Object.values(store)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4820,
        "y": 440,
        "wires": [
            [
                "8593ad253022cc51"
            ]
        ]
    },
    {
        "id": "ac9edecb804c22b9",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "add src",
        "func": "msg.src = 'restore';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3880,
        "y": 580,
        "wires": [
            [
                "f06769e647c4551e"
            ]
        ]
    },
    {
        "id": "49a573f99df9de32",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 4810,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "4e98d9a253279ba0",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Payload2Object",
        "func": "//var test = flow.get(\"t2ztest\") || {};\nvar store = msg.payload;\nmsg2 = Object.assign({}, store);\nreturn [{payload:(msg2)}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4200,
        "y": 440,
        "wires": [
            [
                "549f8188c255a6fc"
            ]
        ]
    },
    {
        "id": "549f8188c255a6fc",
        "type": "split",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4350,
        "y": 440,
        "wires": [
            [
                "02e9c41e48846c06"
            ]
        ]
    },
    {
        "id": "02e9c41e48846c06",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "zigbeeID2Topic",
        "func": "var value = msg.payload.zigbeeid\nmsg.topic = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4500,
        "y": 440,
        "wires": [
            [
                "6f463b6e9c88b001"
            ]
        ]
    },
    {
        "id": "6f463b6e9c88b001",
        "type": "join",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4650,
        "y": 440,
        "wires": [
            [
                "c8b092804c77e1da",
                "b70e39d18f067209",
                "3d742aa02c8ac93e"
            ]
        ]
    },
    {
        "id": "58aca37319371d05",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Restore idx table (zigbee tabel)",
        "mode": "link",
        "links": [
            "b8ad9bb69c783e4b",
            "a020c9e7ce544991",
            "01aaf238e2a83257",
            "453768eeb1731288"
        ],
        "x": 4675,
        "y": 780,
        "wires": []
    },
    {
        "id": "a020c9e7ce544991",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "restore idxtable out",
        "links": [
            "8593ad253022cc51",
            "58aca37319371d05",
            "c9fa347ab81afe51",
            "f9c4038fea73b0cf"
        ],
        "x": 3775,
        "y": 580,
        "wires": [
            [
                "ac9edecb804c22b9"
            ]
        ]
    },
    {
        "id": "8593ad253022cc51",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Restore idx table (read file)",
        "mode": "link",
        "links": [
            "a020c9e7ce544991",
            "01aaf238e2a83257",
            "453768eeb1731288"
        ],
        "x": 4935,
        "y": 440,
        "wires": []
    },
    {
        "id": "29079e4881f8691a",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "rewrite backup file",
        "func": "var reconfig = flow.get(\"t2ztable\") || {};\nreturn [{payload:Object.values(reconfig)},msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4590,
        "y": 640,
        "wires": [
            [
                "c898ad69eda3762d"
            ]
        ]
    },
    {
        "id": "c898ad69eda3762d",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4750,
        "y": 640,
        "wires": [
            [
                "c7517a7695411d71"
            ]
        ]
    },
    {
        "id": "c7517a7695411d71",
        "type": "file",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "Save to file",
        "filename": "/home/pi/domoticz/plugins/tasmota2zigbee/zigbeeidxtabel.txt",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 4890,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "c9fa347ab81afe51",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "Restore in (zigbee tabel)",
        "mode": "link",
        "links": [
            "4285b21fd5d5eb37",
            "a020c9e7ce544991"
        ],
        "x": 4935,
        "y": 580,
        "wires": []
    },
    {
        "id": "b08ac8676e34eb55",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "add src",
        "func": "msg.src = 'restore';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3840,
        "y": 1800,
        "wires": [
            [
                "6de321a36a5801d6"
            ]
        ]
    },
    {
        "id": "4285b21fd5d5eb37",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Restore zigbee table in",
        "links": [
            "71ac9f2fe79236ec",
            "c9fa347ab81afe51"
        ],
        "x": 3735,
        "y": 1800,
        "wires": [
            [
                "b08ac8676e34eb55"
            ]
        ]
    },
    {
        "id": "df3e7b691e14412d",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "Restore bridges table out",
        "mode": "link",
        "links": [
            "5cb3f5d75b685240"
        ],
        "x": 4946,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e3ed960a4aa17dc4",
        "type": "ui_table",
        "z": "fe9ee8c084b47472",
        "g": "d5058dd19940945a",
        "group": "d325c76.7444a38",
        "name": "Zigbee Devices",
        "order": 1,
        "width": 30,
        "height": 11,
        "columns": [
            {
                "field": "label",
                "title": "Naam",
                "width": "15%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Device",
                "title": "Device",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "bridge",
                "title": "Bridge",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "LinkQuality",
                "title": "RSSI",
                "width": "6%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "BatteryPercentage",
                "title": "Bat. %",
                "width": "8%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "BatteryVoltage",
                "title": "Bat. V",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "6%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "39%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Delete",
                "width": "7%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 4300,
        "y": 1940,
        "wires": [
            [
                "dc24154c6e48c679"
            ]
        ]
    },
    {
        "id": "dc24154c6e48c679",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "d5058dd19940945a",
        "name": "Del zigbee device status list",
        "func": "if (msg.topic === \"del\") {\n    var devs = flow.get(\"t2zdevices\") || {};\n    delete devs[msg.payload.Device];\n    msg.topic = \"Zigbee tabel: \" + msg.payload.label + \", \"  + msg.payload.Device + \" is verwijdert.\";\n    msg.payload = \"Device is niet verwijdert in de sonoff bridge, alleen op deze webpagina.\"\n    return msg;\n}\n\nmsg.topic = msg.payload.label;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4540,
        "y": 1940,
        "wires": [
            [
                "96b98e5e7309ed24",
                "71ac9f2fe79236ec"
            ]
        ]
    },
    {
        "id": "96b98e5e7309ed24",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "d5058dd19940945a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 4790,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "4e65e9d10c4af6c8",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "add src",
        "func": "msg.src = 'restore';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3800,
        "y": 1340,
        "wires": [
            [
                "3d42a9509df3af38"
            ]
        ]
    },
    {
        "id": "5cb3f5d75b685240",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Restore bridges table in",
        "links": [
            "109fd5f4e96bdb31",
            "df3e7b691e14412d"
        ],
        "x": 3695,
        "y": 1340,
        "wires": [
            [
                "4e65e9d10c4af6c8"
            ]
        ]
    },
    {
        "id": "71ac9f2fe79236ec",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "d5058dd19940945a",
        "name": "Restore zigbee table out",
        "mode": "link",
        "links": [
            "4285b21fd5d5eb37"
        ],
        "x": 4945,
        "y": 1940,
        "wires": []
    },
    {
        "id": "b6485973daaf0195",
        "type": "http in",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "url": "/flows.json",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 3920,
        "y": 1160,
        "wires": [
            [
                "906bf8378dd0bb3d"
            ]
        ]
    },
    {
        "id": "5c54596c4a2203bb",
        "type": "http response",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 4770,
        "y": 1160,
        "wires": []
    },
    {
        "id": "906bf8378dd0bb3d",
        "type": "http request",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "body",
        "url": "https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/flows.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 4210,
        "y": 1160,
        "wires": [
            [
                "a5d54417b7af82fc"
            ]
        ]
    },
    {
        "id": "3ea7f127f2c4e15e",
        "type": "comment",
        "z": "fe9ee8c084b47472",
        "name": "Wat instellen bij een nieuw device",
        "info": "Wat allemaal instellen bij een nieuw device\n\n* Tasmota ID filter on ui table\n  - Als het een nieuw merk betreft:\n      - In tab \"Setup\" de \"Outputs\" met 1 verhogen.\n      - In tab \"On Message\" de returns bij werken ivm 1 extra output. Let op, voor tasmota, tasmotainfo en domoticz zijn 3 aparte blocken\n      - Achter de ID filter natuurlijk de nieuwe functie node voor het device maken en toevoegen\n  - Als het een nieuw device is:\n      - Dan hierin niets doen, dan naar de uitgang van het juiste merk gaan, daar het type toevoegen en een nieuwe device block maken\n\n* Drop Down Vendors node voor webpagina\n  - Bij options een extra block aanmaken. De naam moet identiek zijn aan wat je bij de tasmota ID filter hebt ingevoerd.\n \n* Drop Down type node voor webpagina\n  - Bij options een extra block aanmaken. De naam moet identiek zijn aan wat je bij de Vendor naam filter hebt ingevoerd.\n  \n* Update \"Hoe device instellen in domoticz\"",
        "x": 150,
        "y": 200,
        "wires": []
    },
    {
        "id": "86fac75bfb9f867b",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "7ff275045da68003",
        "name": "Probe to get IP out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4"
        ],
        "x": 4935,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ecb6c1f1d953c7e3",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Zigbee Apparaat in",
        "links": [
            "2e7efb15b32cef6b"
        ],
        "x": 3775,
        "y": 920,
        "wires": [
            [
                "42c5a1b287c92ddc"
            ]
        ]
    },
    {
        "id": "3d742aa02c8ac93e",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Store fake ikea ID",
        "func": "var devsdomoticz = flow.get(\"t2ztable\") || {};\nvar length = Object.keys(devsdomoticz).length;\n\nfor ( var i = 0; i < length; i++ ) {\n    var keys = Object.keys(devsdomoticz);\n    var IDkey = keys[i];\n    var message = devsdomoticz[IDkey];\n    var messagetype = devsdomoticz[IDkey].type;\n    var messageidx = parseInt(devsdomoticz[IDkey].idx);\n    var messagezigbeeid = devsdomoticz[IDkey].zigbeeid;\n    var messagebridge = devsdomoticz[IDkey].bridge;\n    var array = [];\n    \n    if ( messagetype === \"Remote (E1743)\" || messagetype === \"Plug (E1603)\" || messagetype === \"Plug (E1702)\" || messagetype === \"Plug (E1708)\") {\n        array[0] = messageidx;\n        array[1] = messagebridge;\n        flow.set(messagezigbeeid, array);\n        msg.payload = \"Flow.set for device id \" + messagezigbeeid + \", idx: \" + messageidx + \", bridge: \" + messagebridge + \"\";\n        node.send(msg);\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4830,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "407b6a20b708894c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "Send command to bridge",
        "func": "var send1;\nvar send2;\nvar send3;\n//var send1 = context.get(\"send1\") || \"empty\"; //get from context or default to 0\n//var send2 = context.get(\"send2\") || \"empty\"; //get from context or default to 0\n//var send3 = context.get(\"send3\") || \"empty\"; //get from context or default to 0\n\nswitch (msg.topic){\n\n    case \"bridge\":\n        send1 = msg.payload; \n        if (send1 == \"\") {\n            return;\n        } else {\n            context.set(\"send1\", send1);//store in context for next time \n        }\n        return;\n    \n    case \"command\":\n        send2 = msg.payload; \n        if (send2 == \"\") {\n            return;\n        } else {\n            context.set(\"send2\", send2);//store in context for next time \n        }\n        return;\n    \n    case \"parameter\":\n        send3 = msg.payload; \n        if (send1 == \"\") {\n            return;\n        } else {\n            context.set(\"send3\", send3);//store in context for next time \n        }\n        return;\n        \n    case \"submit\":\n        send1 = context.get(\"send1\")\n        send2 = context.get(\"send2\")\n        send3 = context.get(\"send3\")\n        if (send1 !== \"empty\" && send2 !== \"empty\" && send3 !== \"empty\" ) {\n            msg.payload = send1 + \" \" + send2 + \" \" + send3;\n            msg.topic = \"cmnd/\"+send1+\"/\"+send2;\n            msg.payload = send3;\n            context.set(\"send1\", \"empty\");\n            context.set(\"send1\", \"empty\");\n            context.set(\"send1\", \"empty\");\n            return msg;\n        } else {\n            return;\n        }\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4670,
        "y": 1320,
        "wires": [
            [
                "7eaa3d68004ad078"
            ]
        ]
    },
    {
        "id": "0d7afa620c0aa6bf",
        "type": "ui_dropdown",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "",
        "label": "Bridge",
        "tooltip": "",
        "place": "",
        "group": "ab17d46e1b772514",
        "order": 5,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "bridge",
        "topicType": "str",
        "className": "",
        "x": 4250,
        "y": 1300,
        "wires": [
            [
                "407b6a20b708894c"
            ]
        ]
    },
    {
        "id": "28b930df93cbd157",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "",
        "label": "Command",
        "tooltip": "",
        "group": "ab17d46e1b772514",
        "order": 7,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "command",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4410,
        "y": 1300,
        "wires": [
            [
                "407b6a20b708894c"
            ]
        ]
    },
    {
        "id": "add1e640e055614f",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "",
        "label": "Parameter",
        "tooltip": "",
        "group": "ab17d46e1b772514",
        "order": 9,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "parameter",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4410,
        "y": 1340,
        "wires": [
            [
                "407b6a20b708894c"
            ]
        ]
    },
    {
        "id": "9d8571e1a793b72a",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "Clear",
        "func": "//delete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4250,
        "y": 1340,
        "wires": [
            [
                "add1e640e055614f",
                "28b930df93cbd157"
            ]
        ]
    },
    {
        "id": "e3fd566a643c7715",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4230,
        "y": 1380,
        "wires": [
            [
                "9d8571e1a793b72a"
            ]
        ]
    },
    {
        "id": "3bd46cbb48803b53",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 12,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Verstuur",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "str",
        "x": 4420,
        "y": 1380,
        "wires": [
            [
                "407b6a20b708894c",
                "e3fd566a643c7715"
            ]
        ]
    },
    {
        "id": "7eaa3d68004ad078",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "Send command to bridge",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4"
        ],
        "x": 4945,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7bc63312105345f2",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 13,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Help",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Help function om commands naar bridge te sturen.",
        "topicType": "str",
        "x": 4570,
        "y": 1380,
        "wires": [
            [
                "cb3b8a10f455ba6b"
            ]
        ]
    },
    {
        "id": "647a620cfaf30bcf",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 4870,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "07b2bc980d296cdf",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payloadType": "date",
        "x": 3870,
        "y": 1120,
        "wires": [
            [
                "5354589125109462"
            ]
        ]
    },
    {
        "id": "5354589125109462",
        "type": "http request",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/version",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 4030,
        "y": 1120,
        "wires": [
            [
                "af6aade3b269020c"
            ]
        ]
    },
    {
        "id": "7e98269fde67c7c2",
        "type": "comment",
        "z": "fe9ee8c084b47472",
        "name": "Wat aanpassen bij een nieuwe release",
        "info": "- De \"comment\" node van de release notes.\n- Node \"UPDATE RELEASE\", de versie in aanpassen.\n- Op github de \"version\" file aanpassen.\n- Op github de \"releasenotes\" file aanpassen.",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "050fb9afb2b185a1",
        "type": "ui_dropdown",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "",
        "label": "Apparaat",
        "tooltip": "",
        "place": "",
        "group": "ab17d46e1b772514",
        "order": 6,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "oldname",
        "topicType": "str",
        "className": "",
        "x": 4540,
        "y": 1720,
        "wires": [
            [
                "72113a7b7f790446"
            ]
        ]
    },
    {
        "id": "2e5f5500f9bb45f9",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "extract devicenames",
        "func": "\nmsg.options = msg.payload.map(obj => {\n   var rObj = {};\n   rObj[obj.label] = obj.bridge+\"/\"+obj.Device;\n   //rObj[obj.label] = obj.bridge+\"/\"+obj.Device+\"/\"+obj.Name+\"/\"\n   return rObj;\n});\n\nmsg.payload = {};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4320,
        "y": 1720,
        "wires": [
            [
                "050fb9afb2b185a1"
            ]
        ]
    },
    {
        "id": "4590a9258fa91d0f",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 10,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "Verander naam",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "rename",
        "topicType": "str",
        "x": 4520,
        "y": 1840,
        "wires": [
            [
                "72113a7b7f790446"
            ]
        ]
    },
    {
        "id": "b5d12c116471a898",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "",
        "label": "Nieuwe naam",
        "tooltip": "",
        "group": "ab17d46e1b772514",
        "order": 8,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "newname",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4520,
        "y": 1780,
        "wires": [
            [
                "72113a7b7f790446"
            ]
        ]
    },
    {
        "id": "72113a7b7f790446",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "Rename Zigbee Dev.",
        "func": "let rename = flow.get(\"renameZigbee\") || {};\nflow.set(\"renameZigbee\", rename);\n\nif (msg.topic === \"oldname\" && msg.payload !== \"\") {\n    //var string = \"{\" + \"_/\" + data1 + \"/_/}\"\n    //var array = string.split(\"/\")[2];\n    var string = \"{\" + \"_/\" + msg.payload + \"/_/}\";\n    let vars = string.split(\"/\");\n    //let vars = msg.payload.split(\"/\");\n    rename.bridge = vars[1];\n    rename.device = vars[2];\n    flow.set(\"renameZigbee\", rename);\n    return;\n} else if (msg.topic === \"newname\") {\n    rename.newname = msg.payload;\n    flow.set(\"renameZigbee\", rename);\n    return;\n} else if (msg.topic === \"rename\") {\n    msg.topic = \"cmnd/\"+rename.bridge+\"/ZbName\";\n    msg.payload = rename.device + \",\" + rename.newname;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4760,
        "y": 1740,
        "wires": [
            [
                "fc525bd61fe98543",
                "b26efc2253e722f6"
            ]
        ]
    },
    {
        "id": "fc525bd61fe98543",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "Clear",
        "func": "flow.set(\"renameZigbee\", {});\ndelete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4750,
        "y": 1820,
        "wires": [
            [
                "b5d12c116471a898"
            ]
        ]
    },
    {
        "id": "b26efc2253e722f6",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "Herbenoem zigbee apparaat",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4"
        ],
        "x": 4945,
        "y": 1740,
        "wires": []
    },
    {
        "id": "2e7efb15b32cef6b",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "Zigbee Apparaat out",
        "mode": "link",
        "links": [
            "ecb6c1f1d953c7e3"
        ],
        "x": 4375,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c598d6bbe76c2d9d",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4760,
        "y": 1780,
        "wires": [
            [
                "b26efc2253e722f6"
            ]
        ]
    },
    {
        "id": "b8ad9bb69c783e4b",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "280d3e6578824262",
        "name": "Check E1743 after setting settings",
        "links": [
            "58aca37319371d05"
        ],
        "x": 4675,
        "y": 400,
        "wires": [
            [
                "3d742aa02c8ac93e"
            ]
        ]
    },
    {
        "id": "cb3b8a10f455ba6b",
        "type": "template",
        "z": "fe9ee8c084b47472",
        "g": "5c5e3c83cb6dbe07",
        "name": "help text",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "Command &nbsp&nbsp&nbsp&nbsp: Parameter <br>\n<br>\nZbPermitJoin : 0 = disable pairing mode <br>\nZbPermitJoin : 1 = enable pairing mode for 60 seconds <br>\n<br>\nSetOption83 : 0 = prefixed id wordt het id gebruikt <br>\nSetOption83 : 1 = prefixed id wordt naam gebruikt <br>\n<br>\nMore information: https://tasmota.github.io/docs/Commands/#zigbee <br>",
        "output": "str",
        "x": 4700,
        "y": 1380,
        "wires": [
            [
                "647a620cfaf30bcf"
            ]
        ]
    },
    {
        "id": "a5d54417b7af82fc",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "Make http header",
        "func": "var store = flow.get(\"version\")\nmsg.headers['Content-Disposition'] = 'attachment; filename=\"' + store + '.json\"'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4510,
        "y": 1160,
        "wires": [
            [
                "5c54596c4a2203bb"
            ]
        ]
    },
    {
        "id": "af6aade3b269020c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "UPDATE RELEASE",
        "func": "var version = \"V_25-05-2022_R1\"\noldStr = msg.payload;\nvar newStr = oldStr.slice(0, oldStr.length-1);\nvar store = newStr;\nflow.set(\"version\", newStr);\nvar html = \"\";\nmsg.topic = \"Release notes\";\nif (msg.statusCode === 200 || 201) {\n    if (store === version) {\n        msg.text = \"FLOW IS UP TO DATE MET GITHUB (\" + version + \")\"\n        msg.background = \"#0A8085\";\n        return msg;\n    } else {\n        msg.text = \"ER IS EEN UPDATE, DOWNLOAD FLOW FILE VAN GITHUB\"\n        msg.background = \"#8C101C\";\n        return msg;\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 1120,
        "wires": [
            [
                "d350df217befa26c"
            ]
        ]
    },
    {
        "id": "d350df217befa26c",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "group": "ab17d46e1b772514",
        "order": 14,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "{{text}}",
        "tooltip": "",
        "color": "white",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "show",
        "topicType": "str",
        "x": 4390,
        "y": 1120,
        "wires": [
            [
                "316c0638bc20837a"
            ]
        ]
    },
    {
        "id": "316c0638bc20837a",
        "type": "http request",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/releasenotes",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 4530,
        "y": 1120,
        "wires": [
            [
                "e52028fa5c84a6c1"
            ]
        ]
    },
    {
        "id": "29c7956d5bba9de9",
        "type": "ui_template",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "group": "9e91865c0e53e9f2",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <h2 style=\"margin:10px\">Release notes</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n            <div ng-bind-html=\"msg.payload\" style=\"height:400px;width:100%;margin: 4px 2px;overflow:auto;\"></div>\n            <!--<div ng-bind-html=\"msg.payload\"></div>-->\n            <form action=\"/flows.json\" method=\"get\"><input type=\"submit\" class=\"buttons\" value=\"Download\" name=\"Submit\" id=\"frm1_submit\"/></form>\n            <button class=\"buttoncl\" id=\"myCls\" ng-click=\"closeDialog()\">Close</button>\n        </div> \n    </div> \n</div> \n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    color : rgb(255,255,255);\n\tbackground-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n\tposition: absolute;\n    background-color: rgb(51,51,51);\n    left: 25%;\n    top: 30px;\n    border-radius: 3px;\n    padding: 0;\n    width: 50%;\n    /*height: 70%;*/\n    height: 550px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: rgb(20,117,120);\n    border-radius: 3px 3px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n\n.btn1 {\n  color : rgb(255,255,255);\n  background-color: rgb(20,117,120);\n  border-radius: 3px 3px 3px 3px;\n  font-size: 16px;\n}\n\n/* Button style */\n    .buttoncl {\n        position: absolute;\n        border: none;\n        /*border-radius: 2px;*/\n        padding: 15px 4.4%;\n        font-size: 16px;\n        font-weight:550;\n        font-family:arial;\n        margin: 4px 2px;\n        /*text-transform: uppercase;*/\n        display: inline-block;\n        cursor: pointer;\n        color: white;\n        background-color:  #0A8085;\n        outline: none;\n        left: 85%;\n        top: 88%;\n    } \n    \n    .buttons {\n        position: absolute;\n        background-color: #0A8085;\n        border: none;\n        color: #FFF7E0; \n        padding: 15px 4.4%;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        font-weight:550;\n        font-family:arial;\n        margin: 4px 2px;\n        cursor: pointer;\n        left: 65%;\n        top: 88%;\n    }\n\n</style>\n\n<script>\nvar dialog;\n\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    \n    scope.init = function() {\n        scope.send({payload : \"init\"});\n\t\tscope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //dialog.appendTo(document.body); // This leaves ghost numpads if pinpad is not opened!\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n\t\tscope.send({payload : scope.passcode});\n    }\n     \n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n\t\t\t\t\t\tscope.passcode = \"\";\n                        scope.showDialog();\n                break;\n                case \"close\": \n                    dialog.css(\"display\", \"none\");\n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 4900,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "e52028fa5c84a6c1",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "c101b10c559fee47",
        "name": "Check response github",
        "func": "if (msg.statusCode === 200 || 201) {\n    return msg;\n} else {\n    msg.payload = '<p style=\"color:red;\">Fout bij laden release notes van github</p><br><a href=\"https://raw.githubusercontent.com/Hoeby/Sonoff-Zigbee-Tasmota-Nodered-flow/main/releasenotes\" target=\"_blank\">Link naar github, voor release notes</a>'\n    return msg;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4720,
        "y": 1120,
        "wires": [
            [
                "29c7956d5bba9de9"
            ]
        ]
    },
    {
        "id": "f0d90beff65b608d",
        "type": "ui_text",
        "z": "fe9ee8c084b47472",
        "group": "4133b8f6529bf1a5",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Actuele versie: <b>V_25-05-2022_R1</b> ",
        "format": "(In de gebruikte bridges moet <b>SetOption83</b> op <b>0</b> staan!)",
        "layout": "col-center",
        "className": "",
        "x": 180,
        "y": 120,
        "wires": []
    },
    {
        "id": "21c36e9b2414efb7",
        "type": "ui_text",
        "z": "fe9ee8c084b47472",
        "group": "ab17d46e1b772514",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color =\"#0EB8C0\" font size= \"4px\">Tasmota zigbee bridge</font>",
        "layout": "row-left",
        "className": "",
        "x": 4050,
        "y": 1500,
        "wires": []
    },
    {
        "id": "16274de49b3b6d1a",
        "type": "ui_text",
        "z": "fe9ee8c084b47472",
        "group": "ab17d46e1b772514",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color =\"#0EB8C0\" font size= \"4px\">Stuur bericht naar zigbee bridge</font>",
        "layout": "row-left",
        "className": "",
        "x": 4050,
        "y": 1400,
        "wires": []
    },
    {
        "id": "8492c66ae38511cf",
        "type": "ui_text",
        "z": "fe9ee8c084b47472",
        "group": "ab17d46e1b772514",
        "order": 3,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "",
        "format": "<font color =\"#0EB8C0\" font size= \"4px\">Verander naam zigbee apparaat</font>",
        "layout": "row-left",
        "className": "",
        "x": 4130,
        "y": 1960,
        "wires": []
    },
    {
        "id": "20abb5580249af22",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-01 out",
        "mode": "link",
        "links": [
            "94f3f677567afe90",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 1360,
        "wires": []
    },
    {
        "id": "94f3f677567afe90",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-01 in",
        "links": [
            "20abb5580249af22",
            "d4c6b864417c2c46"
        ],
        "x": 2955,
        "y": 1360,
        "wires": [
            [
                "1cca10fb7ccaa67d"
            ]
        ]
    },
    {
        "id": "1cca10fb7ccaa67d",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-01 switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 1360,
        "wires": []
    },
    {
        "id": "8683449d486c3f6b",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-01 Switch",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n    if ( idx !== 0 ) {\t\n\t    //off (nog nooit een off gezien vanuit device, dit zijn fake controle waarden)\n        if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"0\"};\n        }\n        // single push\n        else if (msg.payload.ZbReceived[zigbeeid][\"0006!02\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 2) {\n            //msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Toggle\" };\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n        }\n        //double fast push\n        else if (msg.payload.ZbReceived[zigbeeid][\"0006!01\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n        }    \n        //hold\n        else if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Power === 0) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};   \n        }    \n        else {\n            msg = null;\n        }\n    } else {\n        msg = null;\n    }\n        \n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 1360,
        "wires": [
            [
                "20abb5580249af22"
            ],
            [
                "20abb5580249af22"
            ],
            [
                "20abb5580249af22"
            ],
            [
                "20abb5580249af22"
            ]
        ]
    },
    {
        "id": "9463f53502f42e0e",
        "type": "comment",
        "z": "fe9ee8c084b47472",
        "name": "Welke modules installeren voor deze flow",
        "info": "Via manage pallette, onderstaande modules toevoegen\n- node-red-contrib-flogger\n- node-red-contrib-simple-gate\n- node-red-dashboard\n- node-red-node-ui-table",
        "x": 180,
        "y": 280,
        "wires": []
    },
    {
        "id": "71d3c4bed28867f7",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Device list",
        "func": "if (msg.payload === \"Heiman\") {\n    msg.options = [ \"Monoxide (HS1CA-M)\",\n                    \"Smoke (HS1SA)\"]\n}\nelse if (msg.payload === \"Ikea\") {\n    msg.options = [ \"Light (ICPSHC24-10EU-IL-1)\",\n                    \"Motion (E1525)\",\n                    \"Motion (E1745)\",\n                    \"Plug (E1603)\",\n                    \"Plug (E1702)\",\n                    \"Plug (E1708)\",\n                    \"Remote (E1743)\"]\n}\nelse if (msg.payload === \"Lidl\") {\n    msg.options = [ \"Plug (HG06620)\",\n                    \"Door (HG06336)\",\n                    \"Motion (HG06335)\",\n                    \"Motion (HG07310)\",\n                    \"Light (HG06106A)\",\n                    \"Light (HG06106B)\",\n                    \"Light (HG06106C)\",\n                    \"Light (HG06492A)\",\n                    \"Light (HG06492B)\",\n                    \"Light (HG06492C)\"]\n                    //\"Thermo (TS0601)\"]\n}\nelse if (msg.payload === \"Osram\") {\n    msg.options = [ \"Remote (AC0251100NJ)\",\n                    \"Remote (AC0251600NJ)\",\n                    \"Remote (AC0251700NJ)\"]\n}\nelse if (msg.payload === \"Sonoff\") {\n    msg.options = [ \"Motion (SNZB-03)\",\n                    \"Plug (S26R2ZB)\",\n                    \"Remote (SNZB-01)\",\n                    \"Temp (SNZB-02)\"]\n}\nelse if (msg.payload === \"Tuya\") {\n    msg.options = [ \"Remote (TS0044)\" ]\n}\nelse if (msg.payload === \"Xiaomi\") {\n    msg.options = [ \"Cube (MFKZQ01LM)\",\n                    \"Door (MCCGQ12LM)\",\n                    \"Door (MCCGQ14LM)\",\n                    \"Lux (GZCGQ01LM)\",\n                    \"Motion (RTCGQ01LM)\",\n                    \"Motion (RTCGQ12LM)\",\n                    \"Smoke (JTYJ-GD-01LM/BW)\",\n                    \"Temp (WSDCGQ01LM)\",\n                    \"Temp (WSDCGQ11LM)\",\n                    \"Temp (WSDCGQ12LM)\",\n                    \"Water (SJCGQ11LM)\"]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4510,
        "y": 960,
        "wires": [
            [
                "2e645ba5b4c034eb"
            ]
        ]
    },
    {
        "id": "2e645ba5b4c034eb",
        "type": "ui_dropdown",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Kies type device",
        "group": "9493153c6a285be5",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "type",
        "topicType": "str",
        "className": "",
        "x": 4500,
        "y": 1020,
        "wires": [
            [
                "9519be1631bb453c",
                "a532c4f9908b536a"
            ]
        ]
    },
    {
        "id": "4496ae8e6ae3b948",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota ID filter on ui table",
        "func": "if ( msg.src === 'tasmota' ) {\n    var devs = flow.get(\"t2ztable\") || {};\n    var storepayload = msg.payload;\n    var zigbeedevice\n    var zigbeevendor\n\n    for (var devN in msg.payload.ZbReceived) {\n        let devInfo = msg.payload.ZbReceived[devN];\n        let ID = devInfo.Device;\n\n        // get dev by ID\n        var dev = devs[ID] || {};\n        \n        zigbeevendor = dev.vendors;\n        zigbeedevice = dev.type;\n        storepayload[\"ZbReceived\"].idx = parseInt(dev.idx);\n        storepayload[\"ZbReceived\"].idxbat = parseInt(dev.idxbat);\n\t    storepayload[\"ZbReceived\"].idxper = parseInt(dev.idxper);\n\t    storepayload[\"ZbReceived\"].idxlink = parseInt(dev.idxlink);\n\t    storepayload[\"ZbReceived\"].idxextra = parseInt(dev.idxextra);\n\t    storepayload[\"ZbReceived\"].zigbeeid = dev.zigbeeid;\n        storepayload[\"ZbReceived\"].topicname = dev.bridge;\n        storepayload[\"ZbReceived\"].type = dev.type;\n            \n        //msg.payload = zigbeedevice;\n        //return [msg]\n    }\n    msg.payload = storepayload;\n    if ( zigbeevendor === \"Heiman\" ) {\n        return [null, msg, null, null, null, null, null, null]; \n    } \n    else if ( zigbeevendor === \"Ikea\" ) {\n        return [null, null, msg, null, null, null, null, null]; \n    }\n    else if ( zigbeevendor === \"Lidl\" ) {\n        return [null, null, null, msg, null, null, null, null]; \n    }\n    else if ( zigbeevendor === \"Osram\" ) {\n        return [null, null, null, null, msg, null, null, null]; \n    }\n    else if ( zigbeevendor === \"Sonoff\" ) {\n        return [null, null, null, null, null, msg, null, null]; \n    }\n    else if ( zigbeevendor === \"Xiaomi\" ) {\n        return [null, null, null, null, null, null, msg, null]; \n    }\n     else if ( zigbeevendor === \"Tuya\" ) {\n        return [null, null, null, null, null, null, null, msg]; \n    }\n        return [msg, null, null, null, null, null, null, null];\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    var devsinfo = flow.get(\"t2ztable\") || {};\n    var storepayloadinfo = msg.payload;\n    var zigbeedeviceinfo\n    var zigbeevendorinfo\n\n    for (var devNinfo in msg.payload.ZbInfo) {\n        let devInfoinfo = msg.payload.ZbInfo[devNinfo];\n        let IDinfo = devInfoinfo.Device;\n\n        // get dev by ID\n        var devinfo = devsinfo[IDinfo] || {};\n        \n        zigbeevendorinfo = devinfo.vendors;\n        zigbeedeviceinfo = devinfo.type;\n        storepayloadinfo[\"ZbInfo\"].idx = parseInt(devinfo.idx);\n        storepayloadinfo[\"ZbInfo\"].idxbat = parseInt(devinfo.idxbat);\n\t    storepayloadinfo[\"ZbInfo\"].idxper = parseInt(devinfo.idxper);\n\t    storepayloadinfo[\"ZbInfo\"].idxlink = parseInt(devinfo.idxlink);\n\t    storepayloadinfo[\"ZbInfo\"].idxextra = parseInt(devinfo.idxextra);\n\t    storepayloadinfo[\"ZbInfo\"].zigbeeid = devinfo.zigbeeid;\n        storepayloadinfo[\"ZbInfo\"].topicname = devinfo.bridge;\n        storepayloadinfo[\"ZbInfo\"].type = devinfo.type;\n            \n        //msg.payload = zigbeedevice;\n        //return [msg]\n    }\n    msg.payload = storepayloadinfo;\n    if ( zigbeevendorinfo === \"Ikea\" ) {\n        return [null, null, msg, null, null, null, null]; \n    }\n        return [msg, null, null, null, null, null, null];\n}\n\nif ( msg.src === 'domoticz' ) {\n    var devsdomoticz = flow.get(\"t2ztable\") || {};\n    var storepayloaddomoticz = msg.payload;\n    var zigbeevendordomoticz;\n    var zigbeedevicedomoticz;\n    var idxnumber = msg.payload.idx;\n    var length = Object.keys(devsdomoticz).length;\n\n    for ( var i = 0; i < length; i++ ) {\n        var keys = Object.keys(devsdomoticz);\n        var IDkey = keys[i];\n        var message = devsdomoticz[IDkey];\n        var messageidx = parseInt(devsdomoticz[IDkey].idx);\n        \n        if ( messageidx === idxnumber) {\n            zigbeevendordomoticz = message.vendors;\n            storepayloaddomoticz.type = message.type;\n            storepayloaddomoticz.idxdz = message.idx;\n            storepayloaddomoticz.idxbat = message.idxbat;\n            storepayloaddomoticz.zigbeeid = message.zigbeeid;\n            storepayloaddomoticz.topicname = message.bridge;\n        }\n        msg.payload = storepayloaddomoticz;\n        if ( zigbeevendordomoticz === \"Heiman\" ) {\n            return [null, msg, null, null, null, null, null, null]; \n        } \n        else if ( zigbeevendordomoticz === \"Ikea\" ) {\n            return [null, null, msg, null, null, null, null, null]; \n        }\n        else if ( zigbeevendordomoticz === \"Lidl\" ) {\n            return [null, null, null, msg, null, null, null, null]; \n        }\n        else if ( zigbeevendordomoticz === \"Osram\" ) {\n            return [null, null, null, null, msg, null, null, null]; \n        }\n        else if ( zigbeevendordomoticz === \"Sonoff\" ) {\n            return [null, null, null, null, null, msg, null, null]; \n        }\n        else if ( zigbeevendordomoticz === \"Xiaomi\" ) {\n            return [null, null, null, null, null, null, msg, null]; \n        }\n        else if ( zigbeevendordomoticz === \"Tuya\" ) {\n            return [null, null, null, null, null, null, null, msg]; \n        }\n    }\n            return [msg, null, null, null, null, null, null, null]; \n}",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 740,
        "wires": [
            [
                "c3d7575710381576",
                "6d37173dad5facb7"
            ],
            [
                "355a0e3683278b80"
            ],
            [
                "4d8fe180afbe8514"
            ],
            [
                "62abf7f8fa42e851"
            ],
            [
                "0c2f265aecb6fcef"
            ],
            [
                "289659383f163731"
            ],
            [
                "470dd67421ea09cd"
            ],
            [
                "6208a905899a72f0"
            ]
        ]
    },
    {
        "id": "355a0e3683278b80",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman devices",
        "func": "if (msg.payload.ZbReceived.type === \"Monoxide (HS1CA-M)\") {\n    return [msg, null]\n} else if (msg.payload.ZbReceived.type === \"Smoke (HS1SA)\") {\n    return [null, msg]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 360,
        "wires": [
            [
                "59cc1938fe4a8989"
            ],
            [
                "650b9ca485aeaab1"
            ]
        ]
    },
    {
        "id": "4d8fe180afbe8514",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea devices",
        "func": "if (msg.payload.ZbInfo) {\n    if (msg.payload.ZbInfo.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg, null]\n    }\n    else if (msg.payload.ZbInfo.type === \"Motion (E1525)\") {\n        return [null, null, null, null, null, msg]\n    }\n    else if (msg.payload.ZbInfo.type === \"Motion (E1745)\") {\n        return [null, null, null, null, null, msg]\n    }\n}\n\nif (msg.payload.ZbReceived) {\n    if (msg.payload.ZbReceived.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg, null]\n    }\n    else if (msg.payload.ZbReceived.type === \"Motion (E1525)\") {\n        return [null, null, null, null, null, msg]\n    }\n    else if (msg.payload.ZbReceived.type === \"Motion (E1745)\") {\n        return [null, null, null, null, null, msg]\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    if (msg.payload.type === \"Light (ICPSHC24-10EU-IL-1)\") {\n        return [msg, null, null, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1603)\") {\n        return [null, msg, null, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1702)\") {\n        return [null, null, msg, null, null, null]\n    }\n    else if (msg.payload.type === \"Plug (E1708)\") {\n        return [null, null, null, msg, null, null]\n    }\n    else if (msg.payload.type === \"Remote (E1743)\") {\n        return [null, null, null, null, msg, null]\n    }\n    else if (msg.payload.type === \"Motion (E1525)\") {\n        return [null, null, null, null, null, msg]\n    }\n    else if (msg.payload.type === \"Motion (E1745)\") {\n        return [null, null, null, null, null, msg]\n    }\n}",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 600,
        "wires": [
            [
                "c0d6650e03376498"
            ],
            [
                "2650a4dc7b195842"
            ],
            [
                "2650a4dc7b195842"
            ],
            [
                "2650a4dc7b195842"
            ],
            [
                "b795c491237ecd83"
            ],
            [
                "e1d4fe7edd783dd6"
            ]
        ]
    },
    {
        "id": "62abf7f8fa42e851",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl devices",
        "func": "if (msg.payload.ZbInfo) {\n    if (msg.payload.ZbInfo.type === \"Light (HG06492A)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Light (HG06492B)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Light (HG06492B)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Light (HG06106A)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Light (HG06106B)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Light (HG06106C)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Door (HG06336)\") {\n        return [null, null, msg, null, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Motion (HG06335)\") {\n        return [null, null, null, msg, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Motion (HG07310)\") {\n        return [null, null, null, msg, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Thermo (TS0601)\") {\n        return [null, null, null, null, msg, null];\n    } else if (msg.payload.ZbInfo.type === \"Plug (HG06620)\") {\n        return [null, null, null, null, null, msg];\n    }\n}\n\nif (msg.payload.ZbReceived) {\n    if (msg.payload.ZbReceived.type === \"Light (HG06492A)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Light (HG06492B)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Light (HG06492C)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Light (HG06106A)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Light (HG06106B)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Light (HG06106C)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Door (HG06336)\") {\n        return [null, null, msg, null, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Motion (HG06335)\") {\n        return [null, null, null, msg, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Motion (HG07310)\") {\n        return [null, null, null, msg, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Thermo (TS0601)\") {\n        return [null, null, null, null, msg, null];\n    } else if (msg.payload.ZbReceived.type === \"Plug (HG06620)\") {\n        return [null, null, null, null, null, msg];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    if (msg.payload.type === \"Light (HG06492A)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.type === \"Light (HG06492B)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.type === \"Light (HG06492C)\") {\n        return [msg, null, null, null, null, null];\n    } else if (msg.payload.type === \"Light (HG06106A)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.type === \"Light (HG06106B)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.type === \"Light (HG06106C)\") {\n        return [null, msg, null, null, null, null];\n    } else if (msg.payload.type === \"Door (HG06336)\") {\n        return [null, null, msg, null, null, null];\n    } else if (msg.payload.type === \"Motion (HG06335)\") {\n        return [null, null, null, msg, null, null];\n    } else if (msg.payload.type === \"Motion (HG07310)\") {\n        return [null, null, null, msg, null, null];\n    } else if (msg.payload.type === \"Thermo (TS0601)\") {\n        return [null, null, null, null, msg, null];\n    } else if (msg.payload.type === \"Plug (HG06620)\") {\n        return [null, null, null, null, null, msg];\n    }\n}",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 960,
        "wires": [
            [
                "843b6baf5da9e7a0"
            ],
            [
                "9d4f9974c069ae65"
            ],
            [
                "9d025c529cac36aa"
            ],
            [
                "f9497cf555673053"
            ],
            [
                "e40155baa8a52116"
            ],
            [
                "1618df8f7b35f3d3"
            ]
        ]
    },
    {
        "id": "0c2f265aecb6fcef",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "918e0af22924c402",
        "name": "Osram devices",
        "func": "if (msg.payload.ZbReceived.type === \"Remote (AC0251100NJ)\") {\n    return [msg, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Remote (AC0251600NJ)\") {\n    return [null, msg, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Remote (AC0251700NJ)\") {\n    return [null, null, msg]\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1240,
        "wires": [
            [
                "6b66c7b991eac007"
            ],
            [
                "6b66c7b991eac007"
            ],
            [
                "6b66c7b991eac007"
            ]
        ]
    },
    {
        "id": "289659383f163731",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff devices",
        "func": "if (msg.payload.ZbInfo) {\n    if (msg.payload.ZbInfo.type === \"Remote (SNZB-01)\") {\n        return [msg, null, null, null]\n    } else if (msg.payload.ZbInfo.type === \"Motion (SNZB-03)\") {\n        return [null, msg, null, null];\n    } else if (msg.payload.ZbInfo.type === \"Plug (S26R2ZB)\") {\n        return [null, null, msg, null];\n    } else if (msg.payload.ZbInfo.type === \"Temp (SNZB-02)\") {\n        return [null, null, null, msg];\n    }\n}\n\nif (msg.payload.ZbReceived) {        \n    if (msg.payload.ZbReceived.type === \"Remote (SNZB-01)\") {\n        return [msg, null, null, null]\n    } else if (msg.payload.ZbReceived.type === \"Motion (SNZB-03)\") {\n        return [null, msg, null, null];\n    } else if (msg.payload.ZbReceived.type === \"Plug (S26R2ZB)\") {\n        return [null, null, msg, null];\n    } else if (msg.payload.ZbReceived.type === \"Temp (SNZB-02)\") {\n        return [null, null, null, msg];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    if (msg.payload.type === \"Remote (SNZB-01)\") {\n        return [msg, null, null, null]\n    } else if (msg.payload.type === \"Motion (SNZB-03)\") {\n        return [null, msg, null, null];\n    } else if (msg.payload.type === \"Plug (S26R2ZB)\") {\n        return [null, null, msg, null];\n    } else if (msg.payload.type === \"Temp (SNZB-02)\") {\n        return [null, null, null, msg];\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1460,
        "wires": [
            [
                "8683449d486c3f6b"
            ],
            [
                "498ba43866809f9d"
            ],
            [
                "555d40212bc6dc53"
            ],
            [
                "665a14339afa6db7"
            ]
        ]
    },
    {
        "id": "2d4009137014058b",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Clear option list",
        "func": "msg.options =[];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4240,
        "y": 1020,
        "wires": [
            [
                "2e645ba5b4c034eb"
            ]
        ]
    },
    {
        "id": "2482809312f89300",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "Make custom page domoticz",
        "func": "var ipnodered = flow.get(\"ipnodered\") //|| null; //get from context or default to 0\nvar portnodered = flow.get(\"portnodered\")// || 0; //get from context or default to 0\nvar filelocation = flow.get(\"filelocation\")\n\nswitch (msg.topic){\n\n    case \"ipnodered\":\n        ipnodered = msg.payload; \n        flow.set(\"ipnodered\", ipnodered);//store in context for next time \n        return;\n    \n    case \"portnodered\":\n        portnodered = msg.payload; \n        flow.set(\"portnodered\", portnodered);//store in context for next time \n        return;\n        \n    case \"filelocation\":\n        var filelocationexcl = msg.payload; \n        filelocation = filelocationexcl + \"/tasmota_sonoff_bridge.html\"\n        flow.set(\"filelocation\", filelocation);//store in context for next time \n        return;\n    \n    case \"Cancel\":\n        return;\n\n    case \"Submit\":\n        if (ipnodered !== null ) {\n            var file = flow.get(\"filelocation\");\n            msg.filename = file; \n            msg.payload = '<IFRAME SRC=\"http://' + ipnodered + ':' + portnodered + '/ui\" height=\"800\" width=\"100%\"></IFRAME>';\n            return msg;\n        } else {\n            return;\n        }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4460,
        "y": 140,
        "wires": [
            [
                "b3ca1f1704b1aa98",
                "953eee96b0503b51"
            ]
        ]
    },
    {
        "id": "602bca587a78a585",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "label": "Port address nodered host",
        "tooltip": "",
        "group": "2d3e52c21cb8f71c",
        "order": 2,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "1000",
        "topic": "portnodered",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4060,
        "y": 140,
        "wires": [
            [
                "2482809312f89300"
            ]
        ]
    },
    {
        "id": "f94d4471621f5ca9",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "label": "IP address nodered host",
        "tooltip": "",
        "group": "2d3e52c21cb8f71c",
        "order": 1,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "ipnodered",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4050,
        "y": 60,
        "wires": [
            [
                "2482809312f89300"
            ]
        ]
    },
    {
        "id": "87099ef5e3c4f42d",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "group": "2d3e52c21cb8f71c",
        "order": 4,
        "width": 30,
        "height": 1,
        "passthru": false,
        "label": "Save custom pagina domoticz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "OPMERKING!",
        "topicType": "str",
        "x": 3490,
        "y": 300,
        "wires": [
            [
                "2d8d2d1ed9343f2b"
            ]
        ]
    },
    {
        "id": "464597409d205697",
        "type": "ui_text_input",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "label": "Domoticz template location",
        "tooltip": "",
        "group": "2d3e52c21cb8f71c",
        "order": 3,
        "width": 10,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "250",
        "topic": "filelocation",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 4060,
        "y": 220,
        "wires": [
            [
                "2482809312f89300"
            ]
        ]
    },
    {
        "id": "074a6188fca8e669",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1880",
        "payloadType": "str",
        "x": 3450,
        "y": 160,
        "wires": [
            [
                "602bca587a78a585",
                "37609ded5494e00a"
            ]
        ]
    },
    {
        "id": "7d6bc7cf78ed1be3",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "/home/pi/domoticz/www/templates",
        "payloadType": "str",
        "x": 3450,
        "y": 240,
        "wires": [
            [
                "464597409d205697",
                "8e93351eac0fe01c"
            ]
        ]
    },
    {
        "id": "2affe0b4578fa18d",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "Store ip details",
        "func": "if ( msg.src === 'ipnodered' ) {\n        var ipnodered = msg.payload; \n        flow.set(\"ipnodered\", ipnodered);//store in context for next time \n        return;\n}\n\nif ( msg.src === 'portnodered' ) {\n        var portnodered = msg.payload; \n        flow.set(\"portnodered\", portnodered);//store in context for next time \n        return;\n}\n\nif ( msg.src === 'filelocation' ) {\n        var filelocationexcl = msg.payload; \n        var filelocation = \"\" + filelocationexcl + \"/tasmota_sonoff_bridge.html\"\n        flow.set(\"filelocation\", filelocation);//store in context for next time \n        return;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4420,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "62425111473b4f2c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "Add ip source",
        "func": "msg.src = 'ipnodered';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 100,
        "wires": [
            [
                "2affe0b4578fa18d"
            ]
        ]
    },
    {
        "id": "37609ded5494e00a",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "Add port source",
        "func": "msg.src = 'portnodered';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 180,
        "wires": [
            [
                "2affe0b4578fa18d"
            ]
        ]
    },
    {
        "id": "8e93351eac0fe01c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "Add file source",
        "func": "msg.src = 'filelocation';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 260,
        "wires": [
            [
                "2affe0b4578fa18d"
            ]
        ]
    },
    {
        "id": "a2af7ae190ea9d9d",
        "type": "exec",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "command": "/sbin/ip -4 -o addr show dev eth0| /usr/bin/awk '{split($4,a,\"/\");print a[1]}'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "20",
        "winHide": false,
        "oldrc": false,
        "name": "GetIp",
        "x": 3610,
        "y": 80,
        "wires": [
            [
                "aa36c8ee94b4e7f4"
            ],
            [],
            []
        ]
    },
    {
        "id": "1a57d4cc192dca16",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 3430,
        "y": 80,
        "wires": [
            [
                "a2af7ae190ea9d9d"
            ]
        ]
    },
    {
        "id": "aa36c8ee94b4e7f4",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "Get IP2payload",
        "func": "oldIP = msg.payload;\nvar newIP = oldIP.slice(0, oldIP.length-1);\nmsg.payload = newIP;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3800,
        "y": 80,
        "wires": [
            [
                "f94d4471621f5ca9",
                "62425111473b4f2c"
            ]
        ]
    },
    {
        "id": "b3ca1f1704b1aa98",
        "type": "file",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4700,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a8d7a924d17378e3",
        "type": "exec",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "command": "sudo /etc/init.d/domoticz.sh",
        "addpay": false,
        "append": "restart",
        "useSpawn": "false",
        "timer": "30",
        "winHide": false,
        "oldrc": false,
        "name": "Domoticz restart",
        "x": 4880,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "953eee96b0503b51",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4700,
        "y": 160,
        "wires": [
            [
                "a8d7a924d17378e3"
            ]
        ]
    },
    {
        "id": "2d8d2d1ed9343f2b",
        "type": "template",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "opmerking tekst",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "LET OP, lees goed wat er staat.<br>\n<br>\nAls er op \"SUBMIT\" wordt geklikt, zal domoticz over 5 seconden herstarten.<br>\nWil je dit niet, klik dan op \"CANCEL\".<br>",
        "output": "str",
        "x": 3720,
        "y": 300,
        "wires": [
            [
                "6f7be6fd19fd603c"
            ]
        ]
    },
    {
        "id": "6f7be6fd19fd603c",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "Submit",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Herstart domoticz",
        "x": 3910,
        "y": 300,
        "wires": [
            [
                "49dcd5c1f81a7981"
            ]
        ]
    },
    {
        "id": "49dcd5c1f81a7981",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "9bb2b82d7bf97e98",
        "name": "topic2payload",
        "func": "msg.topic = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4100,
        "y": 300,
        "wires": [
            [
                "2482809312f89300"
            ]
        ]
    },
    {
        "id": "843b6baf5da9e7a0",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno CCT Bulb",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n       \n        if ( idx !== 0 ) {\n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false};\n            }\n\t\t    else {\n    \t\t    msg = null;\n            }\n\t    } else {\n\t        msg = null;\n\t    } \n\t    \n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n        return [msg, linkmsg];\t\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n\tvar level = (msg.payload.Level * 2.54);\n\tvar color;\n\t\t\n    if (msg.payload.Color.t === null) {\n        color = (153);    \n    } \n    else {\n        color = ((msg.payload.Color.t * 1.37) + 153);\n    }\n    if ( msg.payload.nvalue === 1) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n\t\treturn [msg, null];\n    } else if ( msg.payload.nvalue === 0) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msg, null];\n    }\n    else {\n        var msgcol = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"CT\":color}}};\n        var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n        return [msgcol, msglev];\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 800,
        "wires": [
            [
                "b42a4699db8357fa"
            ],
            [
                "b42a4699db8357fa"
            ]
        ]
    },
    {
        "id": "b42a4699db8357fa",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno CCT out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "3916d8d8f0169b93",
            "c9e5c5badc9a8085"
        ],
        "x": 2895,
        "y": 800,
        "wires": []
    },
    {
        "id": "3916d8d8f0169b93",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno CCT in",
        "links": [
            "7297070c1f17a504",
            "b42a4699db8357fa"
        ],
        "x": 2955,
        "y": 800,
        "wires": [
            [
                "5bb905544da5f536"
            ]
        ]
    },
    {
        "id": "5bb905544da5f536",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Livarno CCT Bulb",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 800,
        "wires": []
    },
    {
        "id": "9d025c529cac36aa",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl door senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Contact === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            } \n\t        else if (context.get(zigbeeid) === 1) {  \n                msg = updmsg1; \n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Contact === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n    \t}\n    } else {\n        msg = null;\n    }\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 900,
        "wires": [
            [
                "83fbf5a16a2d3804"
            ],
            [
                "83fbf5a16a2d3804"
            ],
            [
                "83fbf5a16a2d3804"
            ],
            [
                "83fbf5a16a2d3804"
            ]
        ]
    },
    {
        "id": "8becaa666222f0fb",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Door/Window sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 900,
        "wires": []
    },
    {
        "id": "83fbf5a16a2d3804",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Door Sensor out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "a306c5c8fa5ff9a9"
        ],
        "x": 2895,
        "y": 900,
        "wires": []
    },
    {
        "id": "a306c5c8fa5ff9a9",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Door sensor in",
        "links": [
            "83fbf5a16a2d3804",
            "fb87a0d4861d432e"
        ],
        "x": 2955,
        "y": 900,
        "wires": [
            [
                "8becaa666222f0fb"
            ]
        ]
    },
    {
        "id": "6a0dda10c607ef60",
        "type": "ui_text",
        "z": "fe9ee8c084b47472",
        "group": "9bf204c0d54b6e3e",
        "order": 2,
        "width": 30,
        "height": 2,
        "name": "",
        "label": "Payload:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2820,
        "y": 180,
        "wires": []
    },
    {
        "id": "29960d7b5547c80b",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi door senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Contact === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            } \n\t        else if (context.get(zigbeeid) === 1) {  \n                msg = updmsg1; \n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Contact === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n    \t}\n    } else {\n        msg = null;\n    }\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1680,
        "wires": [
            [
                "fcc45a601372ea82"
            ],
            [
                "fcc45a601372ea82"
            ],
            [
                "fcc45a601372ea82"
            ],
            [
                "fcc45a601372ea82"
            ]
        ]
    },
    {
        "id": "53b00bf0430b7050",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi door sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 1680,
        "wires": []
    },
    {
        "id": "e99cc5d4ea5b8ff2",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi motion sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 1840,
        "wires": []
    },
    {
        "id": "26ed2c8c7d700e4f",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi smoke detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Fire === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            } \n\t        else if (context.get(zigbeeid) === 1) {  \n                msg = updmsg1; \n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Fire === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n        else {\n    \t    msg = updmsg0; \n    \t}\n    } else {\n        msg = null;\n    }\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else { \n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 1920,
        "wires": [
            [
                "2d99642c66a5c870"
            ],
            [
                "2d99642c66a5c870"
            ],
            [
                "2d99642c66a5c870"
            ],
            [
                "2d99642c66a5c870"
            ]
        ]
    },
    {
        "id": "c1c0b2dba023871a",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi smoke detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 1920,
        "wires": []
    },
    {
        "id": "fcc45a601372ea82",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi doorsensor out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "c5ca73ecb5ac32f7"
        ],
        "x": 2895,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c5ca73ecb5ac32f7",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi doorsensor in",
        "links": [
            "01cb66020fd42846",
            "fcc45a601372ea82"
        ],
        "x": 2955,
        "y": 1680,
        "wires": [
            [
                "53b00bf0430b7050"
            ]
        ]
    },
    {
        "id": "c3911e29eff22c69",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi motion sensor out",
        "mode": "link",
        "links": [
            "33e999928aa851b6",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 1840,
        "wires": []
    },
    {
        "id": "33e999928aa851b6",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi motion sensor in",
        "links": [
            "c3911e29eff22c69",
            "d7b32d0304f27044"
        ],
        "x": 2955,
        "y": 1840,
        "wires": [
            [
                "e99cc5d4ea5b8ff2"
            ]
        ]
    },
    {
        "id": "09efc5ee994f22f0",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi smoke detector in",
        "links": [
            "2d99642c66a5c870",
            "ee35794e5d630df2"
        ],
        "x": 2955,
        "y": 1920,
        "wires": [
            [
                "c1c0b2dba023871a"
            ]
        ]
    },
    {
        "id": "2d99642c66a5c870",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi smoke detector out",
        "mode": "link",
        "links": [
            "09efc5ee994f22f0",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 1920,
        "wires": []
    },
    {
        "id": "69fba7698ad67740",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi WSDCGQ11LM temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n    if ( idx !== 0 ) {    \n        var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n        var temp = (Math.round(tempdummy * 10))/10.0;\n        var hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n        var humstat = 0;\n        if ( hum < 30 ) {\n            humstat = 2;\n        }\n        else if (( hum >= 30) && ( hum <= 45))  {\n            humstat = 0;\n        }\n        else if (( hum >= 46) && ( hum <= 70))  {\n            humstat = 1;\n        }\n        else {\n            humstat = 3;\n        }\n        var bar = msg.payload.ZbReceived[zigbeeid].Pressure;\n        if (temp !== undefined && hum !== undefined && bar !== undefined) {\n            msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \";\" + bar + \";0\"}};\n        } else {\n            msg = null;\n        }\n    } else {\n        msg = null;\n    }\n    \n    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 2080,
        "wires": [
            [
                "08b20c29baa2864e"
            ],
            [
                "08b20c29baa2864e"
            ],
            [
                "08b20c29baa2864e"
            ],
            [
                "08b20c29baa2864e"
            ]
        ]
    },
    {
        "id": "084cdb103cdf0689",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ11LM tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 2080,
        "wires": []
    },
    {
        "id": "b660a10a741bbea7",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ11LM in",
        "links": [
            "08b20c29baa2864e",
            "1ea5ebf102e05851"
        ],
        "x": 2955,
        "y": 2080,
        "wires": [
            [
                "084cdb103cdf0689"
            ]
        ]
    },
    {
        "id": "08b20c29baa2864e",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "b660a10a741bbea7",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 2080,
        "wires": []
    },
    {
        "id": "1e8e1243697e355b",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi GZCGQ01LM lux-sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    if ( idx !== 0 ) {\n        var lux = msg.payload.ZbReceived[zigbeeid].Illuminance\n    \tif (lux !== undefined) {\n            msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + lux + \"\"}};\n        } else {\n            msg = null;\n        }    \n    } else {\n        msg = null;\n    }\n        \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;    \n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 1760,
        "wires": [
            [
                "a28d026537f564cb"
            ],
            [
                "a28d026537f564cb"
            ],
            [
                "a28d026537f564cb"
            ],
            [
                "a28d026537f564cb"
            ]
        ]
    },
    {
        "id": "a28d026537f564cb",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi GZCGQ01LM lux-sensor out",
        "mode": "link",
        "links": [
            "3fc3cc2a49dd810f",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 1760,
        "wires": []
    },
    {
        "id": "3fc3cc2a49dd810f",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi GZCGQ01LM lux-sensor in",
        "links": [
            "a28d026537f564cb",
            "77e8f521bfa3e396"
        ],
        "x": 2955,
        "y": 1760,
        "wires": [
            [
                "f88985f05d6a2da5"
            ]
        ]
    },
    {
        "id": "f88985f05d6a2da5",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi GZCGQ01LM lux-sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b50e72ef40397145",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi WSDCGQ01LM temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    if ( idx !== 0 ) {\n        var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n        var temp = (Math.round(tempdummy * 10))/10.0;\n        var hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n        var humstat = 0;\n        if ( hum < 30 ) {\n            humstat = 2;\n        }\n        else if (( hum >= 30) && ( hum <= 45))  {\n            humstat = 0;\n        }\n        else if (( hum >= 46) && ( hum <= 70))  {\n            humstat = 1;\n        }\n        else {\n            humstat = 3;\n        }\n        if (temp !== undefined && hum !== undefined) {\n            msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \"\"}};\n        } else {\n            msg = null;\n        }    \n    } else {\n        msg = null;\n    }\n    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else { \n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2630,
        "y": 2000,
        "wires": [
            [
                "139535167a72ee3d"
            ],
            [
                "139535167a72ee3d"
            ],
            [
                "139535167a72ee3d"
            ],
            [
                "139535167a72ee3d"
            ]
        ]
    },
    {
        "id": "c4d1576b6fcc7988",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ01LM tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3160,
        "y": 2000,
        "wires": []
    },
    {
        "id": "336fadefa081e2d6",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ11LM in",
        "links": [
            "fae35475b8086a39",
            "139535167a72ee3d"
        ],
        "x": 2955,
        "y": 2000,
        "wires": [
            [
                "c4d1576b6fcc7988"
            ]
        ]
    },
    {
        "id": "139535167a72ee3d",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "336fadefa081e2d6",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 2000,
        "wires": []
    },
    {
        "id": "37683f48364ef490",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi Watersensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 2160,
        "wires": []
    },
    {
        "id": "be886a66023a4dcb",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi Watersensor in",
        "links": [
            "1ddc7dfb0e3041c2",
            "01dd9b0687c95a4e"
        ],
        "x": 2955,
        "y": 2160,
        "wires": [
            [
                "37683f48364ef490"
            ]
        ]
    },
    {
        "id": "62152593619eda30",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": " Xiaomi motion senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar idxextra = msg.payload.ZbReceived.idxextra;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar extramsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\nvar valuelum;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    //Set value Illuminance idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"Illuminance\")) {\n        valuelum = msg.payload.ZbReceived[zigbeeid].Illuminance;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Occupancy === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            }\n            else {\n                msg = null;\n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Occupancy === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n\t    }\n    } else {\n        msg = null;\n    }\n    \n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    if ( idxextra !== 0 ) {\n        if (valuelum !== undefined) {\n            extramsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxextra , \"svalue\": \"\" + valuelum + \"\", \"parse\": false}}; \n        } else {\n            extramsg = null;\n        }\n    } else {\n        extramsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg, extramsg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 1840,
        "wires": [
            [
                "c3911e29eff22c69"
            ],
            [
                "c3911e29eff22c69"
            ],
            [
                "c3911e29eff22c69"
            ],
            [
                "c3911e29eff22c69"
            ],
            [
                "c3911e29eff22c69"
            ]
        ]
    },
    {
        "id": "94a98079bb20e16d",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi water sensor (niet getest)",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].WATER === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            } \n\t        else if (context.get(zigbeeid) === 1) {  \n                msg = updmsg1; \n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].WATER === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n        else {\n\t        msg = null; \n        }\n    } else { \n        msg = null;\n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 2160,
        "wires": [
            [
                "01dd9b0687c95a4e"
            ],
            [
                "01dd9b0687c95a4e"
            ],
            [
                "01dd9b0687c95a4e"
            ],
            [
                "01dd9b0687c95a4e"
            ]
        ]
    },
    {
        "id": "01dd9b0687c95a4e",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "be886a66023a4dcb",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 2160,
        "wires": []
    },
    {
        "id": "470dd67421ea09cd",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi Devices",
        "func": "if (msg.payload.ZbReceived.type === \"Door (MCCGQ12LM)\") {\n    return [msg, null, null, null, null, null, null, null, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Door (MCCGQ14LM)\") {\n    return [null, msg, null, null, null, null, null, null, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Lux (GZCGQ01LM)\") {\n    return [null, null, msg, null, null, null, null, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Motion (RTCGQ01LM)\") {\n    return [null, null, null, msg, null, null, null, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Motion (RTCGQ12LM)\") {\n    return [null, null, null, null, msg, null, null, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Smoke (JTYJ-GD-01LM/BW)\") {\n    return [null, null, null, null, null, msg, null, null, null, null, null]\n}\nelse if (msg.payload.ZbReceived.type === \"Temp (WSDCGQ01LM)\") {\n    return [null, null, null, null, null, null, msg, null, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Temp (WSDCGQ11LM)\") {\n    return [null, null, null, null, null, null, null, msg, null, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Temp (WSDCGQ12LM)\") {\n    return [null, null, null, null, null, null, null, null, msg, null, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Water (SJCGQ11LM)\") {\n    return [null, null, null, null, null, null, null, null, null, msg, null]    \n}\nelse if (msg.payload.ZbReceived.type === \"Cube (MFKZQ01LM)\") {\n    return [null, null, null, null, null, null, null, null, null, null, msg]    \n}",
        "outputs": 11,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1920,
        "wires": [
            [
                "29960d7b5547c80b"
            ],
            [
                "29960d7b5547c80b"
            ],
            [
                "1e8e1243697e355b"
            ],
            [
                "62152593619eda30"
            ],
            [
                "62152593619eda30"
            ],
            [
                "26ed2c8c7d700e4f"
            ],
            [
                "b50e72ef40397145"
            ],
            [
                "69fba7698ad67740"
            ],
            [
                "69fba7698ad67740"
            ],
            [
                "94a98079bb20e16d"
            ],
            [
                "f68824538abe0e52"
            ]
        ]
    },
    {
        "id": "90290040f067d92c",
        "type": "ui_switch",
        "z": "fe9ee8c084b47472",
        "name": "",
        "label": "Debug onbekend mqtt berichten",
        "tooltip": "",
        "group": "9bf204c0d54b6e3e",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "control",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1950,
        "y": 180,
        "wires": [
            [
                "6d37173dad5facb7",
                "4f9e509384d9bfe1"
            ]
        ]
    },
    {
        "id": "6d37173dad5facb7",
        "type": "gate",
        "z": "fe9ee8c084b47472",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "true",
        "closeCmd": "false",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 2190,
        "y": 200,
        "wires": [
            [
                "4f9e509384d9bfe1"
            ]
        ]
    },
    {
        "id": "57c3c0041b45bf32",
        "type": "ui_switch",
        "z": "fe9ee8c084b47472",
        "name": "",
        "label": "Tasmota flow -> MQTT server",
        "tooltip": "",
        "group": "9bf204c0d54b6e3e",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "control",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1630,
        "y": 840,
        "wires": [
            [
                "35e24bbe339bbbea",
                "6d15c32c2c544a39"
            ]
        ]
    },
    {
        "id": "35e24bbe339bbbea",
        "type": "gate",
        "z": "fe9ee8c084b47472",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "true",
        "closeCmd": "false",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 1870,
        "y": 860,
        "wires": [
            [
                "6d15c32c2c544a39"
            ]
        ]
    },
    {
        "id": "faa56198f3a87334",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "MQTT bericht naar dashboard",
        "links": [
            "4f9e509384d9bfe1",
            "6d15c32c2c544a39",
            "3a25158bf00b1ca3",
            "091a6cbf81003659"
        ],
        "x": 2395,
        "y": 180,
        "wires": [
            [
                "01a86f0281c55fc6"
            ]
        ]
    },
    {
        "id": "4f9e509384d9bfe1",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "name": "MQTT bericht naar dashboard",
        "mode": "link",
        "links": [
            "faa56198f3a87334"
        ],
        "x": 2345,
        "y": 180,
        "wires": []
    },
    {
        "id": "6d15c32c2c544a39",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "name": "MQTT bericht naar dashboard",
        "mode": "link",
        "links": [
            "faa56198f3a87334"
        ],
        "x": 1995,
        "y": 840,
        "wires": []
    },
    {
        "id": "95cc09fbdd9089f5",
        "type": "ui_switch",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "label": "Inkomend Domoticz bericht",
        "tooltip": "",
        "group": "9bf204c0d54b6e3e",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "control",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 240,
        "y": 860,
        "wires": [
            [
                "4aca05fbb0986699",
                "3a25158bf00b1ca3"
            ]
        ]
    },
    {
        "id": "4aca05fbb0986699",
        "type": "gate",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "true",
        "closeCmd": "false",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 530,
        "y": 880,
        "wires": [
            [
                "3a25158bf00b1ca3"
            ]
        ]
    },
    {
        "id": "3a25158bf00b1ca3",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "MQTT bericht naar dashboard",
        "mode": "link",
        "links": [
            "faa56198f3a87334"
        ],
        "x": 695,
        "y": 860,
        "wires": []
    },
    {
        "id": "5bd5cc18ada34d81",
        "type": "ui_switch",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "label": "Inkomend Tasmota bericht",
        "tooltip": "",
        "group": "9bf204c0d54b6e3e",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "control",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 700,
        "wires": [
            [
                "5f246820ce070bc4",
                "091a6cbf81003659"
            ]
        ]
    },
    {
        "id": "5f246820ce070bc4",
        "type": "gate",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "true",
        "closeCmd": "false",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": false,
        "storeName": "memory",
        "x": 430,
        "y": 720,
        "wires": [
            [
                "091a6cbf81003659"
            ]
        ]
    },
    {
        "id": "091a6cbf81003659",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "MQTT bericht naar dashboard",
        "mode": "link",
        "links": [
            "faa56198f3a87334"
        ],
        "x": 555,
        "y": 700,
        "wires": []
    },
    {
        "id": "4e5aa97165fa4438",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "str",
        "x": 2630,
        "y": 120,
        "wires": [
            [
                "6a0dda10c607ef60",
                "748fa252ea23d046",
                "2c53c2ad456171f6"
            ]
        ]
    },
    {
        "id": "748fa252ea23d046",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "Set debug switch off",
        "func": "msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 120,
        "wires": [
            [
                "2fe6df87f1088f1f"
            ]
        ]
    },
    {
        "id": "2fe6df87f1088f1f",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "name": "debug off",
        "mode": "link",
        "links": [
            "2296ba78e27a40c9",
            "41ea56d4ee4b75cc",
            "872e7b0f422a1d41"
        ],
        "x": 3015,
        "y": 120,
        "wires": []
    },
    {
        "id": "2296ba78e27a40c9",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "debug off",
        "links": [
            "2fe6df87f1088f1f"
        ],
        "x": 1775,
        "y": 180,
        "wires": [
            [
                "90290040f067d92c"
            ]
        ]
    },
    {
        "id": "41ea56d4ee4b75cc",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "debug off",
        "links": [
            "2fe6df87f1088f1f"
        ],
        "x": 1435,
        "y": 840,
        "wires": [
            [
                "57c3c0041b45bf32"
            ]
        ]
    },
    {
        "id": "872e7b0f422a1d41",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "debug off",
        "links": [
            "2fe6df87f1088f1f"
        ],
        "x": 75,
        "y": 860,
        "wires": [
            [
                "5bd5cc18ada34d81",
                "95cc09fbdd9089f5"
            ]
        ]
    },
    {
        "id": "f68824538abe0e52",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi Smart cube",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\t\n\tif ( idx !== 0 ) {\n\t    //Wakeup\n        if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"wakeup\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"0\"};\n        }\n        //Shake\n        else if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"shake\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n        }\n        //Slide\n        else if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"slide\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n        }\n        //Flip90\n        else if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"flip90\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n        }\n        //Flip180\n        else if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"flip180\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n        }\n        //Rotate\n        else if (msg.payload.ZbReceived[zigbeeid].Aqara_FF05 === 500 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            if (msg.payload.ZbReceived[zigbeeid].AqaraRotate > 0) {\n                //Rotate right\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"50\"};\n            } else if (msg.payload.ZbReceived[zigbeeid].AqaraRotate < 0) {\n                // Rotate left\n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"60\"};\n            }\n        }\n        //Tap (nooit gezien dat tasmota deze doorgeeft, maar preventief toegevoegd)\n        else if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"tap\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"70\"};\n        }\n        //Fall (nooit gezien dat tasmota deze doorgeeft, maar preventief toegevoegd)\n        else if (msg.payload.ZbReceived[zigbeeid].AqaraCube === \"fall\") {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"80\"};\n        }\n        else {\n            msg = null;\n        }\n    } else {\n        msg = null;\n    }    \n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 2240,
        "wires": [
            [
                "356ebc678ef0dee1"
            ],
            [
                "356ebc678ef0dee1"
            ],
            [
                "356ebc678ef0dee1"
            ],
            [
                "356ebc678ef0dee1"
            ]
        ]
    },
    {
        "id": "16f71bd9eeec5062",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi smart cube",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3110,
        "y": 2240,
        "wires": []
    },
    {
        "id": "356ebc678ef0dee1",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi Smart Cube out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "1e24ade3c53d3538"
        ],
        "x": 2895,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1e24ade3c53d3538",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "fde3092311406cc5",
        "name": "Xiaomi Smart Cube in",
        "links": [
            "356ebc678ef0dee1"
        ],
        "x": 2955,
        "y": 2240,
        "wires": [
            [
                "16f71bd9eeec5062"
            ]
        ]
    },
    {
        "id": "f9497cf555673053",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl motion senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar idxextra = msg.payload.ZbReceived.idxextra;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar extramsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\nvar valuelum;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Occupancy === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            }\n            else {\n                msg = null;\n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Occupancy === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n\t    }\n    } else {\n        msg = null;\n    }\n    \n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 980,
        "wires": [
            [
                "91d142db88659e5f"
            ],
            [
                "91d142db88659e5f"
            ],
            [
                "91d142db88659e5f"
            ],
            [
                "91d142db88659e5f"
            ]
        ]
    },
    {
        "id": "91d142db88659e5f",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Motion Sensor out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "f47089a5d5e9a3b4"
        ],
        "x": 2895,
        "y": 980,
        "wires": []
    },
    {
        "id": "f47089a5d5e9a3b4",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Motion sensor in",
        "links": [
            "91d142db88659e5f"
        ],
        "x": 2955,
        "y": 980,
        "wires": [
            [
                "f335dbd5e751a1bd"
            ]
        ]
    },
    {
        "id": "f335dbd5e751a1bd",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl beweging sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 980,
        "wires": []
    },
    {
        "id": "bb1eb60b98ab7aec",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "55c0110d8a16ff0d",
        "name": "Tasmota in message",
        "mode": "link",
        "links": [
            "70f52fa4ec5fce95",
            "30411cbf51c4222d",
            "0a0ff151505cd5cf"
        ],
        "x": 555,
        "y": 600,
        "wires": []
    },
    {
        "id": "70f52fa4ec5fce95",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "Tasmota in message",
        "links": [
            "bb1eb60b98ab7aec"
        ],
        "x": 3895,
        "y": 640,
        "wires": [
            [
                "f06769e647c4551e"
            ]
        ]
    },
    {
        "id": "30411cbf51c4222d",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota in message",
        "links": [
            "bb1eb60b98ab7aec"
        ],
        "x": 3875,
        "y": 1840,
        "wires": [
            [
                "6de321a36a5801d6"
            ]
        ]
    },
    {
        "id": "0a0ff151505cd5cf",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "name": "Tasmota in message",
        "links": [
            "bb1eb60b98ab7aec"
        ],
        "x": 3835,
        "y": 1380,
        "wires": [
            [
                "3d42a9509df3af38"
            ]
        ]
    },
    {
        "id": "2c53c2ad456171f6",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "Debug topic2payload",
        "func": "msg.payload = msg.topic\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2860,
        "y": 240,
        "wires": [
            [
                "844367908f47f455"
            ]
        ]
    },
    {
        "id": "844367908f47f455",
        "type": "ui_text",
        "z": "fe9ee8c084b47472",
        "group": "9bf204c0d54b6e3e",
        "order": 1,
        "width": 30,
        "height": 1,
        "name": "",
        "label": "Topic:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 3050,
        "y": 240,
        "wires": []
    },
    {
        "id": "707724ee7edcf005",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "219168e7678220cf",
        "name": "Tuya 4 button switch TS0044",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3140,
        "y": 2300,
        "wires": []
    },
    {
        "id": "3a12c2edd9b6c7d4",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "219168e7678220cf",
        "name": "Tuya 4 button switch TS0044",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\t\n\tif ( idx !== 0 ) {\n\t    //Button 1 1x drukken\n        if (msg.payload.ZbReceived[zigbeeid].LidlPower === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n        }\n        //Button 1 2x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n        }\n        //Button 1 hold\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 2 && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n        }\n        //Button 2 1x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n        }\n        //Button 2 2x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"50\"};\n        }\n        //Button 2 hold\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 2 && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"60\"};\n        }\n        //Button 3 1x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"70\"};\n        }\n        //Button 3 2x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"80\"};\n        }\n        //Button 3 hold\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 2 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"90\"};\n        }\n        //Button 4 1x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 4) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"100\"};\n        }\n        //Button 4 2x drukken\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 4) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"110\"};\n        }\n        //Button 4 hold\n        else if (msg.payload.ZbReceived[zigbeeid].LidlPower === 2 && msg.payload.ZbReceived[zigbeeid].Endpoint === 4) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"120\"};\n        }\n        else {\n            msg = null;\n        }\n\t} else {\n\t    msg = null;\n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 2300,
        "wires": [
            [
                "4aca286ee7c4de75"
            ],
            [
                "4aca286ee7c4de75"
            ],
            [
                "4aca286ee7c4de75"
            ],
            [
                "4aca286ee7c4de75"
            ]
        ]
    },
    {
        "id": "23e0810b20425dd3",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "219168e7678220cf",
        "name": "Tuya 4 button switch in",
        "links": [
            "4aca286ee7c4de75"
        ],
        "x": 2955,
        "y": 2300,
        "wires": [
            [
                "707724ee7edcf005"
            ]
        ]
    },
    {
        "id": "4aca286ee7c4de75",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "219168e7678220cf",
        "name": "Tuya 4 button switch out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "23e0810b20425dd3"
        ],
        "x": 2895,
        "y": 2300,
        "wires": []
    },
    {
        "id": "6208a905899a72f0",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "219168e7678220cf",
        "name": "Tuya devices",
        "func": "if (msg.payload.ZbReceived.type === \"Remote (TS0044)\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 2300,
        "wires": [
            [
                "3a12c2edd9b6c7d4"
            ]
        ]
    },
    {
        "id": "e40155baa8a52116",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl thermo TS0601",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxbat = msg.payload.ZbReceived.idxbat;\n    var idxper = msg.payload.ZbReceived.idxper;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var idxextra = msg.payload.ZbReceived.idxextra;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n  \n    var batmsg;\n    var permsg;\n    var linkmsg;\n    var extramsg;\n    var valuebat;\n    var valuebatdummy;\n    var valuebatperc;\n    var valuelink;\n    var valuetemp;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value battery voltage idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n            valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n            valuebat = (Math.round(valuebatdummy * 10))/10.0;\n        }\n        //Set value battery percentage idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n        }\n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n        //Set value localtemperatur idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LocalTemperature\")) {\n            valuetemp = msg.payload.ZbReceived[zigbeeid].LocalTemperature;\n        }\n    \n    \tif ( idx !== 0 ) {\n    \t    msg = null;\n        } else {\n\t        msg = null;\n\t    }\n        \n    \tif ( idxbat !== 0 ) {\n            if (valuebat !== undefined) {\n                batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n            } else {\n                batmsg = null;\n            }\n\t    } else {\n            batmsg = null;\n        }\n        \n        if ( idxper !== 0 ) {\n            if (valuebatperc !== undefined) {\n                permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n            } else {\n                permsg = null;\n            }\n        } else {\n            permsg = null;\n        }\n        \n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n        \n        if ( idxextra !== 0 ) {\n            if (valuetemp !== undefined) {\n                extramsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxextra , \"svalue\": \"\" + valuetemp + \"\", \"parse\": false}}; \n            } else {\n               extramsg = null;\n            }\n        } else {\n            extramsg = null;\n        }\n    \n        \n        return [msg, batmsg, permsg, linkmsg, extramsg];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n    var setpoint = msg.payload.svalue1;\n   \n    msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"TuyaTempTarget\":setpoint}}};\n\treturn [msg, null, null, null, null];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1060,
        "wires": [
            [
                "f463c735fc2aa9c9"
            ],
            [
                "f463c735fc2aa9c9"
            ],
            [
                "f463c735fc2aa9c9"
            ],
            [
                "f463c735fc2aa9c9"
            ],
            [
                "f463c735fc2aa9c9"
            ]
        ]
    },
    {
        "id": "f463c735fc2aa9c9",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl TS0601 out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "5aa905edadd1f100",
            "c9e5c5badc9a8085"
        ],
        "x": 2895,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5aa905edadd1f100",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl TS0601 in",
        "links": [
            "f463c735fc2aa9c9"
        ],
        "x": 2955,
        "y": 1060,
        "wires": [
            [
                "40e955ac3e334fe2"
            ]
        ]
    },
    {
        "id": "40e955ac3e334fe2",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl TS0601",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "01a86f0281c55fc6",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "Debug switch empty payload",
        "func": "if (msg.payload === true) {\n    msg.topic = \"\"\n    msg.payload = \"\"\n}\nif (msg.payload === false) {\n    msg.payload = \"\"\n    msg.topic = \"\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 180,
        "wires": [
            [
                "6a0dda10c607ef60",
                "2c53c2ad456171f6"
            ]
        ]
    },
    {
        "id": "2bb630daa4cf4ede",
        "type": "ui_button",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "group": "9493153c6a285be5",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Hoe device instellen in domoticz",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "str",
        "x": 4790,
        "y": 900,
        "wires": [
            [
                "a532c4f9908b536a"
            ]
        ]
    },
    {
        "id": "a532c4f9908b536a",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "Hoe device instellen in domoticz",
        "func": "var data3info = context.get(\"data3info\") || 0; //get from context or default to 0\n\nswitch (msg.topic){\n\n    case \"type\":\n        data3info = msg.payload; \n        context.set(\"data3info\", data3info);//store in context for next time \n        return;\n\n    case \"submit\":\n        //Heiman\n        if (data3info === \"Monoxide (HS1CA-M)\" ) {\n            msg.topic = \"Heiman, Monoxide (HS1CA-M)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Schakelaar</p><p>Schakelaar daarna instellen als: smoke detector</p>\"\n        } else if (data3info === \"Smoke (HS1SA)\" ) {   \n            msg.topic = \"Heiman, Smoke (HS1SA)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Schakelaar</p><p>Schakelaar daarna instellen als: smoke detector</p>\"\n\n        //Ikea\n        } else if (data3info === \"Light (ICPSHC24-10EU-IL-1)\" ) {   \n            msg.topic = \"Ikea, Light (ICPSHC24-10EU-IL-1)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: dimmer</p>\"\n        } else if (data3info === \"Motion (E1525)\" ) {   \n            msg.topic = \"Ikea, Motion (E1525)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Motion (E1745)\" ) {   \n            msg.topic = \"Ikea, Motion (E1745)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Plug (E1603)\" ) {\n            msg.topic = \"Ikea, Plug (E1603)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p>\"\n        } else if (data3info === \"Plug (E1702)\" ) {  \n            msg.topic = \"Ikea, Plug (E1702)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p>\"\n        } else if (data3info === \"Plug (E1708)\" ) {   \n            msg.topic = \"Ikea, Plug (E1708)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p>\"\n        } else if (data3info === \"Remote (E1743)\" ) {    \n            msg.topic = \"Ikea, Remote (E1743)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Off</p><p>Niveau 10: On</p><p>Niveau 20: On hold</p><p>Niveau 30: Off hold</p><p>Niveau 40: Hold stop</p>\"\n        \n        //Lidl\n        } else if (data3info === \"Plug (HG06620)\" ) {\n            msg.topic = \"Lidl, Plug (HG06620)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p>\"\n        } else if (data3info === \"Door (HG06336)\" ) {   \n            msg.topic = \"Lidl, Door (HG06336)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: door contact</p>\"\n        } else if (data3info === \"Motion (HG06335)\" ) {   \n            msg.topic = \"Lidl, Motion (HG06335)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Motion (HG07310)\" ) {   \n            msg.topic = \"Lidl, Motion (HG07310)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Light (HG06106A)\" ) {   \n            msg.topic = \"Lidl, Light (HG06106A)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: RGBWW switch</p>\"\n        } else if (data3info === \"Light (HG06106B)\" ) {   \n            msg.topic = \"Lidl, Light (HG06106B)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: RGBWW switch</p>\"\n        } else if (data3info === \"Light (HG06106C)\" ) {   \n            msg.topic = \"Lidl, Light (HG06106C)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: RGBWW switch</p>\"\n        } else if (data3info === \"Light (HG06492A)\" ) {   \n            msg.topic = \"Lidl, Light (HG06492A)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: RGBWW switch</p>\"\n        } else if (data3info === \"Light (HG06492B)\" ) {   \n            msg.topic = \"Lidl, Light (HG06492B)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: RGBWW switch</p>\"\n        } else if (data3info === \"Light (HG06492C)\" ) {   \n            msg.topic = \"Lidl, Light (HG06492C)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: RGBWW switch</p>\"\n        } else if (data3info === \"Thermo (TS0601)\" ) {   \n            msg.topic = \"Lidl, Thermo (TS0601)\"\n            msg.payload = \"<p>Aanmaken in domoticz;</p><p>1e dummy type: Thermostaat Setpoint</p><p>1e dummy instellen als IDX in tasmota dashboard</p><br><p>2e dummy type: Temperatuur</p><p>2e dummy instellen als IDX-extra in tasmota dashboard</p>\"\n        \n        //Osram       \n        } else if (data3info === \"Remote (AC0251100NJ)\" ) {   \n            msg.topic = \"Osram, Remote (AC0251100NJ)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Off</p><p>Niveau 10: Up</p><p>Niveau 20: Up Hold</p><p>Niveau 30: Up Release</p><p>Niveau 40: Circle Click</p><p>Niveau 50: Circle hold</p><p>Niveau 60: Circle Release</p><p>Niveau 70: Down</p><p>Niveau 80: Down Hold</p><p>Niveau 90: Down Release</p><p>Niveau 100: Standy</p>\"\n        } else if (data3info === \"Remote (AC0251600NJ)\" ) {   \n            msg.topic = \"Osram, Remote (AC0251600NJ)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Off</p><p>Niveau 10: Up</p><p>Niveau 20: Up Hold</p><p>Niveau 30: Up Release</p><p>Niveau 40: Circle Click</p><p>Niveau 50: Circle hold</p><p>Niveau 60: Circle Release</p><p>Niveau 70: Down</p><p>Niveau 80: Down Hold</p><p>Niveau 90: Down Release</p><p>Niveau 100: Standy</p>\"\n        } else if (data3info === \"Remote (AC0251700NJ)\" ) {   \n            msg.topic = \"Osram, Remote (AC0251700NJ)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Off</p><p>Niveau 10: Up</p><p>Niveau 20: Up Hold</p><p>Niveau 30: Up Release</p><p>Niveau 40: Circle Click</p><p>Niveau 50: Circle hold</p><p>Niveau 60: Circle Release</p><p>Niveau 70: Down</p><p>Niveau 80: Down Hold</p><p>Niveau 90: Down Release</p><p>Niveau 100: Standy</p>\"\n \n        //Sonoff\n        } else if (data3info === \"Remote (SNZB-01)\" ) {   \n            msg.topic = \"Sonoff, Remote (SNZB-01)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Off</p><p>Niveau 10: Single push</p><p>Niveau 20: Double push</p><p>Niveau 30: Hold</p>\"\n        } else if (data3info === \"Plug (S26R2ZB)\") {\n            msg.topic = \"Sonoff, Plug (S26R2ZB)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p>\"\n        } else if (data3info === \"Motion (SNZB-03)\" ) {   \n            msg.topic = \"Sonoff, Motion (SNZB-03)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Temp (SNZB-02)\") {\n            msg.topic = \"Sonoff, Temp (SNZB-02)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Temp + Hum</p>\"\n\n        //Tuya\n        } else if (data3info === \"Remote (TS0044)\" ) {   \n            msg.topic = \"Tuya, Remote (TS0044)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Off</p><p>Niveau 10 = Button 1 single push</p><p>Niveau 20 = Button 1 double push</p><p>Niveau 30 = Button 1 hold</p><p>Niveau 40 = Button 2 single push</p><p>Niveau 50 = Button 2 double push</p><p>Niveau 60 = Button 2 hold</p><p>Niveau 70 = Button 3 single push</p><p>Niveau 80 = Button 3 double push</p><p>Niveau 90 = Button 3 hold</p><p>Niveau 100 = Button 4 single push</p><p>Niveau 110 = Button 4 double push</p><p>Niveau 120 = Button 4 hold</p>\"\n\n        //Xiaomi\n        } else if (data3info === \"Cube (MFKZQ01LM)\" ) {   \n            msg.topic = \"Xiaomi, Cube (MFKZQ01LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: keuzeschakelaar</p><p>Keuzeschakelaar daarna instellen als onderstaand;</p><p>Niveau 0: Wakeup</p><p>Niveau 10 = Shake</p><p>Niveau 20 = Slide</p><p>Niveau 30 = Flip 90</p><p>Niveau 40 = Flip 180</p><p>Niveau 50 = Rotate right</p><p>Niveau 60 = Rotate left</p><p>Niveau 70 = Tap</p><p>Niveau 80 = Fall</p>\"\n        } else if (data3info === \"Door (MCCGQ12LM)\" ) {   \n            msg.topic = \"Xiaomi, Door (MCCGQ12LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: door contact</p>\"\n        } else if (data3info === \"Door (MCCGQ14LM))\" ) {   \n            msg.topic = \"Xiaomi, Door (MCCGQ14LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: door contact</p>\"\n        } else if (data3info === \"Lux (GZCGQ01LM)\" ) {   \n            msg.topic = \"Xiaomi, Lux (GZCGQ01LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Lux</p>\"\n        } else if (data3info === \"Motion (RTCGQ01LM)\" ) {   \n            msg.topic = \"Xiaomi, Motion (RTCGQ01LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Motion (RTCGQ12LM)\" ) {   \n            msg.topic = \"Xiaomi, Motion (RTCGQ12LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: schakelaar</p><p>Schakelaar daarna instellen als: motion sensor</p>\"\n        } else if (data3info === \"Smoke (JTYJ-GD-01LM/BW)\" ) {   \n            msg.topic = \"Xiaomi, Smoke (JTYJ-GD-01LM/BW)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Schakelaar</p><p>Schakelaar daarna instellen als: smoke detector</p>\"\n        } else if (data3info === \"Temp (WSDCGQ01LM)\" ) {   \n            msg.topic = \"Xiaomi, Temp (WSDCGQ01LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Temp + Hum</p>\"\n        } else if (data3info === \"Temp (WSDCGQ11LM)\" ) {   \n            msg.topic = \"Xiaomi, Temp (WSDCGQ11LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Temp + Hum + Baro</p>\"\n        } else if (data3info === \"Temp (WSDCGQ12LM)\" ) {   \n            msg.topic = \"Xiaomi, Temp (WSDCGQ12LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Temp + Hum + Baro</p>\"\n        } else if (data3info === \"Water (SJCGQ11LM)\" ) {   \n            msg.topic = \"Xiaomi, Water (SJCGQ11LM)\"\n            msg.payload = \"<p>Aanmaken in domoticz, dummy type: Schakelaar</p><p>Schakelaar daarna instellen als: contact</p>\"\n\n        } else {\n            msg.topic = \"Device type onbekend\"\n            msg.payload = \"<p>Kies eerst merk en device, alvorens hier informatie kan worden getoond</p>\"\n        }\n        return msg;\n    }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4790,
        "y": 960,
        "wires": [
            [
                "da1ba52052d62685"
            ]
        ]
    },
    {
        "id": "da1ba52052d62685",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 4750,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "e1d4fe7edd783dd6",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea motion senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar extramsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Occupancy === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            }\n            else {\n                msg = null;\n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Occupancy === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n\t    }\n    } else {\n        msg = null;\n    }\n    \n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 700,
        "wires": [
            [
                "2265acf8cb8707c4"
            ],
            [
                "2265acf8cb8707c4"
            ],
            [
                "2265acf8cb8707c4"
            ],
            [
                "2265acf8cb8707c4"
            ]
        ]
    },
    {
        "id": "e39377a2457682b4",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea motion",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3090,
        "y": 700,
        "wires": []
    },
    {
        "id": "0e891d6bbf506488",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea motion in",
        "links": [
            "2265acf8cb8707c4"
        ],
        "x": 2955,
        "y": 700,
        "wires": [
            [
                "e39377a2457682b4"
            ]
        ]
    },
    {
        "id": "2265acf8cb8707c4",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "b7e34177f056a897",
        "name": "Ikea motion out",
        "mode": "link",
        "links": [
            "0e891d6bbf506488",
            "17fce7e4a549f3c4"
        ],
        "x": 2895,
        "y": 700,
        "wires": []
    },
    {
        "id": "650b9ca485aeaab1",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman smoke detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Fire === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            } \n\t        else if (context.get(zigbeeid) === 1) {  \n                msg = updmsg1; \n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Fire === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n        else {\n    \t    msg = updmsg0; \n    \t}\n    } else {\n        msg = null;\n    }\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else { \n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 400,
        "wires": [
            [
                "6eb23e8f2824607a"
            ],
            [
                "6eb23e8f2824607a"
            ],
            [
                "6eb23e8f2824607a"
            ],
            [
                "6eb23e8f2824607a"
            ]
        ]
    },
    {
        "id": "12f603fb7ce38886",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman smoke detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 400,
        "wires": []
    },
    {
        "id": "3a6f80efb587496b",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman Smoke in",
        "links": [
            "6eb23e8f2824607a"
        ],
        "x": 2955,
        "y": 400,
        "wires": [
            [
                "12f603fb7ce38886"
            ]
        ]
    },
    {
        "id": "6eb23e8f2824607a",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "228df667ae552978",
        "name": "Heiman Smoke out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "3a6f80efb587496b"
        ],
        "x": 2895,
        "y": 400,
        "wires": []
    },
    {
        "id": "498ba43866809f9d",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-03 motion senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar extramsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n    if ( idx !== 0 ) {\n\t    if (msg.payload.ZbReceived[zigbeeid].Occupancy === 1) {\n            if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 1);      \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n            }\n            else {\n                msg = null;\n            }\n        }\n\t    else if (msg.payload.ZbReceived[zigbeeid].Occupancy === 0) {\n            if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n                context.set(zigbeeid, 0);   \n                msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n            } \n            else if (context.get(zigbeeid) === 0) {  \n                msg = updmsg0; \n            }\n        }\n\t    else {\n    \t    msg = null; \n\t    }\n    } else {\n        msg = null;\n    }\n    \n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2610,
        "y": 1440,
        "wires": [
            [
                "be8648d4896c7fc0"
            ],
            [
                "be8648d4896c7fc0"
            ],
            [
                "be8648d4896c7fc0"
            ],
            [
                "be8648d4896c7fc0"
            ]
        ]
    },
    {
        "id": "e8f24b6b346293fe",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-03 motion",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3130,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9e5cc2582878cf49",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-03 in",
        "links": [
            "be8648d4896c7fc0"
        ],
        "x": 2955,
        "y": 1440,
        "wires": [
            [
                "e8f24b6b346293fe"
            ]
        ]
    },
    {
        "id": "be8648d4896c7fc0",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-03 out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "9e5cc2582878cf49"
        ],
        "x": 2895,
        "y": 1440,
        "wires": []
    },
    {
        "id": "55ef8afd05fe2e88",
        "type": "ui_dropdown",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "",
        "label": "Apparaat",
        "tooltip": "",
        "place": "",
        "group": "9493153c6a285be5",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "device",
        "topicType": "str",
        "className": "",
        "x": 4000,
        "y": 740,
        "wires": [
            [
                "9519be1631bb453c"
            ]
        ]
    },
    {
        "id": "4b21f1fef5a51773",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 3670,
        "y": 1760,
        "wires": [
            [
                "b08ac8676e34eb55"
            ]
        ]
    },
    {
        "id": "42c5a1b287c92ddc",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "896b3999999cb97c",
        "name": "extract devicenames",
        "func": "\nmsg.options = msg.payload.map(obj => {\n   var rObj = {};\n   //rObj[obj.label] = obj.bridge+\"/\"+obj.Device;\n   rObj[obj.label] = obj.bridge+\"/\"+obj.Device+\"/\"+obj.Name+\"/\"\n   return rObj;\n});\n\nmsg.payload = {};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3880,
        "y": 820,
        "wires": [
            [
                "55ef8afd05fe2e88"
            ]
        ]
    },
    {
        "id": "eddf6e8fdf7a9e7c",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "Prefix for asking del?",
        "func": "if (msg.topic === \"del\") {\n    flow.set(\"delbuffer\", msg.payload)\n    \n    msg.topic = \"IDX tabel: \" + msg.payload.name + \", \" + msg.payload.zigbeeid + \" verwijderen?\";\n    msg.payload = \"Wil je dit device verwijderen uit de IDX tabel?\"\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4100,
        "y": 660,
        "wires": [
            [
                "30c882c6f623dbb6"
            ]
        ]
    },
    {
        "id": "30c882c6f623dbb6",
        "type": "ui_toast",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Annuleren",
        "cancel": "Verwijderen",
        "raw": true,
        "className": "",
        "topic": "",
        "name": "Del asking pop-up",
        "x": 4330,
        "y": 660,
        "wires": [
            [
                "be041a7afb57e35e"
            ]
        ]
    },
    {
        "id": "be041a7afb57e35e",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "bdaf844989e00ee8",
        "name": "Del in zigbee tabel",
        "func": "if (msg.payload === \"Verwijderen\") {\n    msg.payload = flow.get(\"delbuffer\")\n    var devs = flow.get(\"t2ztable\") || {};\n    var flowdeltype = msg.payload.type;\n    var flowdelid = msg.payload.zigbeeid;\n    delete devs[msg.payload.zigbeeid];\n    var dev = flow.get(\"t2zdevices\") || {};\n    delete dev[msg.payload.zigbeeid];\n    if (flowdeltype === \"Remote (E1743)\" || flowdeltype === \"Plug (E1603)\" || flowdeltype === \"Plug (E1702)\" || flowdeltype === \"Plug (E1708)\") {\n        flow.set(flowdelid, undefined);\n    }\n    \n    msg.topic = \"IDX tabel: \" + msg.payload.name + \", \" + msg.payload.zigbeeid + \" is verwijdert.\";\n    msg.payload = \"Device is niet verwijdert in de sonoff bridge, alleen op deze webpagina.\"\n    var reconfig = flow.get(\"t2ztable\") || {}\n    flow.set(\"delbuffer\", \"\");\n    return [msg,{payload:Object.values(reconfig)}];\n}\n\nif (msg.payload === \"Annuleren\") {\n        flow.set(\"delbuffer\", \"\");\n        return;\n}\n\nmsg.topic = msg.payload.name;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4570,
        "y": 580,
        "wires": [
            [
                "49a573f99df9de32",
                "c9fa347ab81afe51"
            ],
            [
                "29079e4881f8691a"
            ]
        ]
    },
    {
        "id": "1618df8f7b35f3d3",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Powerplug",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if ( idx !== 0 ) {\n                if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\"};\n                }\n                else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\"};\n                }\n\t\t        else {\n        \t\t    msg = null;\n\t\t        }\n            } else {\n                msg = null;\n            }\n            \n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var linkmsginfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, linkmsginfo];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n    if ( msg.payload.nvalue === 1) {\n        var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n        return [msgpow1, null];\n    } else if ( msg.payload.nvalue === 0) {\n        var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msgpow0, null];//\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 1120,
        "wires": [
            [
                "f8218807ecd71335"
            ],
            [
                "f8218807ecd71335"
            ]
        ]
    },
    {
        "id": "82dc3a27f4dbba7d",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl Powerplug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3100,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f3944dc4535573f4",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl powerplug in",
        "links": [
            "f8218807ecd71335"
        ],
        "x": 2955,
        "y": 1120,
        "wires": [
            [
                "82dc3a27f4dbba7d"
            ]
        ]
    },
    {
        "id": "f8218807ecd71335",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "0a2e01214bded454",
        "name": "Lidl powerplug out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "f3944dc4535573f4"
        ],
        "x": 2895,
        "y": 1120,
        "wires": []
    },
    {
        "id": "555d40212bc6dc53",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff Powerplug",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if ( idx !== 0 ) {\n                if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\"};\n                }\n                else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                    msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\"};\n                }\n\t\t        else {\n        \t\t    msg = null;\n\t\t        }\n            } else {\n                msg = null;\n            }\n            \n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var linkmsginfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, linkmsginfo];\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n    if ( msg.payload.nvalue === 1) {\n        var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1},\"Endpoint\":1}};\n        return [msgpow1, null];\n    } else if ( msg.payload.nvalue === 0) {\n        var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0},\"Endpoint\":1}};\n        return [msgpow0, null];//\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 1500,
        "wires": [
            [
                "b3979067ddfa23d7"
            ],
            [
                "b3979067ddfa23d7"
            ]
        ]
    },
    {
        "id": "0d0ad47e5d5cd43d",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff S26R2ZB plug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3120,
        "y": 1500,
        "wires": []
    },
    {
        "id": "67849fb16d88cf6d",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff plug in",
        "links": [
            "b3979067ddfa23d7"
        ],
        "x": 2955,
        "y": 1500,
        "wires": [
            [
                "0d0ad47e5d5cd43d"
            ]
        ]
    },
    {
        "id": "b3979067ddfa23d7",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff plug out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "67849fb16d88cf6d"
        ],
        "x": 2895,
        "y": 1500,
        "wires": []
    },
    {
        "id": "665a14339afa6db7",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": " Sonoff SNZB-02 temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\nvar array = [];\nvar hum\nvar humstat\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    if ( idx !== 0 ) {\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"Temperature\")) {\n            var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n            var temp = (Math.round(tempdummy * 10))/10.0;\n            array[0] = temp;\n            \n            let storehum = context.get(zigbeeid);\n            if (storehum === undefined) {\n                array[1] = 0;\n                array[2] = 0;\n            } else {\n                array[1] = storehum[1];\n                array[2] = storehum[2];\n            }\n            context.set(zigbeeid, array);\n            \n            \n            if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"Humidity\")) {\n                hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n                humstat = 0;\n                \n                if ( hum < 30 ) {\n                    humstat = 2;\n                }\n                else if (( hum >= 30) && ( hum <= 45))  {\n                    humstat = 0;\n                }\n                else if (( hum >= 46) && ( hum <= 70))  {\n                    humstat = 1;\n                }\n                else {\n                    humstat = 3;\n                }\n        \n                array[0] = temp;\n                array[1] = hum;\n                array[2] = humstat;\n                context.set(zigbeeid, array);\n                \n        \n                if (temp !== undefined && hum !== undefined) {\n                    msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \"\"}};\n                } else {\n                    msg = null;\n                }    \n            } else {\n                if (temp !== undefined) {\n                    msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + array[1] + \";\" + array[2] + \"\"}};\n                } else {\n                    msg = null;\n                }   \n            }                \n        } else if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"Humidity\")) {\n            hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n            humstat = 0;\n                \n            if ( hum < 30 ) {\n                humstat = 2;\n            }\n            else if (( hum >= 30) && ( hum <= 45))  {\n                humstat = 0;\n            }\n            else if (( hum >= 46) && ( hum <= 70))  {\n                humstat = 1;\n            }\n            else {\n                humstat = 3;\n            }\n            \n            let storetemp = context.get(zigbeeid);\n            if (storetemp === undefined) {\n                array[0] = 0;\n            } else {\n                array[0] = storetemp[0];\n            }\n             \n            array[1] = hum;\n            array[2] = humstat;\n            \n            context.set(zigbeeid, array);\n            if (hum !== undefined) {\n                msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + array[0] + \";\" + hum + \";\" + humstat + \"\"}};\n            } else {\n                msg = null;\n            }\n        }\n        \n    } else {\n        msg = null;\n    }\n    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else { \n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 1560,
        "wires": [
            [
                "772864c8ca3b2d75"
            ],
            [
                "772864c8ca3b2d75"
            ],
            [
                "772864c8ca3b2d75"
            ],
            [
                "772864c8ca3b2d75"
            ]
        ]
    },
    {
        "id": "8dd6e4a26f0576c7",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-02 tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3140,
        "y": 1560,
        "wires": []
    },
    {
        "id": "29f45b6f02c41d45",
        "type": "link in",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-02 in",
        "links": [
            "772864c8ca3b2d75"
        ],
        "x": 2955,
        "y": 1560,
        "wires": [
            [
                "8dd6e4a26f0576c7"
            ]
        ]
    },
    {
        "id": "772864c8ca3b2d75",
        "type": "link out",
        "z": "fe9ee8c084b47472",
        "g": "72778dde22d80e88",
        "name": "Sonoff SNZB-02 out",
        "mode": "link",
        "links": [
            "17fce7e4a549f3c4",
            "29f45b6f02c41d45"
        ],
        "x": 2895,
        "y": 1560,
        "wires": []
    },
    {
        "id": "9634171a37a8c62a",
        "type": "debug",
        "z": "fe9ee8c084b47472",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 260,
        "wires": []
    },
    {
        "id": "de1cb90cfdc4b089",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 240,
        "wires": [
            [
                "fe77199228f6fa60"
            ]
        ]
    },
    {
        "id": "fe77199228f6fa60",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "",
        "func": "msg.topic = \"tele/tasmota_963592/SENSOR\"\nmsg.payload = {\"ZbReceived\":{\"0xC5B1\":{\"Device\":\"0xC5B1\",\"Name\":\"Sonoff_Temperatuur\",\"Temperature\":23.8,\"Humidity\":94.68,\"Endpoint\":1,\"LinkQuality\":94}}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 240,
        "wires": [
            [
                "9634171a37a8c62a",
                "de7d9995f69a63a6"
            ]
        ]
    },
    {
        "id": "de7d9995f69a63a6",
        "type": "json",
        "z": "fe9ee8c084b47472",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1070,
        "y": 300,
        "wires": [
            [
                "9c4b062463c4e794",
                "f92a5159e97a77a4"
            ]
        ]
    },
    {
        "id": "84fcdff80c8dfad0",
        "type": "delay",
        "z": "fe9ee8c084b47472",
        "g": "44758f092409c09e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4270,
        "y": 1800,
        "wires": [
            [
                "2e7efb15b32cef6b"
            ]
        ]
    },
    {
        "id": "16cea01ca40a00cb",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 280,
        "wires": [
            [
                "2b593f08c53dbba2"
            ]
        ]
    },
    {
        "id": "2b593f08c53dbba2",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "",
        "func": "msg.topic = \"tele/tasmota_963592/SENSOR\"\n//msg.payload = {\"ZbReceived\":{\"0xC5B1\":{\"Device\":\"0xC5B1\",\"Name\":\"Sonoff_Temperatuur\",\"Temperature\":23.8,\"Humidity\":94.68,\"Endpoint\":1,\"LinkQuality\":94}}}\nmsg.payload = {\"ZbReceived\":{\"0xC5B1\":{\"Device\":\"0xC5B1\",\"Name\":\"Sonoff_Temperatuur\",\"Temperature\":29.8,\"Endpoint\":1,\"LinkQuality\":94}}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 280,
        "wires": [
            [
                "9634171a37a8c62a",
                "de7d9995f69a63a6"
            ]
        ]
    },
    {
        "id": "0f56be5f459fe358",
        "type": "inject",
        "z": "fe9ee8c084b47472",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 320,
        "wires": [
            [
                "92692e3e3549dd66"
            ]
        ]
    },
    {
        "id": "92692e3e3549dd66",
        "type": "function",
        "z": "fe9ee8c084b47472",
        "name": "",
        "func": "msg.topic = \"tele/tasmota_963592/SENSOR\"\n//msg.payload = {\"ZbReceived\":{\"0xC5B1\":{\"Device\":\"0xC5B1\",\"Name\":\"Sonoff_Temperatuur\",\"Temperature\":23.8,\"Humidity\":94.68,\"Endpoint\":1,\"LinkQuality\":94}}}\nmsg.payload = {\"ZbReceived\":{\"0xC5B1\":{\"Device\":\"0xC5B1\",\"Name\":\"Sonoff_Temperatuur\",\"Humidity\":14.68,\"Endpoint\":1,\"LinkQuality\":94}}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 320,
        "wires": [
            [
                "de7d9995f69a63a6",
                "9634171a37a8c62a"
            ]
        ]
    },
    {
        "id": "184c77467f039f6e",
        "type": "ui_spacer",
        "z": "fe9ee8c084b47472",
        "name": "spacer",
        "group": "9a96a8b1.92db78",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "a4074fc57e597d9a",
        "type": "ui_spacer",
        "z": "fe9ee8c084b47472",
        "name": "spacer",
        "group": "9bf204c0d54b6e3e",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "877310ae86ef81c3",
        "type": "ui_spacer",
        "z": "fe9ee8c084b47472",
        "name": "spacer",
        "group": "9bf204c0d54b6e3e",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "3964dcd80ae57a52",
        "type": "ui_spacer",
        "z": "fe9ee8c084b47472",
        "name": "spacer",
        "group": "9bf204c0d54b6e3e",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "7f6c2a13e6bc37ba",
        "type": "ui_spacer",
        "z": "fe9ee8c084b47472",
        "name": "spacer",
        "group": "9bf204c0d54b6e3e",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "b1bc1db1ae7424c0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "verifyservercert": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f6ad6c620c7a1df8",
        "type": "config-log",
        "logname": "DeviceLogSonoffZigbee",
        "logdir": "/home/pi/domoticz/plugins/tasmota2zigbee/",
        "stamp": "local",
        "logstyle": "plain",
        "logrotate": true,
        "logcompress": false,
        "logrotatecount": "15",
        "logsize": "100"
    },
    {
        "id": "ab17d46e1b772514",
        "type": "ui_group",
        "name": "Tasmota editor",
        "tab": "abe3d4c.9322328",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9493153c6a285be5",
        "type": "ui_group",
        "name": "Set idx nummers en idx tabel",
        "tab": "abe3d4c.9322328",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d325c76.7444a38",
        "type": "ui_group",
        "name": "Zigbee tabel",
        "tab": "abe3d4c.9322328",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e91865c0e53e9f2",
        "type": "ui_group",
        "name": "",
        "tab": "abe3d4c.9322328",
        "order": 7,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4133b8f6529bf1a5",
        "type": "ui_group",
        "name": "Versie nummer",
        "tab": "abe3d4c.9322328",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2d3e52c21cb8f71c",
        "type": "ui_group",
        "name": "Set custom page domoticz",
        "tab": "abe3d4c.9322328",
        "order": 6,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9bf204c0d54b6e3e",
        "type": "ui_group",
        "name": "Debug flow mqtt berichten",
        "tab": "abe3d4c.9322328",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a96a8b1.92db78",
        "type": "ui_group",
        "name": "Col2",
        "tab": "c3173234.2636e",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "abe3d4c.9322328",
        "type": "ui_tab",
        "name": "Tasmota Zigbee Admin",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c3173234.2636e",
        "type": "ui_tab",
        "name": "RPi Control",
        "icon": "dashboard",
        "order": 2
    }
]
