[
    {
        "id": "32e6b1c785b786d2",
        "type": "tab",
        "label": "Sonoff Zigbee2Domoticz",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa230766d58b72a8",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Probe to get IPs and Infos",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "ab4957c45c92c798",
            "2ae2420fae93fe5f",
            "2ee82fa6912e4647",
            "d00839372add15f2",
            "b6e455fe14a56f37"
        ],
        "x": 114,
        "y": 1179,
        "w": 622,
        "h": 142
    },
    {
        "id": "d00839372add15f2",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "",
        "group": "373ccf52.d5c97",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 220,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "373ccf52.d5c97",
        "type": "ui_group",
        "name": "Bericht naar alle bridges",
        "tab": "abe3d4c.9322328",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "abe3d4c.9322328",
        "type": "ui_tab",
        "name": "Tasmota Zigbee Admin",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "812d066c811aa8db",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota data ontvangen",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "520de2863bf342b0",
            "cecef8cc8c2c1193",
            "4f9f9724cbeb89b7",
            "5db5c3b67f4218b7",
            "b6ed5f4cd718bf9b",
            "b5a2e68b2ecaa1f9",
            "cb80ab4b8d230bd0",
            "d41f574abdf8c5dd"
        ],
        "env": [],
        "x": 114,
        "y": 899,
        "w": 412,
        "h": 262
    },
    {
        "id": "05a2f116f05b8c19",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Herbenoem Zigbee apparaten",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "d33963f3ee2f7ef1",
            "39b828367fc868a1",
            "4d3a4ccd6c419799",
            "202da5354877d0e8",
            "e42c3f20342ec925",
            "edea2f707eaa6c2e",
            "21a702d22e35399a",
            "d1ba4237ef3c3242"
        ],
        "env": [],
        "x": 1034,
        "y": 1299,
        "w": 992,
        "h": 202
    },
    {
        "id": "edcd4b20761bc8e4",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Alle zigbee apparaten",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "e669c6020ec33ea2",
            "82b014a353b034a7",
            "943de23188f1e72a"
        ],
        "env": [],
        "x": 1034,
        "y": 1199,
        "w": 572,
        "h": 82
    },
    {
        "id": "bc769b1b3ab8db3f",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Last Seen and Battery Notification",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "54e16cbd001413fd",
            "2dc045fd70544cb5",
            "e157d9879540a216",
            "e9fd972a641bf538",
            "3ca55e67a1a23c62",
            "49984443b00b6a39",
            "93d507cb91268b43"
        ],
        "x": 114,
        "y": 1339,
        "w": 892,
        "h": 162
    },
    {
        "id": "ddaee9b1391688ae",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Manage zigbee bridge",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "738203cee5b7576e",
            "5f0c4ecb4356aec6",
            "a876b2262d2d8972",
            "5a82ae65dd933d20",
            "d3729f0632afe0c5",
            "457267156cd6a79d"
        ],
        "env": [],
        "x": 1034,
        "y": 1019,
        "w": 812,
        "h": 162
    },
    {
        "id": "054419e6dfea3c5a",
        "type": "group",
        "z": "32e6b1c785b786d2",
        "name": "Stuur naar alle zigbee bridges",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#3f93cf"
        },
        "nodes": [
            "58976e2c36dc1310",
            "f3db21b9723e0cfc",
            "7164e9ee53edfd3b",
            "c70e98768b4cdaf1",
            "37e55389157ed1ad",
            "739e79715feeb4f0"
        ],
        "env": [],
        "x": 1034,
        "y": 859,
        "w": 652,
        "h": 142
    },
    {
        "id": "58976e2c36dc1310",
        "type": "ui_table",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "group": "373ccf52.d5c97",
        "name": "Tasmota Devices",
        "order": 2,
        "width": "8",
        "height": "3",
        "columns": [
            {
                "field": "link",
                "title": "Name",
                "width": "35%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATE.Wifi.RSSI",
                "title": "RSSI",
                "width": "10%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATUS2.StatusFWR.Version",
                "title": "FW",
                "width": "17%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATE.Uptime",
                "title": "Uptime",
                "width": "17%",
                "align": "right",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "12%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Del",
                "width": "3%",
                "align": "right",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1150,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a6a5a94e584da383",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "name": "",
        "topic": "tele/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 560,
        "wires": [
            [
                "7f8b0447b2aab70c"
            ]
        ]
    },
    {
        "id": "fcdf7fc73dd7af70",
        "type": "mqtt out",
        "z": "32e6b1c785b786d2",
        "name": "MQTT Server",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b1bc1db1ae7424c0",
        "x": 1720,
        "y": 720,
        "wires": []
    },
    {
        "id": "28760220d0b4981f",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota commands",
        "info": "ZbPermitJoin 1 = pairing mode voor 60sec\n\nZbName = Friendly name invoeren\n   voorbeeld: ZbName 0x2590,Test_deurcontact\n   \nZbForget <device> = verwijderen device\n\nChange channel:\nZbConfig {\"Channel\":12}\n\nChange panid:\nZbConfig {\"PanID\":\"0x1A69\"}\nhttps://tasmota.github.io/docs/Commands/#zbconfig",
        "x": 330,
        "y": 320,
        "wires": []
    },
    {
        "id": "adf1e03e1e45ba46",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Deurcontact",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)\n\nCode send by device:\nDevice: \"0x2590\"\nName: \"Test_deurcontact\"\nContact: 0  (0=contact dicht, 1=contact open)\nEndpoint: 1\nLinkQuality: 134",
        "x": 3050,
        "y": 160,
        "wires": []
    },
    {
        "id": "ba9518b91748cf45",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Beweging",
        "info": "Which domoticz dummy needed:\n- Switch motion (schakelaar beweging)\n\nCode send by device:\nDevice: \"0x11F0\"\nName: \"Test_beweging\"\nOccupancy: 1 (Occupancy 1 = motion, 0 = no motion)\nEndpoint: 1\nLinkQuality: 173",
        "x": 3040,
        "y": 240,
        "wires": []
    },
    {
        "id": "e8b6a0c9bf81e4bc",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Rookmelder",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)\n\nCode send by device:\n3 messages when pushing test button\n\n*** Bericht 1:***\nDevice: \"0x7460\"\nName: \"Test_rookmelder\"\nModelId: \"lumi.sensor_smoke\"\nEndpoint: 1\nLinkQuality: 157\n\n*** Bericht 2:***\nDevice: \"0x7460\"\nName: \"Test_rookmelder\"\n0500<00: 00000FF0000\nZoneStatusChange: 0\nFire: 0\nEndpoint: 1\nLinkQuality: 157\n\n*** Bericht 3:***\nDevice: \"0x7460\"\nName: \"Test_rookmelder\"\nBatteryVoltage: 3.05\nBatteryPercentage: 100\nSmokeDensity: 0\nEndpoint: 1\nLinkQuality: 157\n",
        "x": 3050,
        "y": 320,
        "wires": []
    },
    {
        "id": "0f01862f36be38ab",
        "type": "switch",
        "z": "32e6b1c785b786d2",
        "name": "Filter Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "RESULT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "LWT",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "SENSOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "domoticz/out",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO1",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO2",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "INFO3",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "STATE",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 670,
        "y": 580,
        "wires": [
            [
                "38309599e8c8d9e1"
            ],
            [
                "57712e7cca74ee29"
            ],
            [
                "7b575e0384d79c38"
            ],
            [
                "42ee16d8e12d67f4"
            ],
            [
                "d7df5ed598257739"
            ],
            [
                "83800a22948e6211"
            ],
            [
                "83166d5da37022e7"
            ],
            [
                "04659a5d4d4881df"
            ],
            [
                "d49bd6378f71a628"
            ]
        ]
    },
    {
        "id": "d4a33985746fb725",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic State",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 740,
        "wires": []
    },
    {
        "id": "38309599e8c8d9e1",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "d49bd6378f71a628",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic not in filter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 740,
        "wires": []
    },
    {
        "id": "d7df5ed598257739",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Info1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 580,
        "wires": []
    },
    {
        "id": "83166d5da37022e7",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Info3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 660,
        "wires": []
    },
    {
        "id": "83800a22948e6211",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic Info2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 620,
        "wires": []
    },
    {
        "id": "1bda201a500415c1",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Osram Mini Switch",
        "info": "Which domoticz dummy needed:\n- Selector switch (keuzeschakelaar)\n\nSelector switch setup:\n0   = Off\n10  = Up\n20  = Up: hold\n30  = Up: release\n40  = Circle: click\n50  = Circle: hold\n60  = Circle: release\n70  = Down\n80  = Down: hold\n90  = Down: release\n100 = Standby\n\nCode send by device:\n*** Knop omhoog kort ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0006!01: \"\"\nPower: 1\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop omhoog lang ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0008!03: \"\"\nDimmerStop: true\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop midden kort bericht 1 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0008!04: \"FE0A00\"\nDimmer: 254\nPower: 1\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden kort bericht 2 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0300!0A: \"72010A00\"\nCT:370\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden lang bericht 1 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0300!03: \"FE0200\"\nSat: 254\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden lang bericht 2 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0300!01: \"0119\"\nHueMove: 1\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop midden lang bericht 3 ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0003!01: \"0000\"\nHueMove: 0\nEndpoint: 3\nLinkQuality: 157\n\n*** Knop omlaag kort ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0006!00: \"\"\nPower: 0\nEndpoint: 2\nLinkQuality: 157\n\n*** Knop omlaag lang ***\nDevice: \"0x5FE5\"\nName: \"Test_osramswitch\"\n0008!01: \"0126\"\nDimmerMove: 1\nEndpoint: 2\nLinkQuality: 157\n\n",
        "x": 3050,
        "y": 400,
        "wires": []
    },
    {
        "id": "08ef5d34fa2f5b9a",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "To MQTT Server",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 680,
        "wires": []
    },
    {
        "id": "ad071cf746fd4fd2",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "add src",
        "func": "msg.src = 'tasmota';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 500,
        "wires": [
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "3d4832ee8bb60568",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Lidl CCT bulb",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)\n\nCode send by device:\nDevice: \"0xAF37\"\nName: \"Test_Lamp\"\nPower: 1\nDimmer: null\nHue: 0\nSat: 254\nX: 45874\nY: 19660\nCT: 153  // 153 = warm white, 500 = cold\nColorMode: 1\nRGB: \"FF0000\"\nRGBb: \"000000\"\nEndpoint: 1\nLinkQuality: 134",
        "x": 3030,
        "y": 460,
        "wires": []
    },
    {
        "id": "2ecc0c65e522d6ab",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "name": "",
        "topic": "domoticz/out",
        "qos": "2",
        "datatype": "auto",
        "broker": "b1bc1db1ae7424c0",
        "inputs": 0,
        "x": 170,
        "y": 620,
        "wires": [
            [
                "7e37ed3f80e6353e"
            ]
        ]
    },
    {
        "id": "7e37ed3f80e6353e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "add src",
        "func": "msg.src = 'domoticz';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 620,
        "wires": [
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "bf65146bd8d167aa",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 520,
        "wires": [
            [
                "269bdd93eaa30e8b"
            ]
        ]
    },
    {
        "id": "e4ed3f9404692874",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "MQTT Server",
        "links": [
            "fe1b30e1681a0b63",
            "b6f143479743cebb",
            "996c20a7f43bb922",
            "7c39b8f4766d8af2",
            "1f300e21c525ad4d",
            "38b2d29beeb9a423",
            "b58fbdd1751a2cd8",
            "34ebad78371bfc78",
            "b0b36a57add1ac04",
            "3f1912b0dfd34a67",
            "4651c83ecce552f8",
            "5b1817084e40c724",
            "507ba46b5bd868d8",
            "a4e976adce8e3559",
            "f7a9bdcae6412aef",
            "32e21a68283df2bb",
            "fff088000ef81383",
            "08ad024704865499"
        ],
        "x": 1575,
        "y": 700,
        "wires": [
            [
                "fcdf7fc73dd7af70",
                "08ef5d34fa2f5b9a"
            ]
        ]
    },
    {
        "id": "57712e7cca74ee29",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Topic LWT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 460,
        "wires": []
    },
    {
        "id": "7b575e0384d79c38",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 500,
        "wires": [
            [
                "273c9ce4a5f2a5fc",
                "1805c2bdbbc563df",
                "397d1f72ee768ae0"
            ]
        ]
    },
    {
        "id": "273c9ce4a5f2a5fc",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota Json Receive",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 480,
        "wires": []
    },
    {
        "id": "c870e39f002e4de2",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Todo list",
        "info": "- Voltage batterij voor alle devices checken\n- Heiman Co controlleren.\n- Xiaomi temperatuur\n    - voorspelling kijken\n    - batterij toevoegen",
        "x": 300,
        "y": 360,
        "wires": []
    },
    {
        "id": "269bdd93eaa30e8b",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota ID filter",
        "func": "var idx_zigbee_table = [\n  //[ device type(0), domoticz idx(1), domoticz idx battery voltage(2), domoticz idx battery percentage(3), domoticz idx link quality(4), Extra function (5), tasmota device(6), tasmota topic(7)]   // syntax\n    [5,  57,  0, 0, 0, 0, \"0xC7AB\", \"tasmota_96373D\"],    // Lidl Livarno Lux E27 9W CCT Bulb\n    [4,  29, 67, 0, 0, 0, \"0xB275\", \"tasmota_963592\"],    // Remote Maaike\n    [4,  28, 68, 0, 0, 0, \"0x65A9\", \"tasmota_963592\"],    // Remote Aukje\n    [4,  30, 69, 0, 0, 0, \"0x0447\", \"tasmota_963592\"],    // Remote Ouders\n    [3,  44, 70, 0, 0, 0, \"0x7460\", \"tasmota_96373D\"],    // Rookmelder zolder\n    [3,  42, 73, 0, 0, 0, \"0xF5CA\", \"tasmota_963592\"],    // Rookmelder Ouders\n    [3,  41, 71, 0, 0, 0, \"0xB450\", \"tasmota_963592\"],    // Rookmelder Maaike\n    [3,  40, 72, 0, 0, 0, \"0xDBE4\", \"tasmota_963592\"],    // Rookmelder Aukje\n    [7,  58, 0, 82, 0, 0, \"0xC7CB\", \"tasmota_963592\"],    // Remote Kledingkast\n    [8,  59, 0,  0, 0, 0, \"0x3743\", \"tasmota_963592\"],    // Led strip kledingkast\n    [1,  63, 79, 0, 0, 0, \"0x0F9D\", \"tasmota_9467D4\"],    // Garagepoort sensor\n    [3,  43, 74, 0, 0, 0, \"0x004B\", \"tasmota_9467D4\"],    // Rookmelder meterkast\n    [2,  45, 81, 0, 0, 0, \"0xAB75\", \"tasmota_9467D4\"],    // Beweging woonkamer\n    [6,  76, 77, 0, 0, 0, \"0xC582\", \"tasmota_96373D\"],    // CO melder zolder\n    [9,  62, 80, 0, 0, 0, \"0x4C81\", \"tasmota_9467D4\"],    // Temp woonkamer\n    [11, 78, 0,  0, 0, 0, \"0x94C1\", \"tasmota_963592\"],    // Xiaomi GZCGQ01LM lux-sensor\n    //[7,  58, 0, 82, 0, 0, \"0x48B9\", \"tasmota_96373D\"],    // Remote Kledingkast\n];\n\n//1  = Xiaomi Door sensor (extra = none)\n//2  = Xiaomi Motion Sensor (extra = Illuminance)\n//3  = Xiaomi Smoke detector (extra = none\n//4  = Osram mini switch (extra = none\n//5  = Lidl Livarno Lux E27 9W CCT Bulb (extra = none\n//6  = Heiman CO detector (extra = none\n//7  = Ikea E1743 remote (extra = none\n//8  = Ikea ICPSHC24-30EU-IL-1 LED strip supply (extra = none\n//9  = Xiaomi WSDCGQ11LM sensor (extra = none\n//10 = Ikea Powerplug (extra = none\n//11 = Xiaomi GZCGQ01LM lux-sensor (extra = none\n//12 = Xiaomi WSDCGQ01LM sensor (extra = none\n//13 = Xiaomi water sensor (doens't work)\n\nif ( msg.src === 'tasmota' ) {\n    for ( var i = 0; i < idx_zigbee_table.length; i++ ) {\n        var zigbeedevice = idx_zigbee_table[i][0];\n        var idx = idx_zigbee_table[i][1];\n        var idxbat = idx_zigbee_table[i][2];\n\t\tvar idxper = idx_zigbee_table[i][3];\n\t\tvar idxlink = idx_zigbee_table[i][4];\n\t\tvar idxextra = idx_zigbee_table[i][5];\n        var zigbeeid = idx_zigbee_table[i][6];\n        var topicname = idx_zigbee_table[i][7];   \n\n        if ( msg.payload.ZbReceived[zigbeeid] ) {\n            msg.payload.ZbReceived.idx = idx;\n            msg.payload.ZbReceived.idxbat = idxbat;\n\t\t\tmsg.payload.ZbReceived.idxper = idxper;\n\t\t\tmsg.payload.ZbReceived.idxlink = idxlink;\n\t\t\tmsg.payload.ZbReceived.idxextra = idxextra;\n\t\t\tmsg.payload.ZbReceived.zigbeeid = zigbeeid;\n            msg.payload.ZbReceived.topicname = topicname;\n            if ( zigbeedevice === 1 ) {\n                return [null, msg, null, null, null, null, null, null, null, null, null, null, null, null]; \n            } \n            else if ( zigbeedevice === 2 ) {\n                return [null, null, msg, null, null, null, null, null, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 3 ) {\n                return [null, null, null, msg, null, null, null, null, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 4 ) {\n                return [null, null, null, null, msg, null, null, null, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 5 ) {\n                return [null, null, null, null, null, msg, null, null, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 6 ) {\n                return [null, null, null, null, null, null, msg, null, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 7 ) {\n                return [null, null, null, null, null, null, null, msg, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 8 ) {\n                return [null, null, null, null, null, null, null, null, msg, null, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 9 ) {\n                return [null, null, null, null, null, null, null, null, null, msg, null, null, null, null]; \n            }\n            else if ( zigbeedevice === 10 ) {\n                return [null, null, null, null, null, null, null, null, null, null, msg, null, null, null]; \n            }\n            else if ( zigbeedevice === 11 ) {\n                return [null, null, null, null, null, null, null, null, null, null, null, msg, null, null]; \n            }\n            else if ( zigbeedevice === 12 ) {\n                return [null, null, null, null, null, null, null, null, null, null, null, null, msg, null]; \n            }\n            else if ( zigbeedevice === 13 ) {\n                return [null, null, null, null, null, null, null, null, null, null, null, null, null, msg]; \n            }\n        }\n    }\n    var getflow = flow.keys();\n    var getNodeID = (Object.keys(msg.payload.ZbReceived)[0]);\n    for ( var h = 0; h < getflow.length; h++ ) {\n        var zigbeeflowdevice = getflow[h];\n        if (zigbeeflowdevice === getNodeID){\n          flow.set(getNodeID, undefined);\n        }\n        \n    }\n    return [msg, null, null, null, null, null, null, null, null, null, null, null, null];\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    for ( var k = 0; k < idx_zigbee_table.length; k++ ) {\n        var zigbeedeviceinfo = idx_zigbee_table[k][0];\n        var idxinfo = idx_zigbee_table[k][1];\n        var idxbatinfo = idx_zigbee_table[k][2];\n\t\tvar idxperinfo = idx_zigbee_table[k][3];\n\t\tvar idxlinkinfo = idx_zigbee_table[k][4];\n\t\tvar idxextrainfo = idx_zigbee_table[k][5];\n        var zigbeeidinfo = idx_zigbee_table[k][6];\n        var topicnameinfo = idx_zigbee_table[k][7];   \n\n        if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n            msg.payload.ZbInfo.idx = idxinfo;\n            msg.payload.ZbInfo.idxbat = idxbatinfo;\n\t\t\tmsg.payload.ZbInfo.idxper = idxperinfo;\n\t\t\tmsg.payload.ZbInfo.idxlink = idxlinkinfo;\n\t\t\tmsg.payload.ZbInfo.idxextra = idxextrainfo;\n\t\t\tmsg.payload.ZbInfo.zigbeeid = zigbeeidinfo;\n            msg.payload.ZbInfo.topicname = topicnameinfo;\n            if ( zigbeedeviceinfo === 7 ) {\n                return [null, null, null, null, null, null, null, msg, null, null, null, null, null, null]; \n            }\n        }\n    }\n    return [msg, null, null, null, null, null, null, null, null, null, null, null, null];\n}\n\nif ( msg.src === 'domoticz' ) {\n    for ( var j = 0; j < idx_zigbee_table.length; j++ ) {\n        var zigbeedevicedz = idx_zigbee_table[j][0];\n        var idxdz = idx_zigbee_table[j][1];\n        var idxbatdz = idx_zigbee_table[j][2];\n        var zigbeeiddz = idx_zigbee_table[j][6];\n        var topicnamedz = idx_zigbee_table[j][7];   \n   \n        if ( idxdz === msg.payload.idx ) {\n            msg.payload.idxdz = idxdz;\n            msg.payload.idxbat = idxbatdz;\n            msg.payload.zigbeeid = zigbeeiddz;\n            msg.payload.topicname = topicnamedz;\n            if ( zigbeedevicedz === 5 ) {    \n                return [null, null, null, null, null, msg, null, null, null, null, null, null, null, null]; \n            }\n            else if ( zigbeedevicedz === 8 ) {\n                return [null, null, null, null, null, null, null, null, msg, null, null, null, null, null]; \n            }\n            else if ( zigbeedevicedz === 10 ) {\n                return [null, null, null, null, null, null, null, null, null, null, msg, null, null, null]; \n            }\n        }\n    }\n    return [msg, null, null, null, null, null, null, null, null, null, null, null, null, null]; \n}",
        "outputs": 14,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 520,
        "wires": [
            [
                "5754549a4a868ca2"
            ],
            [
                "4b827c89b5a138c4"
            ],
            [
                "9ef3e2703e3d169b"
            ],
            [
                "0958e7f86a6f7cfa"
            ],
            [
                "fe7e9b046fafa46d"
            ],
            [
                "a43480d97601b0b3"
            ],
            [
                "2ccae554b0a0eb62"
            ],
            [
                "f053a430dbc7af77"
            ],
            [
                "cc69481ddb4239d7"
            ],
            [
                "b3b7f479cadb8496"
            ],
            [
                "0c713a7cfa8a5968"
            ],
            [
                "577af1c346273217"
            ],
            [
                "1a8398e557c7f9dd"
            ],
            [
                "c9e73ce19c15f214"
            ]
        ]
    },
    {
        "id": "ad164d166565ab20",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi door senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].Contact === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].Contact === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 160,
        "wires": [
            [
                "996c20a7f43bb922"
            ],
            [
                "996c20a7f43bb922"
            ],
            [
                "996c20a7f43bb922"
            ],
            [
                "996c20a7f43bb922"
            ]
        ]
    },
    {
        "id": "902db89cf58e7d4a",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi door sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 160,
        "wires": []
    },
    {
        "id": "93278f76c19d10e5",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi motion sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 240,
        "wires": []
    },
    {
        "id": "283b251afd36b91e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi smoke detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].Fire === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].Fire === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n    else {\n\t    msg = updmsg0; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else { \n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 320,
        "wires": [
            [
                "1f300e21c525ad4d"
            ],
            [
                "1f300e21c525ad4d"
            ],
            [
                "1f300e21c525ad4d"
            ],
            [
                "1f300e21c525ad4d"
            ]
        ]
    },
    {
        "id": "943f1135c3828226",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi smoke detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 320,
        "wires": []
    },
    {
        "id": "b96a18aebbaf647b",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Osram mini switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 400,
        "wires": []
    },
    {
        "id": "74078727af5ee2e0",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Lidl Livarno CCT Bulb",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n       \n    \tif ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false};\n            }\n\t\t    else {\n    \t\t    msg = null;\n            }\n\t    }\n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n        return [msg, linkmsg];\t\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n\tvar level = (msg.payload.Level * 2.54);\n\tvar color;\n\t\t\n    if (msg.payload.Color.t === null) {\n        color = (153);    \n    } \n    else {\n        color = ((msg.payload.Color.t * 1.37) + 153);\n    }\n    if ( msg.payload.nvalue === 1) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n\t\treturn [msg, null];\n    } else if ( msg.payload.nvalue === 0) {\n        msg = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msg, null];\n    }\n    else {\n        var msgcol = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"CT\":color}}};\n        var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n        return [msgcol, msglev];\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 460,
        "wires": [
            [
                "38b2d29beeb9a423"
            ],
            [
                "38b2d29beeb9a423"
            ]
        ]
    },
    {
        "id": "29f4524a41c3bbe4",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Lidl Livarno CCT Bulb",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 460,
        "wires": []
    },
    {
        "id": "a7f14c9f10b3d453",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Heiman CO detector",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].CO === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].CO === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 520,
        "wires": [
            [
                "b58fbdd1751a2cd8"
            ],
            [
                "b58fbdd1751a2cd8"
            ],
            [
                "b58fbdd1751a2cd8"
            ],
            [
                "b58fbdd1751a2cd8"
            ]
        ]
    },
    {
        "id": "d6291551d1852638",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Heiman CO detector",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 520,
        "wires": []
    },
    {
        "id": "e3c55ccb8b099b3c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743 remote",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxper = msg.payload.ZbReceived.idxper;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n    var topicname = msg.payload.ZbReceived.topicname;\n\n    var level;\n    var percmsg;\n    var linkmsg;\n    var askbat;\n    var valuebatperc;\n    var valuelink;\n\n    function askbatidxlink() {\n        var array = [];\n        array[0] = idx;\n        array[1] = level;\n        array[2] = topicname;\n        flow.set(zigbeeid, array);\n        askbat = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\": zigbeeid,\"Read\":{\"BatteryPercentage\":false}}};\n        //askbat = null;\n        if ( idxlink !== 0 ) {\n            if (valuelink !== undefined) {\n                linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n            } else {\n                linkmsg = null;\n            }\n        } else {\n            linkmsg = null;\n        }\n    }\n    \n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n            //askbat = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\": zigbeeid,\"Read\":{\"BatteryPercentage\":false}}};\n        //} else {\n            //askbat = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\": zigbeeid,\"Read\":{\"BatteryPercentage\":true}}};\n        }\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n            \n        if (msg.payload.ZbReceived[zigbeeid].Power === 0) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"0\"};\n            level = \"0\";\n            askbatidxlink();\n        }\n        else if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n            level = \"10\";\n            askbatidxlink();    \n        } \n        else if (msg.payload.ZbReceived[zigbeeid].DimmerMove === 0) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n            level = \"20\";\n            askbatidxlink();    \n        }\n        else if (msg.payload.ZbReceived[zigbeeid].DimmerMove === 1) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n            level = \"30\";\n            askbatidxlink();    \n        }\n        else if (msg.payload.ZbReceived[zigbeeid].DimmerStop === true) {\n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n            level = \"40\";\n            askbatidxlink();   \n        } \n        else {\n         \tmsg = null;\n        }\n    \n        if ( idxper !== 0 ) {\n            if (valuebatperc !== undefined) {\n                percmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n                msg = null;\n                askbat = null;\n                linkmsg = null;\n            } else {\n                percmsg = null;\n            }\n        } else {\n            percmsg = null;\n        }\n        return [msg, percmsg, linkmsg, askbat];\n    }\n}\n\nif ( msg.src === 'tasmotainfo' ) {\n    msg.topic = \"domoticz/in\";\n    var idxperinfo = msg.payload.ZbInfo.idxper;\n    var idxlinkinfo = msg.payload.ZbInfo.idxlink;\n    var zigbeeidinfo = msg.payload.ZbInfo.zigbeeid;\n    \n    var percmsginfo;\n    var linkmsginfo;\n    var valuebatpercinfo;\n    var valuelinkinfo;\n    \n    if ( msg.payload.ZbInfo[zigbeeidinfo] ) {\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"BatteryPercentage\")) {\n            valuebatpercinfo = msg.payload.ZbInfo[zigbeeidinfo].BatteryPercentage;\n        }\n        if (msg.payload.ZbInfo[zigbeeidinfo].hasOwnProperty(\"LinkQuality\")) {\n            valuelinkinfo = msg.payload.ZbInfo[zigbeeidinfo].LinkQuality;\n        }\n        \n        if ( idxperinfo !== 0 ) {\n            if (valuebatpercinfo !== undefined) {\n                percmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxperinfo , \"svalue\": \"\" + valuebatpercinfo + \"\", \"parse\": false}}; \n            } else {\n                percmsginfo = null;\n            }\n        } else {\n            percmsginfo = null;\n        }\n        if ( idxlinkinfo !== 0 ) {\n            if (valuelinkinfo !== undefined) {\n                linkmsginfo = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlinkinfo , \"svalue\": \"\" + valuelinkinfo + \"\", \"parse\": false}}; \n            } else {\n                linkmsginfo = null;\n            }\n        } else {\n            linkmsginfo = null;\n        }\n        return [null, percmsginfo, linkmsginfo, null];\n    }\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 600,
        "wires": [
            [
                "34ebad78371bfc78"
            ],
            [
                "34ebad78371bfc78"
            ],
            [
                "34ebad78371bfc78"
            ],
            [
                "fd871c5a92505ca3"
            ]
        ]
    },
    {
        "id": "54dd8d6bf95fde5b",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743 remote",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 600,
        "wires": []
    },
    {
        "id": "42ee16d8e12d67f4",
        "type": "switch",
        "z": "32e6b1c785b786d2",
        "name": "IDX check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "idx",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 540,
        "wires": [
            [
                "bf65146bd8d167aa"
            ],
            [
                "ae0c40229b700502"
            ]
        ]
    },
    {
        "id": "ae0c40229b700502",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "no IDX availble",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 560,
        "wires": []
    },
    {
        "id": "0adbc247aab5c6ef",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "",
        "info": "loop prevent idee\n\nneem idx, als idx hetzelde is, dan stop\n\n\nconst dimmerList = [\"dimmer1\",\"dimmer2\",\"dimmer3\",\"dimmer4\"];\nlet receiving = context.get(\"receiving\") || false;\nlet source = context.get(\"source\");\nfunction propagate (value, items, noSend) {\n    items.forEach(item => {\n        if (item !== noSend) {\n            node.send({payload:value, topic:`cmnd/lighting/${item}/dimmer`});\n        }\n    });\n}\nif (!receiving) {\n    context.set(\"receiving\", true);\n    const splitTopic = msg.topic.split(\"/\");\n    context.set(\"source\", splitTopic[2]);\n    const propTimeout = setTimeout(()=>{\n        context.set(\"receiving\",false);\n    },500);\n    context.set(\"propTimeout\", propTimeout);\n    propagate(msg.payload, dimmerList, splitTopic[2]);\n} else if (msg.topic === source) {\n    let propTimeout = context.get(\"propTimeout\");\n    clearTimeout(propTimeout);\n    propTimeout = setTimeout(()=>{\n        context.set(\"receiving\",false);\n    },500);\n    context.set(\"propTimeout\", propTimeout);\n    propagate(msg.payload, dimmerList, source);\n}\nreturn null;",
        "x": 300,
        "y": 400,
        "wires": []
    },
    {
        "id": "1805c2bdbbc563df",
        "type": "gate",
        "z": "32e6b1c785b786d2",
        "name": "Gate",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "persist": false,
        "x": 1470,
        "y": 500,
        "wires": [
            [
                "269bdd93eaa30e8b",
                "d3750fa1f4bdc266"
            ]
        ]
    },
    {
        "id": "3b9a33f80d8918c6",
        "type": "change",
        "z": "32e6b1c785b786d2",
        "name": "Set Control",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "6f07890f180e41d6"
            ]
        ]
    },
    {
        "id": "6f07890f180e41d6",
        "type": "trigger",
        "z": "32e6b1c785b786d2",
        "name": "",
        "op1": "",
        "op2": "open",
        "op1type": "pay",
        "op2type": "str",
        "duration": "3000",
        "extend": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 380,
        "wires": [
            [
                "1805c2bdbbc563df"
            ]
        ]
    },
    {
        "id": "1d935a19c2d48baa",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Block-gate-in",
        "links": [
            "0ded517531ee02b6",
            "38b2d29beeb9a423",
            "b0b36a57add1ac04"
        ],
        "x": 895,
        "y": 380,
        "wires": [
            [
                "3b9a33f80d8918c6"
            ]
        ]
    },
    {
        "id": "d3750fa1f4bdc266",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Gate block",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 380,
        "wires": []
    },
    {
        "id": "e3ecd92d6e4b4333",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Osram mini switch",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\t\n\t//Up\n    if (msg.payload.ZbReceived[zigbeeid][\"0006!01\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 1 && msg.payload.ZbReceived[zigbeeid].Power === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"10\"};\n    }\n    //Up hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!05\"] === \"0026\" && msg.payload.ZbReceived[zigbeeid].DimmerMove === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"20\"};\n    }\n    //Up release\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!03\"] === \"\" && msg.payload.ZbReceived[zigbeeid].DimmerStop === true && msg.payload.ZbReceived[zigbeeid].Endpoint === 1) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"30\"};\n    }\n    //Circle\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!04\"] === \"FE0A00\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"40\"};\n    }\n    //Circle hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0300!01\"] === \"0119\" && msg.payload.ZbReceived[zigbeeid].HueMove === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"50\"};\n    }\n    //Circle release\n    else if (msg.payload.ZbReceived[zigbeeid][\"0300!01\"] === \"0000\" && msg.payload.ZbReceived[zigbeeid].HueMove === 0 && msg.payload.ZbReceived[zigbeeid].Endpoint === 3) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"60\"};\n    }\n    //Down\n    else if (msg.payload.ZbReceived[zigbeeid][\"0006!00\"] === \"\" && msg.payload.ZbReceived[zigbeeid].Endpoint === 2 && msg.payload.ZbReceived[zigbeeid].Power === 0) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"70\"};\n    }\n    //Down hold\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!01\"] === \"0126\" && msg.payload.ZbReceived[zigbeeid].DimmerMove === 1 && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"80\"};\n    }\n    //Down release\n    else if (msg.payload.ZbReceived[zigbeeid][\"0008!03\"] === \"\" && msg.payload.ZbReceived[zigbeeid].DimmerStop === true && msg.payload.ZbReceived[zigbeeid].Endpoint === 2) {\n        msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\":\"90\"};\n    } \n    else {\n        msg = null;\n    }\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 400,
        "wires": [
            [
                "4651c83ecce552f8"
            ],
            [
                "4651c83ecce552f8"
            ],
            [
                "4651c83ecce552f8"
            ],
            [
                "4651c83ecce552f8"
            ]
        ]
    },
    {
        "id": "c279eb08d2518c16",
        "type": "flogger",
        "z": "32e6b1c785b786d2",
        "name": "",
        "logfile": "zigbeelog.txt",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "f6ad6c620c7a1df8",
        "sendpane": "",
        "x": 2690,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "f73a6f39342779fd",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743",
        "info": "Which domoticz dummy needed:\n- Selector switch (keuzeschakelaar)\n\nWhich domoticz dummy for battery:\n- Percentage dummy (device CAN'T do voltage)\n\n\nSelector switch setup:\n0  = Off\n10 = On\n20 = On: hold\n30 = Off: hold\n40 = Hold: stop\n\nCode send by device:\n*** Knop streepje kort ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0006!01: \"\"\nPower: 1\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop rondje kort ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0006!00: \"\"\nPower: 0\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop streepje lang ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0008!05: \"0053\"\nDimmerMove: 0\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop streepje lang release ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\n0008!07: \"\"\nDimmerStop: true\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop rondje lang ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0008!01: \"01530000\"\nDimmermove: 1\nEndpoint: 1\nLinkQuality: 157\n\n*** Knop rondje lang release ***\nDevice: \"0x5D14\"\nName: \"Remote_kledingkast\"\n0008!07: \"\"\nDimmerStop: true\nEndpoint: 1\nLinkQuality: 157\n\n",
        "x": 3030,
        "y": 600,
        "wires": []
    },
    {
        "id": "40855101e292585d",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 led strip",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2750,
        "y": 660,
        "wires": []
    },
    {
        "id": "996c20a7f43bb922",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi doorsensor out",
        "mode": "link",
        "links": [
            "e4ed3f9404692874",
            "eb12fa8049a9c2f5"
        ],
        "x": 2515,
        "y": 160,
        "wires": []
    },
    {
        "id": "eb12fa8049a9c2f5",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi doorsensor in",
        "links": [
            "4b827c89b5a138c4",
            "996c20a7f43bb922"
        ],
        "x": 2575,
        "y": 160,
        "wires": [
            [
                "902db89cf58e7d4a"
            ]
        ]
    },
    {
        "id": "7c39b8f4766d8af2",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi motion sensor out",
        "mode": "link",
        "links": [
            "d37266ca5003002f",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 240,
        "wires": []
    },
    {
        "id": "d37266ca5003002f",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi motion sensor in",
        "links": [
            "7c39b8f4766d8af2",
            "9ef3e2703e3d169b"
        ],
        "x": 2575,
        "y": 240,
        "wires": [
            [
                "93278f76c19d10e5"
            ]
        ]
    },
    {
        "id": "81b0bc5b842b0fd9",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi smoke detector in",
        "links": [
            "1f300e21c525ad4d",
            "0958e7f86a6f7cfa"
        ],
        "x": 2575,
        "y": 320,
        "wires": [
            [
                "943f1135c3828226"
            ]
        ]
    },
    {
        "id": "1f300e21c525ad4d",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi smoke detector out",
        "mode": "link",
        "links": [
            "81b0bc5b842b0fd9",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 320,
        "wires": []
    },
    {
        "id": "b5be4ef2c3766c16",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Osram mini switch in",
        "links": [
            "4651c83ecce552f8",
            "fe7e9b046fafa46d"
        ],
        "x": 2575,
        "y": 400,
        "wires": [
            [
                "b96a18aebbaf647b"
            ]
        ]
    },
    {
        "id": "4651c83ecce552f8",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Osram mini switch out",
        "mode": "link",
        "links": [
            "b5be4ef2c3766c16",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 400,
        "wires": []
    },
    {
        "id": "7f8f8c048a5a9e50",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Lidl Livarno CCT in",
        "links": [
            "38b2d29beeb9a423",
            "a43480d97601b0b3"
        ],
        "x": 2575,
        "y": 460,
        "wires": [
            [
                "29f4524a41c3bbe4"
            ]
        ]
    },
    {
        "id": "38b2d29beeb9a423",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Lidl Livarno CCT out",
        "mode": "link",
        "links": [
            "1d935a19c2d48baa",
            "7f8f8c048a5a9e50",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 460,
        "wires": []
    },
    {
        "id": "6bf493cc359ec5a6",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Heiman CO in",
        "links": [
            "b58fbdd1751a2cd8",
            "2ccae554b0a0eb62"
        ],
        "x": 2575,
        "y": 520,
        "wires": [
            [
                "d6291551d1852638"
            ]
        ]
    },
    {
        "id": "b58fbdd1751a2cd8",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Heiman CO out",
        "mode": "link",
        "links": [
            "6bf493cc359ec5a6",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 520,
        "wires": []
    },
    {
        "id": "0140bb4b0c66e251",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743 in",
        "links": [
            "34ebad78371bfc78",
            "f053a430dbc7af77"
        ],
        "x": 2575,
        "y": 600,
        "wires": [
            [
                "54dd8d6bf95fde5b"
            ]
        ]
    },
    {
        "id": "34ebad78371bfc78",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743 out",
        "mode": "link",
        "links": [
            "0140bb4b0c66e251",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 600,
        "wires": []
    },
    {
        "id": "b80d54c068c87573",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 in",
        "links": [
            "b0b36a57add1ac04",
            "cc69481ddb4239d7"
        ],
        "x": 2575,
        "y": 660,
        "wires": [
            [
                "40855101e292585d"
            ]
        ]
    },
    {
        "id": "b0b36a57add1ac04",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 out",
        "mode": "link",
        "links": [
            "1d935a19c2d48baa",
            "b80d54c068c87573",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 660,
        "wires": []
    },
    {
        "id": "612c74f54c20b775",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM Temp sensor",
        "info": "Which domoticz dummy needed:\n- Temp+Hum+Baro\n\n\ntele/tasmota_9467D4/SENSOR : msg.payload : Object\nobject\nZbReceived: object\n0x4C81: object\nDevice: \"0x4C81\"\nName: \"Temp_woonkamer\"\nTemperature: 20.78\nHumidity: 59.98\nPressure: 995\nPressureScale: -1\nPressureScaledValue: 9957\nSeaPressure: 995\nEndpoint: 1\nLinkQuality: 149\n\n20.68;54.87;0;996;0\n\nhttps://www.domoticz.com/wiki/Domoticz_API/JSON_URL's#Temperature.2Fhumidity.2Fbarometer",
        "x": 3100,
        "y": 720,
        "wires": []
    },
    {
        "id": "36acea7aea3e0385",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi WSDCGQ11LM temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n    var temp = (Math.round(tempdummy * 10))/10.0;\n    var hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n    var humstat = 0;\n    if ( hum < 30 ) {\n        humstat = 2;\n    }\n    else if (( hum >= 30) && ( hum <= 45))  {\n        humstat = 0;\n    }\n    else if (( hum >= 46) && ( hum <= 70))  {\n        humstat = 1;\n    }\n    else {\n        humstat = 3;\n    }\n    var bar = msg.payload.ZbReceived[zigbeeid].Pressure;\n    if (temp !== undefined && hum !== undefined && bar !== undefined) {\n        msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \";\" + bar + \";0\"}};\n    } else {\n        msg = null;\n    }    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 720,
        "wires": [
            [
                "3f1912b0dfd34a67"
            ],
            [
                "3f1912b0dfd34a67"
            ],
            [
                "3f1912b0dfd34a67"
            ],
            [
                "3f1912b0dfd34a67"
            ]
        ]
    },
    {
        "id": "b371b25fac84c93c",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2780,
        "y": 720,
        "wires": []
    },
    {
        "id": "a3c1ee29665026e7",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM in",
        "links": [
            "3f1912b0dfd34a67",
            "b3b7f479cadb8496"
        ],
        "x": 2575,
        "y": 720,
        "wires": [
            [
                "b371b25fac84c93c"
            ]
        ]
    },
    {
        "id": "3f1912b0dfd34a67",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "a3c1ee29665026e7",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 720,
        "wires": []
    },
    {
        "id": "4862248cd24ad41a",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 led strip",
        "info": "Which domoticz dummy needed:\n- Switch dimmer (schakelaar dimmer)\n\nCode send by device:\nDevice: \"0x3743\"\nName: \"Lamp kleding\"\nDimmer: 25\nPower: 1 (or 0 when lamp off)\nEndpoint: 1\nLinkQuality: 134",
        "x": 3070,
        "y": 660,
        "wires": []
    },
    {
        "id": "39bf1ccf5b3a5faf",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Ikea Powerplug",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\"};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\"};\n            }\n\t\t    else {\n    \t\t    msg = null;\n\t\t    }\n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n    var ZigbeeID = msg.payload.zigbeeid\n    var topicname = msg.payload.topicname;\n    if ( msg.payload.nvalue === 1) {\n        var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n        return [msgpow1, null];\n    } else if ( msg.payload.nvalue === 0) {\n        var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n        return [msgpow0, null];//\n    }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 780,
        "wires": [
            [
                "5b1817084e40c724"
            ],
            [
                "5b1817084e40c724"
            ]
        ]
    },
    {
        "id": "5b1817084e40c724",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Ikea powerplug out",
        "mode": "link",
        "links": [
            "e4ed3f9404692874",
            "f2361df7a8546931"
        ],
        "x": 2515,
        "y": 780,
        "wires": []
    },
    {
        "id": "f2361df7a8546931",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Ikea powerplug in",
        "links": [
            "5b1817084e40c724",
            "0c713a7cfa8a5968"
        ],
        "x": 2575,
        "y": 780,
        "wires": [
            [
                "2ae6865e6ac023ef"
            ]
        ]
    },
    {
        "id": "2ae6865e6ac023ef",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Ikea powerplug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2720,
        "y": 780,
        "wires": []
    },
    {
        "id": "60902a7262550dc1",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi GZCGQ01LM lux-sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n    var lux = msg.payload.ZbReceived[zigbeeid].Illuminance\n\tif (lux !== undefined) {\n        msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + lux + \"\"}};\n    } else {\n        msg = null;\n    }    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;    \n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 840,
        "wires": [
            [
                "507ba46b5bd868d8"
            ],
            [
                "507ba46b5bd868d8"
            ],
            [
                "507ba46b5bd868d8"
            ],
            [
                "507ba46b5bd868d8"
            ]
        ]
    },
    {
        "id": "507ba46b5bd868d8",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi GZCGQ01LM lux-sensor out",
        "mode": "link",
        "links": [
            "620de55a7aed2e0c",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 840,
        "wires": []
    },
    {
        "id": "620de55a7aed2e0c",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi GZCGQ01LM lux-sensor in",
        "links": [
            "507ba46b5bd868d8",
            "577af1c346273217"
        ],
        "x": 2575,
        "y": 840,
        "wires": [
            [
                "6dc6133320d04d9d"
            ]
        ]
    },
    {
        "id": "6dc6133320d04d9d",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi GZCGQ01LM lux-sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2770,
        "y": 840,
        "wires": []
    },
    {
        "id": "6847bc92cfc5190c",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi WSDCGQ01LM temp sensor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value batterij voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value batterij percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    \n    var tempdummy = msg.payload.ZbReceived[zigbeeid].Temperature;\n    var temp = (Math.round(tempdummy * 10))/10.0;\n    var hum = msg.payload.ZbReceived[zigbeeid].Humidity;\n    var humstat = 0;\n    if ( hum < 30 ) {\n        humstat = 2;\n    }\n    else if (( hum >= 30) && ( hum <= 45))  {\n        humstat = 0;\n    }\n    else if (( hum >= 46) && ( hum <= 70))  {\n        humstat = 1;\n    }\n    else {\n        humstat = 3;\n    }\n    if (temp !== undefined && hum !== undefined) {\n        msg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\":\"udevice\", \"idx\": idx, \"svalue\": \"\" + temp + \";\" + hum + \";\" + humstat + \"\"}};\n    } else {\n        msg = null;\n    }    \n    \n    if ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n    } else { \n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 920,
        "wires": [
            [
                "a4e976adce8e3559"
            ],
            [
                "a4e976adce8e3559"
            ],
            [
                "a4e976adce8e3559"
            ],
            [
                "a4e976adce8e3559"
            ]
        ]
    },
    {
        "id": "96aebd5c66f18d71",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ01LM Temp sensor",
        "info": "Which domoticz dummy needed:\n- Temp+Hum",
        "x": 3100,
        "y": 920,
        "wires": []
    },
    {
        "id": "27205c55fd92a391",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ01LM tempsensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2780,
        "y": 920,
        "wires": []
    },
    {
        "id": "c35a66d7c5a69ec6",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM in",
        "links": [
            "1a8398e557c7f9dd",
            "a4e976adce8e3559"
        ],
        "x": 2575,
        "y": 920,
        "wires": [
            [
                "27205c55fd92a391"
            ]
        ]
    },
    {
        "id": "a4e976adce8e3559",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "c35a66d7c5a69ec6",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 920,
        "wires": []
    },
    {
        "id": "90f2623d0786a9e3",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi GZCGQ01LM lux sensor",
        "info": "Which domoticz dummy needed:\n- Lux",
        "x": 3090,
        "y": 840,
        "wires": []
    },
    {
        "id": "c5662457d9d1f2ba",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Ikea Powerplug",
        "info": "Which domoticz dummy needed:\n- Switch (schakelaar)",
        "x": 3060,
        "y": 780,
        "wires": []
    },
    {
        "id": "4b827c89b5a138c4",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi doorsensor passtrue in",
        "mode": "link",
        "links": [
            "619657caaabed12e",
            "eb12fa8049a9c2f5"
        ],
        "x": 1995,
        "y": 160,
        "wires": []
    },
    {
        "id": "619657caaabed12e",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi doorsensor passtrue out",
        "links": [
            "4b827c89b5a138c4"
        ],
        "x": 2055,
        "y": 160,
        "wires": [
            [
                "ad164d166565ab20"
            ]
        ]
    },
    {
        "id": "9ef3e2703e3d169b",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi motion passtrue in",
        "mode": "link",
        "links": [
            "8859e1626155ce50",
            "d37266ca5003002f"
        ],
        "x": 1995,
        "y": 240,
        "wires": []
    },
    {
        "id": "8859e1626155ce50",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi motion passtrue out",
        "links": [
            "9ef3e2703e3d169b"
        ],
        "x": 2055,
        "y": 240,
        "wires": [
            [
                "036b4f949a146d7a"
            ]
        ]
    },
    {
        "id": "0958e7f86a6f7cfa",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi smoke passtrue in",
        "mode": "link",
        "links": [
            "81b0bc5b842b0fd9",
            "d9db49d0d2111c96"
        ],
        "x": 1995,
        "y": 320,
        "wires": []
    },
    {
        "id": "d9db49d0d2111c96",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi smoke passtrue out",
        "links": [
            "0958e7f86a6f7cfa"
        ],
        "x": 2055,
        "y": 320,
        "wires": [
            [
                "283b251afd36b91e"
            ]
        ]
    },
    {
        "id": "fe7e9b046fafa46d",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Osram mini switch passtrue in",
        "mode": "link",
        "links": [
            "96a9ba30ab4242d6",
            "b5be4ef2c3766c16"
        ],
        "x": 1995,
        "y": 400,
        "wires": []
    },
    {
        "id": "96a9ba30ab4242d6",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Osram mini switch passtrue out",
        "links": [
            "fe7e9b046fafa46d"
        ],
        "x": 2055,
        "y": 400,
        "wires": [
            [
                "e3ecd92d6e4b4333"
            ]
        ]
    },
    {
        "id": "a43480d97601b0b3",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Lidl Livarno CCT passtrue in",
        "mode": "link",
        "links": [
            "7f8f8c048a5a9e50",
            "cef06f729c47c34b"
        ],
        "x": 1995,
        "y": 460,
        "wires": []
    },
    {
        "id": "cef06f729c47c34b",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Lidl Livarno CCT passtrue out",
        "links": [
            "a43480d97601b0b3"
        ],
        "x": 2055,
        "y": 460,
        "wires": [
            [
                "74078727af5ee2e0"
            ]
        ]
    },
    {
        "id": "2ccae554b0a0eb62",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Heiman CO passtrue in",
        "mode": "link",
        "links": [
            "273dbf580278d699",
            "6bf493cc359ec5a6"
        ],
        "x": 1995,
        "y": 520,
        "wires": []
    },
    {
        "id": "273dbf580278d699",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Heiman CO passtrue out",
        "links": [
            "2ccae554b0a0eb62"
        ],
        "x": 2055,
        "y": 520,
        "wires": [
            [
                "a7f14c9f10b3d453"
            ]
        ]
    },
    {
        "id": "f053a430dbc7af77",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743 passtrue in",
        "mode": "link",
        "links": [
            "0140bb4b0c66e251",
            "e71c9c90170608a3",
            "372ad568c052f2cc"
        ],
        "x": 1995,
        "y": 600,
        "wires": []
    },
    {
        "id": "e71c9c90170608a3",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Ikea E1743 passtrue out",
        "links": [
            "f053a430dbc7af77"
        ],
        "x": 2055,
        "y": 600,
        "wires": [
            [
                "e3c55ccb8b099b3c"
            ]
        ]
    },
    {
        "id": "cc69481ddb4239d7",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 LED passtrue in",
        "mode": "link",
        "links": [
            "69e480d5a2306292",
            "b80d54c068c87573"
        ],
        "x": 1995,
        "y": 660,
        "wires": []
    },
    {
        "id": "69e480d5a2306292",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 LED passtrue out",
        "links": [
            "cc69481ddb4239d7"
        ],
        "x": 2055,
        "y": 660,
        "wires": [
            [
                "f7a424fbfaeca8b8"
            ]
        ]
    },
    {
        "id": "b3b7f479cadb8496",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM temp passtrue in",
        "mode": "link",
        "links": [
            "330e3c8d4d49643e",
            "a3c1ee29665026e7"
        ],
        "x": 1995,
        "y": 720,
        "wires": []
    },
    {
        "id": "330e3c8d4d49643e",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM temp passtrue out",
        "links": [
            "b3b7f479cadb8496"
        ],
        "x": 2055,
        "y": 720,
        "wires": [
            [
                "36acea7aea3e0385"
            ]
        ]
    },
    {
        "id": "0c713a7cfa8a5968",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Ikea Powerplug passtrue in",
        "mode": "link",
        "links": [
            "a3b9cf15f168221e",
            "f2361df7a8546931"
        ],
        "x": 1995,
        "y": 780,
        "wires": []
    },
    {
        "id": "a3b9cf15f168221e",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Power plug passtrue out",
        "links": [
            "0c713a7cfa8a5968"
        ],
        "x": 2055,
        "y": 780,
        "wires": [
            [
                "39bf1ccf5b3a5faf"
            ]
        ]
    },
    {
        "id": "577af1c346273217",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi GZCGQ01LM Lux passtrue in",
        "mode": "link",
        "links": [
            "26e569e6a1eb2867",
            "620de55a7aed2e0c"
        ],
        "x": 1995,
        "y": 840,
        "wires": []
    },
    {
        "id": "26e569e6a1eb2867",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi GZCGQ01LM Lux passtrue out",
        "links": [
            "577af1c346273217"
        ],
        "x": 2055,
        "y": 840,
        "wires": [
            [
                "60902a7262550dc1"
            ]
        ]
    },
    {
        "id": "1a8398e557c7f9dd",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ01LM temp passtrue in",
        "mode": "link",
        "links": [
            "74b5fa30a733b173",
            "c35a66d7c5a69ec6"
        ],
        "x": 1995,
        "y": 920,
        "wires": []
    },
    {
        "id": "74b5fa30a733b173",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ01LM temp passtrue out",
        "links": [
            "1a8398e557c7f9dd"
        ],
        "x": 2055,
        "y": 920,
        "wires": [
            [
                "6847bc92cfc5190c"
            ]
        ]
    },
    {
        "id": "28f9407743c02b71",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Flogger link",
        "links": [],
        "x": 2575,
        "y": 1060,
        "wires": [
            [
                "c279eb08d2518c16"
            ]
        ]
    },
    {
        "id": "c9e73ce19c15f214",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Watersensor passtrue in",
        "mode": "link",
        "links": [
            "561150ce2a02c788",
            "898dc4b2f4e31ea8"
        ],
        "x": 1995,
        "y": 1000,
        "wires": []
    },
    {
        "id": "561150ce2a02c788",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Watersensor passtrue out",
        "links": [
            "c9e73ce19c15f214"
        ],
        "x": 2055,
        "y": 1000,
        "wires": [
            [
                "9926f5faf437f4c6"
            ]
        ]
    },
    {
        "id": "6fd9bd11843c641b",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Watersensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2740,
        "y": 1000,
        "wires": []
    },
    {
        "id": "898dc4b2f4e31ea8",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi Watersensor in",
        "links": [
            "c9e73ce19c15f214",
            "08ad024704865499"
        ],
        "x": 2575,
        "y": 1000,
        "wires": [
            [
                "6fd9bd11843c641b"
            ]
        ]
    },
    {
        "id": "fd871c5a92505ca3",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2380,
        "y": 620,
        "wires": [
            [
                "34ebad78371bfc78"
            ]
        ]
    },
    {
        "id": "a7479fa3f6b2cba5",
        "type": "change",
        "z": "32e6b1c785b786d2",
        "name": "Set Control Ikea 1743",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "control",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 340,
        "wires": [
            [
                "5b88abafacecbe59"
            ]
        ]
    },
    {
        "id": "372ad568c052f2cc",
        "type": "link in",
        "z": "32e6b1c785b786d2",
        "name": "Block-gate-overrule-open",
        "links": [
            "f053a430dbc7af77"
        ],
        "x": 895,
        "y": 340,
        "wires": [
            [
                "a7479fa3f6b2cba5"
            ]
        ]
    },
    {
        "id": "5b88abafacecbe59",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "name": "",
        "pauseType": "delay",
        "timeout": "1800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 340,
        "wires": [
            [
                "1805c2bdbbc563df"
            ]
        ]
    },
    {
        "id": "f7a424fbfaeca8b8",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Ikea ICPSHC24 led strip",
        "func": "if ( msg.src === 'tasmota' ) {\n    msg.topic = \"domoticz/in\";\n    var idx = msg.payload.ZbReceived.idx;\n    var idxlink = msg.payload.ZbReceived.idxlink;\n    var zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\n    var linkmsg;\n    var valuelink;\n\n    if ( msg.payload.ZbReceived[zigbeeid] ) {    \n        //Set value linkQuality idx\n        if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n            valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n        }\n  \n        if ( msg.payload.ZbReceived[zigbeeid] ) {    \n            if (msg.payload.ZbReceived[zigbeeid].Power === 1) {\n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\", \"parse\": false};\n            }\n            else if (msg.payload.ZbReceived[zigbeeid].Power === 0) { \n                msg.payload = {\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\", \"parse\": false};\n            }\n\t\t    else {\n    \t\t    msg = null;\n\t\t    }\n            if ( idxlink !== 0 ) {\n                if (valuelink !== undefined) {\n                    linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n                } else {\n                    linkmsg = null;\n                }\n            } else {\n                linkmsg = null;\n            }\n            return [msg, linkmsg];\t\n        }\n    }\n}\n\nif ( msg.src === 'domoticz' ) {\n        var ZigbeeID = msg.payload.zigbeeid\n        var level = (msg.payload.Level * 2.54);\n        var topicname = msg.payload.topicname;\n        if ( msg.payload.nvalue === 1) {\n            var msgpow1 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":1}}};\n            return [msgpow1, null];\n        } else if ( msg.payload.nvalue === 0) {\n            var msgpow0 = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Power\":0}}};\n            return [msgpow0, null];//\n        }\n        else {\n            var msglev = { \"topic\": \"cmnd/\" + topicname + \"/ZbSend\",\"payload\":{\"Device\":ZigbeeID,\"Send\":{\"Dimmer\":level}}};\n            return [null, msglev];\n        }\n    return [null, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 660,
        "wires": [
            [
                "b0b36a57add1ac04"
            ],
            [
                "b0b36a57add1ac04"
            ]
        ]
    },
    {
        "id": "036b4f949a146d7a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": " Xiaomi motion senor",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar idxextra = msg.payload.ZbReceived.idxextra;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar extramsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\nvar valuelum;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n    //Set value Illuminance idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"Illuminance\")) {\n        valuelum = msg.payload.ZbReceived[zigbeeid].Illuminance;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].Occupancy === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        }\n        else {\n            msg = null;\n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].Occupancy === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n        batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    if ( idxextra !== 0 ) {\n        if (valuelum !== undefined) {\n            extramsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxextra , \"svalue\": \"\" + valuelum + \"\", \"parse\": false}}; \n        } else {\n            extramsg = null;\n        }\n    } else {\n        extramsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg, extramsg];\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 240,
        "wires": [
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ],
            [
                "7c39b8f4766d8af2"
            ]
        ]
    },
    {
        "id": "397d1f72ee768ae0",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Tasmota Json Receive",
        "mode": "link",
        "links": [],
        "x": 1115,
        "y": 440,
        "wires": []
    },
    {
        "id": "f381f56d1b97d99e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "d": true,
        "name": "E1743 last seen",
        "func": "var getflow = flow.keys();\nvar m_out=[]; //array for message objects\nvar idx;\nvar level;\n\nfor ( var i = 0; i < getflow.length; i++ ) {\n    var zigbeedevice = getflow[i]; //geeft het zigbee ID\n    idx = flow.get(zigbeedevice)[0]; //geeft array0\n    level = flow.get(zigbeedevice)[1]; //geeft array1\n    msg.topic = \"domoticz/in\";\n    msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Set Level\", \"level\": level, \"parse\": false};\n    m_out.push(msg);\n}\n\nreturn[m_out];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 680,
        "wires": [
            [
                "fff088000ef81383"
            ]
        ]
    },
    {
        "id": "ccf0ce108a646aba",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "E1743 bat+link",
        "func": "var getflow = flow.keys();\nvar topicname;\n\nfor ( var i = 0; i < getflow.length; i++ ) {\n    var zigbeedevice = getflow[i]; //geeft het zigbee ID\n    var digits = (zigbeedevice.substring(0,2));\n    if (digits == \"0x\") {\n      topicname = flow.get(zigbeedevice)[2]; //geeft array0\n      msg.topic = \"cmnd/\" + topicname + \"/ZbInfo\"\n      msg.payload = zigbeedevice;\n      node.send(msg);\n    }\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 720,
        "wires": [
            [
                "fff088000ef81383"
            ]
        ]
    },
    {
        "id": "5754549a4a868ca2",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "name": "Not in the tasmota ID filter",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 100,
        "wires": []
    },
    {
        "id": "7f8b0447b2aab70c",
        "type": "switch",
        "z": "32e6b1c785b786d2",
        "name": "Filter data",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ZbReceived",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "ZbInfo",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 300,
        "y": 560,
        "wires": [
            [
                "ad071cf746fd4fd2"
            ],
            [
                "7e50ad36620eb3e9"
            ],
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "7e50ad36620eb3e9",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "add src",
        "func": "msg.src = 'tasmotainfo';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 540,
        "wires": [
            [
                "0f01862f36be38ab"
            ]
        ]
    },
    {
        "id": "fff088000ef81383",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "",
        "mode": "link",
        "links": [
            "e4ed3f9404692874"
        ],
        "x": 1515,
        "y": 700,
        "wires": []
    },
    {
        "id": "a2fceb2efb4f1b06",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "name": "Versie 28-02-2022 release 2",
        "info": "28-02-2022 R2:\n- Tasmota zigbee UI toegevoegd\n28-02-2022 R1:\n- Bug Ikea LED Strip opgelost, bij power 0 stuurt deze nu ook een 0 ipv 1\n27-02-2022 R1:\n- Batterijtrigger aangepast van \"true\" naar \"false\", dit lijkt effect te hebben op het aantal response meldingen van het device\n26-02-2022 R1: \n- Ikea powerplug, link naar gate verwijdert\n- Batterijtrigger voor E1743 aangepast, want deze stopte soms vanzelf.\n22-02-2022 R1: \n- Node.send for ikea E1743 voor linkage updates\n- Bug Ikea Powerplug opgelost, bij power 0 stuurt deze nu ook een 0 ipv 1\n19-02-2022 R1: \n- Xiaomi Water sensor toegevoegd, niet getest\n17-02-2022 R1: \n- Gestart met Versie nummers",
        "x": 360,
        "y": 280,
        "wires": []
    },
    {
        "id": "9926f5faf437f4c6",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi water sensor (niet getest)",
        "func": "msg.topic = \"domoticz/in\";\nvar idx = msg.payload.ZbReceived.idx;\nvar idxbat = msg.payload.ZbReceived.idxbat;\nvar idxper = msg.payload.ZbReceived.idxper;\nvar idxlink = msg.payload.ZbReceived.idxlink;\nvar zigbeeid = msg.payload.ZbReceived.zigbeeid;\n\nvar batmsg;\nvar permsg;\nvar linkmsg;\nvar valuebat;\nvar valuebatdummy;\nvar valuebatperc;\nvar valuelink;\n\nif ( msg.payload.ZbReceived[zigbeeid] ) {    \n    //Set value battery voltage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryVoltage\")) {\n        valuebatdummy = msg.payload.ZbReceived[zigbeeid].BatteryVoltage;\n        valuebat = (Math.round(valuebatdummy * 10))/10.0;\n    }\n    //Set value battery percentage idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"BatteryPercentage\")) {\n        valuebatperc = msg.payload.ZbReceived[zigbeeid].BatteryPercentage;\n    }\n    //Set value linkQuality idx\n    if (msg.payload.ZbReceived[zigbeeid].hasOwnProperty(\"LinkQuality\")) {\n        valuelink = msg.payload.ZbReceived[zigbeeid].LinkQuality;\n    }\n\n\tvar updmsg0 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 0, \"svalue\": \"0\" , \"parse\": false}}; \n    var updmsg1 = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idx , \"nvalue\": 1, \"svalue\": \"0\" , \"parse\": false}}; \n    \n\tif (context.get(zigbeeid) === undefined) {\n        context.set(zigbeeid, 3);\n    }\n    \n\tif (msg.payload.ZbReceived[zigbeeid].WATER === 1) {\n        if (context.get(zigbeeid) === 0 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 1);      \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"On\" };\n        } \n\t    else if (context.get(zigbeeid) === 1) {  \n            msg = updmsg1; \n        }\n    }\n\telse if (msg.payload.ZbReceived[zigbeeid].WATER === 0) {\n        if (context.get(zigbeeid) === 1 || context.get(zigbeeid) === 3) {\n            context.set(zigbeeid, 0);   \n            msg.payload = {\"command\": \"switchlight\", \"idx\": idx, \"switchcmd\": \"Off\" };\n        } \n        else if (context.get(zigbeeid) === 0) {  \n            msg = updmsg0; \n        }\n    }\n\telse {\n\t    msg = null; \n\t}\n\t\n\tif ( idxbat !== 0 ) {\n        if (valuebat !== undefined) {\n            batmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxbat , \"svalue\": \"\" + valuebat + \"\", \"parse\": false}}; \n        } else {\n            batmsg = null;\n        }\n\t} else {\n\t    batmsg = null;\n    }\n    if ( idxper !== 0 ) {\n        if (valuebatperc !== undefined) {\n            permsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxper , \"svalue\": \"\" + valuebatperc + \"\", \"parse\": false}}; \n        } else {\n            permsg = null;\n        }\n    } else {\n        permsg = null;\n    }\n    if ( idxlink !== 0 ) {\n        if (valuelink !== undefined) {\n            linkmsg = { \"topic\": \"domoticz/in\",\"payload\":{\"command\": \"udevice\" , \"idx\": idxlink , \"svalue\": \"\" + valuelink + \"\", \"parse\": false}}; \n        } else {\n            linkmsg = null;\n        }\n    } else {\n        linkmsg = null;\n    }\n    return [msg, batmsg, permsg, linkmsg];\n}",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 1000,
        "wires": [
            [
                "08ad024704865499"
            ],
            [
                "08ad024704865499"
            ],
            [
                "08ad024704865499"
            ],
            [
                "08ad024704865499"
            ]
        ]
    },
    {
        "id": "08ad024704865499",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "name": "Xiaomi WSDCGQ11LM out",
        "mode": "link",
        "links": [
            "898dc4b2f4e31ea8",
            "e4ed3f9404692874"
        ],
        "x": 2515,
        "y": 1000,
        "wires": []
    },
    {
        "id": "135bbe3e1b66aca2",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "749058221c88e34a"
            ]
        ]
    },
    {
        "id": "749058221c88e34a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "//msg = {\"topic\":\"tele/tasmota_963592/SENSOR\",\"payload\":{\"ZbReceived\":{\"0xC7CB\":{\"Device\":\"0xC7CB\",\"Name\": \"Remote_kledingkast\", \"0006!00\": \"\", \"Power\": 0, \"Endpoint\": 1, \"LinkQuality\": 157}}}};\nmsg = {\"topic\":\"tele/tasmota_96373D/SENSOR\",\"payload\":{\"ZbReceived\":{\"0x48B9\":{\"Device\":\"0x48B9\",\"Name\": \"Remote_kledingkast\", \"0006!00\": \"\", \"Power\": 0, \"Endpoint\": 1, \"LinkQuality\": 157}}}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 780,
        "wires": [
            [
                "f5acc65f2453f2f1"
            ]
        ]
    },
    {
        "id": "f5acc65f2453f2f1",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "04659a5d4d4881df",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 700,
        "wires": [
            [
                "baeb620c32d87004",
                "d4a33985746fb725"
            ]
        ]
    },
    {
        "id": "baeb620c32d87004",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "",
        "func": "var minuts = msg.payload.Time\nvar array = minuts.split(\":\");\nvar value = parseFloat(array[1]);\nif (value < 7) {\n    msg.payload = value;\n} else {\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 700,
        "wires": [
            [
                "ccf0ce108a646aba",
                "f381f56d1b97d99e"
            ]
        ]
    },
    {
        "id": "09abadaf9cac5387",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "store Tasmota Info",
        "func": "var devs = flow.get(\"tasmotas\") || {};\n\n// extract devname\nlet devName = msg.topic.split(\"/\")[1];\n\n// get dev by name\nlet dev = devs[devName] || {};\ndev.lastTime = new Date().getTime();\n\n// extract data from msg\nif (msg.topic.includes(\"SENSOR\")) {\n    if (msg.payload.ZbReceived !== undefined) {\n        dev.zigbee = true;\n    } else {\n        dev.zigbee = false;\n        return;\n    }\n} else if (msg.topic.includes(\"STATE\")) {\n    dev.STATE = msg.payload;  \n} else if (msg.topic.includes(\"STATUS5\")) {\n    dev.STATUS5 = msg.payload; \n    dev.link = \"<a href=http://\"+msg.payload.StatusNET.IPAddress+\" target=\\\"_blank\\\">\"+devName+\"</a>\";\n} else if (msg.topic.includes(\"STATUS2\")) {\n    dev.STATUS2 = msg.payload;  \n} else if (msg.topic.includes(\"INFO2\")) {\n    dev.INFO2 = msg.payload; \n    dev.link = \"<a href=http://\"+msg.payload.IPAddress+\" target=\\\"_blank\\\">\"+devName+\"</a>\";\n} else if (msg.payload.ZbState !== undefined) {\n    dev.ZbState = msg.payload.ZbState;  \n    dev.zigbee = true;\n} \n\n// set name/link\ndev.name = devName;\nif (dev.link === undefined) dev.link = dev.name;\n\n// calc last seen\nObject.entries(devs).forEach(element => element[1].seen = Math.round((new Date().getTime()-element[1].lastTime)/60000)+\"m\");\n\n// write back\ndevs[devName] = dev;\nflow.set(\"tasmotas\", devs);\n\nreturn {payload:Object.values(devs)};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 880,
        "wires": [
            [
                "738203cee5b7576e"
            ]
        ]
    },
    {
        "id": "d08da6060205cd88",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "name": "store zigbee sensors",
        "func": "if (msg.payload.ZbReceived === undefined) return;\n\n// properties that should  show up in the status\nvar inStatus = [\"Contact\", \"Occupancy\", \"Power\", \"Power2\", \"Dimmer\", \"Hue\", \"CT\", \"ColorMode\", \"Sat\", \"RGB\", \"RGBb\", \"Temperature\", \"Humidity\", \"Pressure\", \"LocalTemperature\", \"OccupiedHeatingSetpoint\", \"PIHeatingDemand\", \"Illuminance\", \"AqaraVibrationMode\", \"AqaraVibrationsOrAngle\", \"AqaraVibration505\", \"ZoneStatusChange\", \"AqaraCube\", \"AqaraCubeSide\", \"AqaraCubeFromSide\", \"AqaraRotate\"];\n\n// properties that should not show up in the status\nvar notStatus = [\"Device\", \"Name\", \"BatteryVoltage\", \"BatteryPercentage\", \"LinkQuality\", \"Endpoint\", \"bridge\", \"lastTime\", \"seen\", \"label\", \"status\", \"EurotronicErrors\", \"0201/4008\", \"Xiaomi_64\"];\n\n//node.warn(msg.payload);\n\nvar devs = flow.get(\"t2zdevices\") || {};\n\nvar receivedSensors = []\nfor (var devN in msg.payload.ZbReceived) {\n    let devInfo = msg.payload.ZbReceived[devN];\n    let ID = devInfo.Device;\n    \n    // get dev by ID\n    let dev = devs[ID] || {};\n\n    for (let prop in devInfo) {\n        dev[prop] = devInfo[prop];\n    }\n    \n    if (devInfo.Name!==undefined) {\n        dev.label = devInfo.Name;\n    } else {\n        dev.label = ID; \n    }\n    dev.bridge = msg.topic.split(\"/\")[1];\n    dev.lastTime = new Date().getTime();\n    \n    // create status from properties\n    let status = \"\";\n    for (let prop in dev) {\n        if (inStatus.includes(prop)) {\n            status += \" \"+prop+\": \"+ dev[prop]; \n        }\n    }\n    if (status === \"\") {\n        for (let prop in dev) {\n            if (! notStatus.includes(prop)) {\n                status += \" \"+prop+\": \"+ dev[prop]; \n            }\n        }   \n    }\n    dev.status = status;\n    \n    // write back\n    devs[ID] = dev;\n    receivedSensors.push(dev);\n}\n\nObject.entries(devs).forEach(element => element[1].seen = Math.round((new Date().getTime()-element[1].lastTime)/60000)+\"m\");\n\nflow.set(\"t2zdevices\", devs);\n\nreturn [{payload:Object.values(devs)}, {payload:receivedSensors}];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1120,
        "wires": [
            [
                "e669c6020ec33ea2",
                "39b828367fc868a1"
            ],
            []
        ]
    },
    {
        "id": "275d25c96252a9db",
        "type": "catch",
        "z": "32e6b1c785b786d2",
        "name": "",
        "scope": [
            "4f9f9724cbeb89b7"
        ],
        "uncaught": false,
        "x": 810,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "ab4957c45c92c798",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "Send probe",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "ds",
        "payload": "",
        "payloadType": "str",
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "2ae2420fae93fe5f"
            ]
        ]
    },
    {
        "id": "2ae2420fae93fe5f",
        "type": "mqtt out",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "3c0dc680.cc0542",
        "x": 590,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2ee82fa6912e4647",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "Probe status",
        "func": "\nvar msg1 = { topic:\"cmnd/sonoffs/STATUS\", payload:\"5\" };\nvar msg2 = { topic:\"cmnd/tasmotas/STATUS\", payload:\"5\" };\nvar msg3 = { topic:\"cmnd/sonoffs/STATUS\", payload:\"2\" };\nvar msg4 = { topic:\"cmnd/tasmotas/STATUS\", payload:\"2\" };\nreturn [ [msg1, msg2, msg3, msg4] ];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "2ae2420fae93fe5f",
                "b6e455fe14a56f37"
            ]
        ]
    },
    {
        "id": "b6e455fe14a56f37",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "aa230766d58b72a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1280,
        "wires": []
    },
    {
        "id": "520de2863bf342b0",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 980,
        "wires": []
    },
    {
        "id": "cecef8cc8c2c1193",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "tele/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c0dc680.cc0542",
        "inputs": 0,
        "x": 190,
        "y": 940,
        "wires": [
            [
                "4f9f9724cbeb89b7",
                "cb80ab4b8d230bd0"
            ]
        ]
    },
    {
        "id": "4f9f9724cbeb89b7",
        "type": "json",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1020,
        "wires": [
            [
                "09abadaf9cac5387",
                "d08da6060205cd88"
            ]
        ]
    },
    {
        "id": "5db5c3b67f4218b7",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "stat/+/STATUS5",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c0dc680.cc0542",
        "inputs": 0,
        "x": 220,
        "y": 1000,
        "wires": [
            [
                "4f9f9724cbeb89b7",
                "520de2863bf342b0"
            ]
        ]
    },
    {
        "id": "b6ed5f4cd718bf9b",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "tele/+/INFO2",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c0dc680.cc0542",
        "inputs": 0,
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "b5a2e68b2ecaa1f9",
                "4f9f9724cbeb89b7"
            ]
        ]
    },
    {
        "id": "b5a2e68b2ecaa1f9",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "Info2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1080,
        "wires": []
    },
    {
        "id": "cb80ab4b8d230bd0",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 940,
        "wires": []
    },
    {
        "id": "d41f574abdf8c5dd",
        "type": "mqtt in",
        "z": "32e6b1c785b786d2",
        "g": "812d066c811aa8db",
        "name": "",
        "topic": "stat/+/STATUS2",
        "qos": "2",
        "datatype": "auto",
        "broker": "3c0dc680.cc0542",
        "inputs": 0,
        "x": 220,
        "y": 1060,
        "wires": [
            [
                "4f9f9724cbeb89b7",
                "b5a2e68b2ecaa1f9"
            ]
        ]
    },
    {
        "id": "d33963f3ee2f7ef1",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "label": "Apparaat",
        "tooltip": "",
        "place": "",
        "group": "4d67a6b2.8bc0e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "oldname",
        "topicType": "str",
        "className": "",
        "x": 1400,
        "y": 1340,
        "wires": [
            [
                "edea2f707eaa6c2e"
            ]
        ]
    },
    {
        "id": "39b828367fc868a1",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "extract devicenames",
        "func": "\nmsg.options = msg.payload.map(obj => {\n   var rObj = {};\n   rObj[obj.label] = obj.bridge+\"/\"+obj.Device;\n   return rObj;\n});\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 1340,
        "wires": [
            [
                "d33963f3ee2f7ef1"
            ]
        ]
    },
    {
        "id": "4d3a4ccd6c419799",
        "type": "debug",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1440,
        "wires": []
    },
    {
        "id": "202da5354877d0e8",
        "type": "ui_button",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "group": "4d67a6b2.8bc0e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Verander naam",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "rename",
        "topicType": "str",
        "x": 1420,
        "y": 1460,
        "wires": [
            [
                "edea2f707eaa6c2e"
            ]
        ]
    },
    {
        "id": "e42c3f20342ec925",
        "type": "ui_text_input",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "label": "Nieuwe naam",
        "tooltip": "",
        "group": "4d67a6b2.8bc0e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "newname",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1420,
        "y": 1400,
        "wires": [
            [
                "edea2f707eaa6c2e"
            ]
        ]
    },
    {
        "id": "edea2f707eaa6c2e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "Rename Zigbee Dev.",
        "func": "let rename = flow.get(\"renameZigbee\") || {};\nflow.set(\"renameZigbee\", rename);\n\nif (msg.topic === \"oldname\" && msg.payload !== \"\") {\n    let vars = msg.payload.split(\"/\");\n    rename.bridge = vars[0];\n    rename.device = vars[1];\n    flow.set(\"renameZigbee\", rename);\n    return;\n} else if (msg.topic === \"newname\") {\n    rename.newname = msg.payload;\n    flow.set(\"renameZigbee\", rename);\n    return;\n} else if (msg.topic === \"rename\") {\n    msg.topic = \"cmnd/\"+rename.bridge+\"/ZbName\";\n    msg.payload = rename.device + \",\" + rename.newname;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1720,
        "y": 1360,
        "wires": [
            [
                "21a702d22e35399a",
                "d1ba4237ef3c3242"
            ]
        ]
    },
    {
        "id": "21a702d22e35399a",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "Clear",
        "func": "flow.set(\"renameZigbee\", {});\ndelete msg.payload;\nmsg.payload =\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1670,
        "y": 1440,
        "wires": [
            [
                "e42c3f20342ec925",
                "4d3a4ccd6c419799"
            ]
        ]
    },
    {
        "id": "d1ba4237ef3c3242",
        "type": "mqtt out",
        "z": "32e6b1c785b786d2",
        "g": "05a2f116f05b8c19",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "3c0dc680.cc0542",
        "x": 1930,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e669c6020ec33ea2",
        "type": "ui_table",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "group": "d325c76.7444a38",
        "name": "Zigbee Devices",
        "order": 1,
        "width": "22",
        "height": "20",
        "columns": [
            {
                "field": "label",
                "title": "Label",
                "width": "15%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Device",
                "title": "Device",
                "width": "8%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "bridge",
                "title": "Bridge",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "LinkQuality",
                "title": "RSSI",
                "width": "6%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "BatteryPercentage",
                "title": "Bat. %",
                "width": "8%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "BatteryVoltage",
                "title": "Bat. V",
                "width": "8%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "6%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Status",
                "width": "33%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "del",
                "title": "Delete",
                "width": "7%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1140,
        "y": 1240,
        "wires": [
            [
                "82b014a353b034a7"
            ]
        ]
    },
    {
        "id": "82b014a353b034a7",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "name": "",
        "func": "if (msg.topic === \"del\") {\n    var devs = flow.get(\"t2zdevices\") || {};\n    delete devs[msg.payload.Device];\n    return;\n}\n\nmsg.topic = msg.payload.label;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1300,
        "y": 1240,
        "wires": [
            [
                "943de23188f1e72a"
            ]
        ]
    },
    {
        "id": "943de23188f1e72a",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "edcd4b20761bc8e4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Zigbee Device Info",
        "x": 1490,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "54e16cbd001413fd",
        "type": "inject",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Check LastSeen and Battery",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "18000",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1380,
        "wires": [
            [
                "2dc045fd70544cb5",
                "49984443b00b6a39"
            ]
        ]
    },
    {
        "id": "2dc045fd70544cb5",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Check Zigbee lastseen and Battery",
        "func": "\nvar devs = flow.get(\"t2zdevices\") || {};\n\nvar warning = \"\";\nfor (var devN in devs) {\n    let devInfo = devs[devN];\n    //node.warn(devInfo.seen + \" \" + devInfo.BatteryPercentage);\n    if (devInfo.BatteryPercentage !== undefined && devInfo.BatteryPercentage < 25) {\n         //node.warn(devInfo.Name + \" Battery Low: \" + devInfo.BatteryPercentage);\n         warning += \"\\t\" + devInfo.Name + \" battery low : \" + devInfo.BatteryPercentage + \"%\\n\"\n    }\n    if (parseInt(devInfo.seen) > 720) {\n         //node.warn(devInfo.Name + \" seems offline: \" + devInfo.seen);\n         warning += \"\\t\" + devInfo.Name + \" seems offline: \" + devInfo.seen + \"\\n\"\n    }\n}\n\n//node.warn(warning);\nif (warning !== \"\") {\n    msg.payload = \"Zigbee Devices: \" + warning;\n    msg.sound = \"none\";\n    return msg;\n}\n\nreturn null;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 1380,
        "wires": [
            [
                "e157d9879540a216",
                "93d507cb91268b43"
            ]
        ]
    },
    {
        "id": "e157d9879540a216",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "position": "top left",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Device Warning!",
        "x": 900,
        "y": 1380,
        "wires": []
    },
    {
        "id": "e9fd972a641bf538",
        "type": "comment",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Add your own notification service here:",
        "info": "",
        "x": 530,
        "y": 1460,
        "wires": []
    },
    {
        "id": "3ca55e67a1a23c62",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "Check Tasmota lastseen",
        "func": "\n\nvar devs = flow.get(\"tasmotas\") || {};\n\nvar warning = \"\";\nfor (var devN in devs) {\n    let devInfo = devs[devN];\n    //node.warn(devInfo.name + \" \" + devInfo.seen);\n    if (parseInt(devInfo.seen) > 60) {\n         //node.warn(devInfo.name + \" seems offline: \" + devInfo.seen);\n         warning += \"\\t\" + devInfo.name + \" seems offline: \" + devInfo.seen + \"\\n\"\n    }\n}\n\nnode.warn(warning);\nif (warning !== \"\") {\n    msg.payload = \"Tasmota Devices: \" + warning;\n    msg.sound = \"none\";\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "e157d9879540a216",
                "93d507cb91268b43"
            ]
        ]
    },
    {
        "id": "49984443b00b6a39",
        "type": "delay",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 340,
        "y": 1420,
        "wires": [
            [
                "3ca55e67a1a23c62"
            ]
        ]
    },
    {
        "id": "93d507cb91268b43",
        "type": "link out",
        "z": "32e6b1c785b786d2",
        "g": "bc769b1b3ab8db3f",
        "name": "SensorsProblem Notification",
        "links": [
            "764cb81e.ab379"
        ],
        "x": 835,
        "y": 1420,
        "wires": []
    },
    {
        "id": "738203cee5b7576e",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "filter Zigbee Bridges",
        "func": "let zbBridges = msg.payload.filter(function(el) {\n      return el.zigbee === true;\n  })\n\nmsg.payload = zbBridges;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 1060,
        "wires": [
            [
                "5f0c4ecb4356aec6",
                "5a82ae65dd933d20"
            ]
        ]
    },
    {
        "id": "5f0c4ecb4356aec6",
        "type": "ui_table",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "group": "5b9b9721.b33e6",
        "name": "Zigbee Bridges",
        "order": 1,
        "width": "8",
        "height": "3",
        "columns": [
            {
                "field": "link",
                "title": "Name",
                "width": "28%",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "STATE.Wifi.RSSI",
                "title": "RSSI",
                "width": "12%",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "seen",
                "title": "Last",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ZbState.Message",
                "title": "ZB Status",
                "width": "45%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1420,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a876b2262d2d8972",
        "type": "ui_dropdown",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "",
        "label": "PermitJoin",
        "tooltip": "",
        "place": "",
        "group": "5b9b9721.b33e6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "oldname",
        "x": 1430,
        "y": 1140,
        "wires": [
            [
                "d3729f0632afe0c5"
            ]
        ]
    },
    {
        "id": "5a82ae65dd933d20",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "extract devicenames",
        "func": "\nmsg.options = msg.payload.map(obj => {\n   return obj.name;\n});\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 1140,
        "wires": [
            [
                "a876b2262d2d8972"
            ]
        ]
    },
    {
        "id": "d3729f0632afe0c5",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "permitJoin",
        "func": "\nmsg.topic = \"cmnd/\"+msg.payload+\"/ZbPermitJoin\";\nmsg.payload = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 1140,
        "wires": [
            [
                "457267156cd6a79d"
            ]
        ]
    },
    {
        "id": "457267156cd6a79d",
        "type": "mqtt out",
        "z": "32e6b1c785b786d2",
        "g": "ddaee9b1391688ae",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "3c0dc680.cc0542",
        "x": 1770,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f3db21b9723e0cfc",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "func": "if (msg.topic === \"link\") {\n    return;\n}\n\nif (msg.topic === \"del\") {\n    var devs = flow.get(\"tasmotas\") || {};\n    delete devs[msg.payload.name];\n    return;\n}\n\nmsg.topic = msg.payload.name;\n\nlet str = JSON.stringify(msg.payload, null, 2);\ndelete msg.payload;\nmsg.payload = \"<pre>\" + str + \"</pre>\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 900,
        "wires": [
            [
                "37e55389157ed1ad"
            ]
        ]
    },
    {
        "id": "7164e9ee53edfd3b",
        "type": "ui_form",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "label": "Stuur een bericht naar alle bridges",
        "group": "373ccf52.d5c97",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Command",
                "value": "command",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Parameters",
                "value": "params",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "command": "",
            "params": ""
        },
        "payload": "",
        "submit": "Versturen",
        "cancel": "Leeg maken",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 1200,
        "y": 960,
        "wires": [
            [
                "c70e98768b4cdaf1"
            ]
        ]
    },
    {
        "id": "c70e98768b4cdaf1",
        "type": "function",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "func": "\nlet msg1 = {};\nmsg1.topic = \"cmnd/sonoffs/\"+msg.payload.command;\nmsg1.payload = msg.payload.params;\n\nlet msg2 = {};\nmsg2.topic = \"cmnd/tasmotas/\"+msg.payload.command;\nmsg2.payload = msg.payload.params;\n\nreturn [[msg1, msg2]];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 960,
        "wires": [
            [
                "739e79715feeb4f0"
            ]
        ]
    },
    {
        "id": "37e55389157ed1ad",
        "type": "ui_toast",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Close",
        "cancel": "",
        "raw": true,
        "topic": "",
        "name": "Tasmota Device Info",
        "x": 1560,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "739e79715feeb4f0",
        "type": "mqtt out",
        "z": "32e6b1c785b786d2",
        "g": "054419e6dfea3c5a",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "3c0dc680.cc0542",
        "x": 1610,
        "y": 960,
        "wires": []
    },
    {
        "id": "b1bc1db1ae7424c0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "verifyservercert": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f6ad6c620c7a1df8",
        "type": "config-log",
        "logname": "DeviceLogSonoffZigbee",
        "logdir": "/home/pi/domoticz/scripts/",
        "stamp": "local",
        "logstyle": "plain",
        "logrotate": true,
        "logcompress": false,
        "logrotatecount": "15",
        "logsize": "100"
    },
    {
        "id": "3c0dc680.cc0542",
        "type": "mqtt-broker",
        "name": "homeserver localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "4d67a6b2.8bc0e",
        "type": "ui_group",
        "name": "Herbenoem Zigbee Apparaat",
        "tab": "abe3d4c.9322328",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d325c76.7444a38",
        "type": "ui_group",
        "name": "Zigbee Apparaten",
        "tab": "abe3d4c.9322328",
        "order": 5,
        "disp": true,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5b9b9721.b33e6",
        "type": "ui_group",
        "name": "Tasmota Zigbee Bridges",
        "tab": "abe3d4c.9322328",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    }
]
